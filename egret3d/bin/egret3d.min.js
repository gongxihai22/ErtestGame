var __reflect=this&&this.__reflect||function(e,t,r){e.__class__=t,r?r.push(t):r=[t],e.__types__=e.__types__?r.concat(e.__types__):r},__extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);r.prototype=t.prototype,e.prototype=new r},__decorate=this&&this.__decorate||function(e,t,r,n){var i,a=arguments.length,o=3>a?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(o=(3>a?i(o):a>3?i(t,r,o):i(t,r))||o);return a>3&&o&&Object.defineProperty(t,r,o),o},__awaiter=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))(function(i,a){function o(e){try{c(n.next(e))}catch(t){a(t)}}function s(e){try{c(n["throw"](e))}catch(t){a(t)}}function c(e){e.done?i(e.value):new r(function(t){t(e.value)}).then(o,s)}c((n=n.apply(e,t||[])).next())})},__generator=this&&this.__generator||function(e,t){function r(e){return function(t){return n([e,t])}}function n(r){if(i)throw new TypeError("Generator is already executing.");for(;c;)try{if(i=1,a&&(o=a[2&r[0]?"return":r[0]?"throw":"next"])&&!(o=o.call(a,r[1])).done)return o;switch(a=0,o&&(r=[0,o.value]),r[0]){case 0:case 1:o=r;break;case 4:return c.label++,{value:r[1],done:!1};case 5:c.label++,a=r[1],r=[0];continue;case 7:r=c.ops.pop(),c.trys.pop();continue;default:if(o=c.trys,!(o=o.length>0&&o[o.length-1])&&(6===r[0]||2===r[0])){c=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){c.label=r[1];break}if(6===r[0]&&c.label<o[1]){c.label=o[1],o=r;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(r);break}o[2]&&c.ops.pop(),c.trys.pop();continue}r=t.call(e,c)}catch(n){r=[6,n],a=0}finally{i=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}var i,a,o,s,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:r(0),"throw":r(1),"return":r(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s},paper;!function(e){var t=function(){function t(){}return t.prototype.release=function(){return this._released||(e.DisposeCollecter._releases.push(this),this._released=!0),this},t}();e.BaseRelease=t,__reflect(t.prototype,"paper.BaseRelease")}(paper||(paper={}));var paper;!function(e){function t(e){e.__onRegister()}function r(e,r){if(!r)return function(r,n){var i=r.constructor;t(i),i.__serializeKeys[n]=e};var n=e.constructor;t(n),n.__serializeKeys[r]=null}function n(e,r){var n=e.constructor;t(n);var i=n.__deserializeIgnore;i.indexOf(r)<0&&i.push(r)}function i(e){t(e),e.__isSingleton?console.warn("Singleton component cannot allow multiple."):e.allowMultiple=!0}function a(e){return function(t){var r=t.requireComponents;r.indexOf(e)<0&&r.push(e)}}function o(e){t(e),e.executeInEditMode=!0}e.registerClass=t,e.serializedField=r,e.deserializedIgnore=n,e.allowMultiple=i,e.requireComponent=a,e.executeInEditMode=o}(paper||(paper={}));var egret3d;!function(e){var t=function(e){function t(t,r){void 0===t&&(t=0),void 0===r&&(r=0);var n=e.call(this)||this;return n.x=t,n.y=r,n}return __extends(t,e),t.create=function(e,r){if(void 0===e&&(e=0),void 0===r&&(r=0),this._instances.length>0){var n=this._instances.pop().set(e,r);return n._released=!1,n}return(new t).set(e,r)},t.prototype.serialize=function(){return[this.x,this.y]},t.prototype.deserialize=function(e){return this.x=e[0],this.y=e[1],this},t.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this},t.prototype.clone=function(){var e=new t;return e.copy(this),e},t.prototype.set=function(e,t){return this.x=e,this.y=t,this},t.prototype.normalize=function(){var e=this.length;return e>Number.MIN_VALUE?(this.x/=e,this.y/=e):(this.x=1,this.y=0),this},Object.defineProperty(t.prototype,"length",{get:function(){return Math.sqrt(this.sqrtLength)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sqrtLength",{get:function(){return this.x*this.x+this.y*this.y},enumerable:!0,configurable:!0}),t.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r},t.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r},t.multiply=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r},t.dot=function(e,t){return e.x*t.x+e.y*t.y},t.scale=function(e,t){return e.x=e.x*t,e.y=e.y*t,e},t.getLength=function(e){return Math.sqrt(e.x*e.x+e.y*e.y)},t.getDistance=function(e,t){return this.subtract(e,t,r),this.getLength(r)},t.equal=function(e,t,r){return void 0===r&&(r=1e-5),Math.abs(e.x-t.x)>r?!1:Math.abs(e.y-t.y)>r?!1:!0},t.lerp=function(e,t,r,n){return n.x=e.x*(1-r)+t.x*r,n.y=e.y*(1-r)+t.y*r,n},t.ZERO=new t(0,0),t.ONE=new t(1,1),t._instances=[],t}(paper.BaseRelease);e.Vector2=t,__reflect(t.prototype,"egret3d.Vector2",["egret3d.IVector2","paper.ICCS","paper.ISerializable"]);var r=new t}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(e){function t(){return function(e){c[e.name]=!0}}function r(e,t){return function(r,n){l[r.constructor.name]||(l[r.constructor.name]={"extends":r.__proto__.constructor.name,propertyList:[]}),void 0!==e&&l[r.constructor.name].propertyList.push(new o(n,e,t))}}function n(e){return c[e.constructor.name]?!0:!1}function i(e){var t=[];for(var r in e)isNaN(Number(r))&&t.push({label:r,value:e[r]});return t}function a(e){for(var t,r=e.__proto__,n=[];r;){t=r.constructor.name;var i=l[t];i&&(n=n.concat(i.propertyList)),r=r.__proto__}return n}var o=function(){function e(e,t,r){this.name=e,this.editType=t,this.option=r}return e}();e.PropertyInfo=o,__reflect(o.prototype,"paper.editor.PropertyInfo");var s;!function(e){e[e.UINT=0]="UINT",e[e.INT=1]="INT",e[e.FLOAT=2]="FLOAT",e[e.TEXT=3]="TEXT",e[e.CHECKBOX=4]="CHECKBOX",e[e.VECTOR2=5]="VECTOR2",e[e.VECTOR3=6]="VECTOR3",e[e.VECTOR4=7]="VECTOR4",e[e.QUATERNION=8]="QUATERNION",e[e.COLOR=9]="COLOR",e[e.LIST=10]="LIST",e[e.RECT=11]="RECT",e[e.MATERIAL=12]="MATERIAL",e[e.MATERIAL_ARRAY=13]="MATERIAL_ARRAY",e[e.GAMEOBJECT=14]="GAMEOBJECT",e[e.TRANSFROM=15]="TRANSFROM",e[e.COMPONENT=16]="COMPONENT",e[e.SOUND=17]="SOUND",e[e.MESH=18]="MESH",e[e.SHADER=19]="SHADER",e[e.ARRAY=20]="ARRAY"}(s=e.EditType||(e.EditType={}));var c={};e.custom=t;var l={};e.property=r,e.isCustom=n,e.getItemsFromEnum=i,e.getEditInfo=a}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t=1;e.createUUID=function(){return(t++).toString()};var r=function(){function t(){this.uuid=e.createUUID()}return t.__onRegister=function(){return this.__owner&&this.__owner===this?!1:(this.__deserializeIgnore=[],this.__serializeKeys={},this.__owner=this,!0)},__decorate([e.serializedField],t.prototype,"uuid",void 0),t}();e.BaseObject=r,__reflect(r.prototype,"paper.BaseObject",["paper.IUUID"])}(paper||(paper={}));var egret3d;!function(e){var t;!function(e){e[e.XYZ=0]="XYZ",e[e.XZY=1]="XZY",e[e.YXZ=2]="YXZ",e[e.YZX=3]="YZX",e[e.ZXY=4]="ZXY",e[e.ZYX=5]="ZYX"}(t=e.EulerOrder||(e.EulerOrder={}));var r=function(t){function r(e,r,n){void 0===e&&(e=0),void 0===r&&(r=0),void 0===n&&(n=0);var i=t.call(this)||this;return i.x=e,i.y=r,i.z=n,i}return __extends(r,t),r.create=function(e,t,n){if(void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this._instances.length>0){var i=this._instances.pop().set(e,t,n);return i._released=!1,i}return(new r).set(e,t,n)},r.prototype.serialize=function(){return[this.x,this.y,this.z]},r.prototype.deserialize=function(e){return this.fromArray(e)},r.prototype.copy=function(e){return this.set(e.x,e.y,e.z)},r.prototype.clone=function(){return r.create(this.x,this.y,this.z)},r.prototype.equal=function(e,t){return void 0===t&&(t=1e-6),Math.abs(this.x-e.x)>t?!1:Math.abs(this.y-e.y)>t?!1:Math.abs(this.z-e.z)>t?!1:!0},r.prototype.set=function(e,t,r){return this.x=e,this.y=t,this.z=r,this},r.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},r.prototype.fromPlaneProjection=function(t,r){return r||(r=this),this.add(e.helpVector3A.multiplyScalar(-t.getDistance(r),t.normal))},r.prototype.applyMatrix3=function(e,t){t||(t=this);var r=t.x,n=t.y,i=t.z,a=e.rawData;return this.x=a[0]*r+a[3]*n+a[6]*i,this.y=a[1]*r+a[4]*n+a[7]*i,this.z=a[2]*r+a[5]*n+a[8]*i,this},r.prototype.applyMatrix=function(e,t){t||(t=this);var r=t.x,n=t.y,i=t.z,a=e.rawData,o=1/(a[3]*r+a[7]*n+a[11]*i+a[15]);return this.x=(a[0]*r+a[4]*n+a[8]*i+a[12])*o,this.y=(a[1]*r+a[5]*n+a[9]*i+a[13])*o,this.z=(a[2]*r+a[6]*n+a[10]*i+a[14])*o,this},r.prototype.applyDirection=function(e,t){t||(t=this);var r=t.x,n=t.y,i=t.z,a=e.rawData;return this.x=a[0]*r+a[4]*n+a[8]*i,this.y=a[1]*r+a[5]*n+a[9]*i,this.z=a[2]*r+a[6]*n+a[10]*i,this},r.prototype.applyQuaternion=function(e,t){t||(t=this);var r=t.x,n=t.y,i=t.z,a=e.x,o=e.y,s=e.z,c=e.w,l=c*r+o*i-s*n,p=c*n+s*r-a*i,u=c*i+a*n-o*r,d=-a*r-o*n-s*i;return this.x=l*c+d*-a+p*-s-u*-o,this.y=p*c+d*-o+u*-a-l*-s,this.z=u*c+d*-s+l*-o-p*-a,this},r.prototype.normalize=function(t,n){t||(t=this);var i=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z);return i>e.EPSILON?(i=1/i,this.x*=i,this.y*=i,this.z*=i):(n||(n=r.FORWARD),this.copy(n)),this},r.prototype.negate=function(e){return e||(e=this),this.x=-1*e.x,this.y=-1*e.y,this.z=-1*e.z,this},r.prototype.addScalar=function(e,t){return t?(this.x=t.x+e,this.y=t.y+e,this.z=t.z+e):(this.x+=e,this.y+=e,this.z+=e),this},r.prototype.add=function(e,t){return t?(this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z):(this.x+=e.x,this.y+=e.y,this.z+=e.z),this},r.prototype.subtract=function(e,t){return t?(this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z):(this.x-=e.x,this.y-=e.y,this.z-=e.z),this},r.prototype.multiplyScalar=function(e,t){return t?(this.x=e*t.x,this.y=e*t.y,this.z=e*t.z):(this.x*=e,this.y*=e,this.z*=e),this},r.prototype.multiply=function(e,t){return t?(this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z):(this.x*=e.x,this.y*=e.y,this.z*=e.z),this},r.prototype.dot=function(e,t){return t||(t=e,e=this),e.x*t.x+e.y*t.y+e.z*t.z},r.prototype.cross=function(e,t){t||(t=e,e=this);var r=e.x,n=e.y,i=e.z;return this.x=n*t.z-i*t.y,this.y=i*t.x-r*t.z,this.z=r*t.y-n*t.x,this},r.prototype.lerp=function(e,t,r){r||(r=t,t=this);var n=1-e;return this.x=t.x*n+r.x*e,this.y=t.y*n+r.y*e,this.z=t.z*n+r.z*e,this},r.prototype.min=function(e,t){return t||(t=e,e=this),this.x=Math.min(e.x,t.x),this.y=Math.min(e.y,t.y),this.z=Math.min(e.z,t.z),this},r.prototype.max=function(e,t){return t||(t=e,e=this),this.x=Math.max(e.x,t.x),this.y=Math.max(e.y,t.y),this.z=Math.max(e.z,t.z),this},r.prototype.clamp=function(e,t,r){return r||(r=this),this.x=Math.max(e.x,Math.min(t.x,r.x)),this.y=Math.max(e.y,Math.min(t.y,r.y)),this.z=Math.max(e.z,Math.min(t.z,r.z)),this},r.prototype.divide=function(e){return e||(e=this),this.x/=e.x,this.y/=e.y,this.z/=e.z,this},r.prototype.getAngle=function(e){var t=this.dot(e)/Math.sqrt(this.squaredLength*r.getSqrLength(e));return Math.acos(Math.max(-1,Math.min(1,t)))},r.prototype.getSquaredDistance=function(e){return n.subtract(e,this).squaredLength},r.prototype.getDistance=function(e){return n.subtract(e,this).length},r.prototype.closestToTriangle=function(t,r){r||(r=this);var n,i,a=e.helpVector3A,o=e.helpVector3B,s=e.helpVector3C,c=e.helpVector3D,l=e.helpVector3E,p=e.helpVector3F,u=t.a,d=t.b,h=t.c;a.subtract(d,u),o.subtract(h,u),c.subtract(r,u);var f=a.dot(c),_=o.dot(c);if(0>=f&&0>=_)return this.copy(u);l.subtract(r,d);var m=a.dot(l),v=o.dot(l);if(m>=0&&m>=v)return this.copy(d);var g=f*v-m*_;if(0>=g&&f>=0&&0>=m)return n=f/(f-m),this.multiplyScalar(n,a).add(u);p.subtract(r,h);var y=a.dot(p),b=o.dot(p);if(b>=0&&b>=y)return this.copy(h);var E=y*_-f*b;if(0>=E&&_>=0&&0>=b)return i=_/(_-b),this.multiplyScalar(i,o).add(u);var x=m*b-y*v;if(0>=x&&v-m>=0&&y-b>=0)return s.subtract(h,d),i=(v-m)/(v-m+(y-b)),this.multiplyScalar(i,s).add(d);var T=1/(x+E+g);return n=E*T,i=g*T,this.add(u,o.multiplyScalar(i).add(a.multiplyScalar(n)))},r.prototype.toArray=function(e,t){return void 0===t&&(t=0),e[0+t]=this.x,e[1+t]=this.y,e[2+t]=this.z,e},Object.defineProperty(r.prototype,"length",{get:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"squaredLength",{get:function(){return this.x*this.x+this.y*this.y+this.z*this.z},enumerable:!0,configurable:!0}),r.set=function(e,t,r,n){return n.x=e,n.y=t,n.z=r,n},r.normalize=function(e){var t=r.getLength(e);return t>Number.MIN_VALUE?(e.x=e.x/t,e.y=e.y/t,e.z=e.z/t):(e.x=1,e.y=0,e.z=0),e},r.copy=function(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t},r.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r.z=e.z+t.z,r},r.multiply=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r.z=e.z*t.z,r},r.scale=function(e,t){return e.x=e.x*t,e.y=e.y*t,e.z=e.z*t,e},r.cross=function(e,t,r){return r.x=e.y*t.z-e.z*t.y,r.y=e.z*t.x-e.x*t.z,r.z=e.x*t.y-e.y*t.x,r},r.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},r.lerp=function(e,t,r,n){return n.x=e.x*(1-r)+t.x*r,n.y=e.y*(1-r)+t.y*r,n.z=e.z*(1-r)+t.z*r,n},r.equal=function(e,t,r){return void 0===r&&(r=1e-5),Math.abs(e.x-t.x)>r?!1:Math.abs(e.y-t.y)>r?!1:Math.abs(e.z-t.z)>r?!1:!0},r.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r.z=e.z-t.z,r},r.getSqrLength=function(e){return e.x*e.x+e.y*e.y+e.z*e.z},r.getLength=function(e){return Math.sqrt(this.getSqrLength(e))},r.getDistance=function(e,t){return this.getLength(this.subtract(e,t,n))},r.ZERO=new r(0,0,0),r.ONE=new r(1,1,1),r.MINUS_ONE=new r(-1,-1,-1),r.UP=new r(0,1,0),r.DOWN=new r(0,-1,0),r.LEFT=new r(-1,0,0),r.RIGHT=new r(1,0,0),r.FORWARD=new r(0,0,1),r.BACK=new r(0,0,-1),r._instances=[],r}(paper.BaseRelease);e.Vector3=r,__reflect(r.prototype,"egret3d.Vector3",["egret3d.IVector3","egret3d.IVector2","paper.ICCS","paper.ISerializable"]);var n=r.create();e.helpVector3A=r.create(),e.helpVector3B=r.create(),e.helpVector3C=r.create(),e.helpVector3D=r.create(),e.helpVector3E=r.create(),e.helpVector3F=r.create(),e.helpVector3G=r.create(),e.helpVector3H=r.create()}(egret3d||(egret3d={}));var paper;!function(e){var t=function(e){function t(t){void 0===t&&(t="");var r=e.call(this)||this;return r.name="",r._isBuiltin=!1,r.name=t,r}return __extends(t,e),t.register=function(e){this._assets[e.name]?this._assets[e.name]!==e&&(console.warn("Replace existing asset.",e.name),this._assets[e.name]=e):this._assets[e.name]=e},t.find=function(e){var t=this._assets[e];return t?t:RES.getRes(e)},t.prototype.dispose=function(e){return this._isBuiltin?(console.warn("Cannot dispose builtin asset.",this.name),!1):(delete t._assets[this.name],this.name="",!0)},t._assets={},t}(e.BaseObject);e.Asset=t,__reflect(t.prototype,"paper.Asset")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var n=t.call(this)||this;if(n.gameObject=null,n.extras=2===e.Application.playerMode?{}:void 0,n._enabled=!0,!r._createEnabled)throw new Error("Component instantiation through constructor is not allowed.");return n.gameObject=r._createEnabled,r._createEnabled=null,n}return __extends(r,t),r.__onRegister=function(){return e.BaseObject.__onRegister.call(this)?(this.__isSingleton?this._allSingletonComponents:this._allComponents).indexOf(this)>=0?(console.warn("Register component class again.",egret.getQualifiedClassName(this)),!1):(this.requireComponents?this.requireComponents=this.requireComponents.concat():this.requireComponents=[],this.__isSingleton?(this.__index=this._allSingletonComponents.length+300,this._allSingletonComponents.push(this)):(this.__index=this._allComponents.length,this._allComponents.push(this)),!0):!1},r.create=function(e,t){return this._createEnabled=t,new e},r.prototype.initialize=function(e){},r.prototype.uninitialize=function(){},Object.defineProperty(r.prototype,"isDestroyed",{get:function(){return!this.gameObject},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"enabled",{get:function(){return this._enabled},set:function(t){if(this._enabled!==t){var r=this.isActiveAndEnabled;this._enabled=t;var n=this.isActiveAndEnabled;n!==r&&e.EventPool.dispatchEvent(n?"__enabled__":"__disabled__",this)}},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isActiveAndEnabled",{get:function(){return this._enabled&&(this.gameObject._activeDirty?this.gameObject.activeInHierarchy:this.gameObject._activeInHierarchy)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"transform",{get:function(){return this.gameObject.transform},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"renderer",{get:function(){return this.gameObject.renderer},enumerable:!0,configurable:!0}),r.executeInEditMode=!1,r.allowMultiple=!1,r.requireComponents=null,r.__isSingleton=!1,r.__index=-1,r._allComponents=[],r._allSingletonComponents=[],r._createEnabled=null,__decorate([e.serializedField],r.prototype,"extras",void 0),__decorate([e.serializedField],r.prototype,"_enabled",void 0),__decorate([e.editor.property(4)],r.prototype,"enabled",null),r}(e.BaseObject);e.BaseComponent=t,__reflect(t.prototype,"paper.BaseComponent")}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(){var r=t.call(this)||this;return r.origin=e.Vector3.create(),r.direction=e.Vector3.create(),r}return __extends(r,t),r.create=function(t,n){if(void 0===t&&(t=e.Vector3.ZERO),void 0===n&&(n=e.Vector3.FORWARD),this._instances.length>0){var i=this._instances.pop().set(t,n);return i._released=!1,i}return(new r).set(t,n)},r.prototype.serialize=function(){return[this.origin.x,this.origin.y,this.origin.z,this.direction.x,this.direction.y,this.direction.z]},r.prototype.deserialize=function(e){return this.fromArray(e)},r.prototype.copy=function(e){return this.set(e.origin,e.direction)},r.prototype.clone=function(){return r.create(this.origin,this.direction)},r.prototype.set=function(e,t){return this.origin.copy(e),this.direction.copy(t),this},r.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.origin.fromArray(e,t),this.direction.fromArray(e,t+3),this},r.prototype.applyMatrix=function(e,t){return this.origin.applyMatrix(e,(t||this).origin),this.direction.applyDirection(e,(t||this).direction).normalize(),this},r.prototype.getSquaredDistance=function(t){var r=e.helpVector3A.subtract(t,this.origin).dot(this.direction);return 0>r?this.origin.getSquaredDistance(t):this.at(r,e.helpVector3A).getSquaredDistance(t)},r.prototype.getDistance=function(e){return Math.sqrt(this.getSquaredDistance(e))},r.prototype.getDistanceToPlane=function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.getDistance(this.origin)?0:-1;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:-1},r.prototype.at=function(t,r){return r||(r=e.Vector3.create()),r.multiplyScalar(t,this.direction).add(this.origin),r},r.prototype.intersectTriangle=function(t,r,n,i,a){var o=t instanceof e.Triangle,s=e.helpVector3A,c=e.helpVector3B,l=e.helpVector3C,p=e.helpVector3D,u=e.helpVector3E,d=o?t.a:t,h=o?t.b:r,f=o?t.c:n;s.subtract(h,d),c.subtract(f,d),l.cross(this.direction,c);var _=l.dot(s);if(0===_)return!1;var m=1/_;p.subtract(this.origin,d);var v=l.dot(p)*m;if(0>v||v>1)return!1;u.cross(p,s);var g=u.dot(this.direction)*m;if(0>g||v+g>1)return!1;var y=o?n:a;return y&&(y.textureCoordA.x=v,y.textureCoordA.y=g,this.at(y.distance=u.dot(c)*m,y.position)),!0},r._instances=[],r}(paper.BaseRelease);e.Ray=t,__reflect(t.prototype,"egret3d.Ray",["paper.ICCS","paper.ISerializable"]);var r=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.subMeshIndex=-1,r.triangleIndex=-1,r.distance=0,r.position=new e.Vector3,r.textureCoordA=new e.Vector2,r.textureCoordB=new e.Vector2,r.transform=null,r.collider=null,r}return __extends(r,t),r.create=function(){return this._instances.length>0?this._instances.pop():new r},r.prototype.clear=function(){this.subMeshIndex=-1,this.triangleIndex=-1,this.distance=0,this.transform=null,this.collider=null},r._instances=[],r}(paper.BaseRelease);e.RaycastInfo=r,__reflect(r.prototype,"egret3d.RaycastInfo"),e.helpRay=t.create()}(egret3d||(egret3d={}));var egret3d;!function(e){var t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r=function(r){function s(e,n){void 0===n&&(n=0);var i=r.call(this)||this;return i.rawData=null,e&&e instanceof ArrayBuffer?i.fromBuffer(e,n):(i.rawData=new Float32Array(16),i.fromArray(e||t)),i}return __extends(s,r),s.create=function(e,t){if(void 0===t&&(t=0),this._instances.length>0){var r=this._instances.pop();return r._released=!1,e?e instanceof ArrayBuffer?r.fromBuffer(e,t):r.fromArray(e,t):r.identity(),r}return new s(e,t)},s.prototype.serialize=function(){return this.rawData},s.prototype.deserialize=function(e){return this.fromArray(e)},s.prototype.copy=function(e){return this.fromArray(e.rawData),this},s.prototype.clone=function(){return s.create(this.rawData)},s.prototype.identity=function(){return this.rawData[0]=1,this.rawData[1]=0,this.rawData[2]=0,this.rawData[3]=0,this.rawData[4]=0,this.rawData[5]=1,this.rawData[6]=0,this.rawData[7]=0,this.rawData[8]=0,this.rawData[9]=0,this.rawData[10]=1,this.rawData[11]=0,this.rawData[12]=0,this.rawData[13]=0,this.rawData[14]=0,this.rawData[15]=1,this},s.prototype.set=function(e,t,r,n,i,a,o,s,c,l,p,u,d,h,f,_){var m=this.rawData;return m[0]=e,m[4]=t,m[8]=r,m[12]=n,m[1]=i,m[5]=a,m[9]=o,m[13]=s,m[2]=c,m[6]=l,m[10]=p,m[14]=u,m[3]=d,m[7]=h,m[11]=f,m[15]=_,this},s.prototype.fromArray=function(e,t){void 0===t&&(t=0);for(var r=0;16>r;++r)this.rawData[r]=e[r+t];return this},s.prototype.fromBuffer=function(e,t){return void 0===t&&(t=0),this.rawData=new Float32Array(e,t,16),this},s.prototype.fromTranslate=function(e,t){return void 0===t&&(t=!1),t||this.identity(),this.rawData[12]=e.x,this.rawData[13]=e.y,this.rawData[14]=e.z,this},s.prototype.fromRotation=function(t,r){return void 0===r&&(r=!1),this.compose(r?n.fromArray(this.rawData,12):e.Vector3.ZERO,t,e.Vector3.ONE)},s.prototype.fromEuler=function(e,t,r){void 0===t&&(t=2),void 0===r&&(r=!1);var n=Math.cos,i=Math.sin,a=e.x,o=e.y,s=e.z,c=n(a),l=i(a),p=n(o),u=i(o),d=n(s),h=i(s),f=this.rawData;switch(t){case 0:var _=c*d,m=c*h,v=l*d,g=l*h;f[0]=p*d,f[4]=-p*h,f[8]=u,f[1]=m+v*u,f[5]=_-g*u,f[9]=-l*p,f[2]=g-_*u,f[6]=v+m*u,f[10]=c*p;break;case 1:var y=c*p,b=c*u,E=l*p,x=l*u;f[0]=p*d,f[4]=-h,f[8]=u*d,f[1]=y*h+x,f[5]=c*d,f[9]=b*h-E,f[2]=E*h-b,f[6]=l*d,f[10]=x*h+y;break;case 2:var T=p*d,S=p*h,M=u*d,C=u*h;f[0]=T+C*l,f[4]=M*l-S,f[8]=c*u,f[1]=c*h,f[5]=c*d,f[9]=-l,f[2]=S*l-M,f[6]=C+T*l,f[10]=c*p;break;case 3:var O=c*p,A=c*u,R=l*p,P=l*u;f[0]=p*d,f[4]=P-O*h,f[8]=R*h+A,f[1]=h,f[5]=c*d,f[9]=-l*d,f[2]=-u*d,f[6]=A*h+R,f[10]=O-P*h;break;case 4:var T=p*d,S=p*h,M=u*d,C=u*h;f[0]=T-C*l,f[4]=-c*h,f[8]=M+S*l,f[1]=S+M*l,f[5]=c*d,f[9]=C-T*l,f[2]=-c*u,f[6]=l,f[10]=c*p;break;case 5:var _=c*d,m=c*h,v=l*d,g=l*h;f[0]=p*d,f[4]=v*u-m,f[8]=_*u+g,f[1]=p*h,f[5]=g*u+_,f[9]=m*u-v,f[2]=-u,f[6]=l*p,f[10]=c*p}return f[3]=0,f[7]=0,f[11]=0,r||(f[12]=0,f[13]=0,f[14]=0,f[15]=1),this},s.prototype.fromScale=function(e,t,r,i){return void 0===i&&(i=!1),i&&n.fromArray(this.rawData,12),this.identity(),this.rawData[0]=e,this.rawData[5]=t,this.rawData[10]=r,i&&(this.rawData[12]=n.x,this.rawData[13]=n.y,this.rawData[14]=n.z),this},s.prototype.fromAxis=function(e,t){void 0===t&&(t=0);var r=Math.cos(t),n=Math.sin(t),i=1-r,a=e.x,o=e.y,s=e.z,c=i*a,l=i*o;return this.set(c*a+r,c*o-n*s,c*s+n*o,0,c*o+n*s,l*o+r,l*s-n*a,0,c*s-n*o,l*s+n*a,i*s*s+r,0,0,0,0,1),this},s.prototype.fromAxises=function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},s.prototype.fromRotationX=function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},s.prototype.fromRotationY=function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},s.prototype.fromRotationZ=function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},s.prototype.determinant=function(){var e=this.rawData,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],o=e[5],s=e[9],c=e[13],l=e[2],p=e[6],u=e[10],d=e[14],h=e[3],f=e[7],_=e[11],m=e[15];return h*(+i*s*p-n*c*p-i*o*u+r*c*u+n*o*d-r*s*d)+f*(+t*s*d-t*c*u+i*a*u-n*a*d+n*c*l-i*s*l)+_*(+t*c*p-t*o*d-i*a*p+r*a*d+i*o*l-r*c*l)+m*(-n*o*l-t*s*p+t*o*u+n*a*p-r*a*u+r*s*l)},s.prototype.compose=function(e,t,r){var n=this.rawData,i=t.x,a=t.y,o=t.z,s=t.w,c=i+i,l=a+a,p=o+o,u=i*c,d=i*l,h=i*p,f=a*l,_=a*p,m=o*p,v=s*c,g=s*l,y=s*p,b=r.x,E=r.y,x=r.z;return n[0]=(1-(f+m))*b,n[1]=(d+y)*b,n[2]=(h-g)*b,n[3]=0,n[4]=(d-y)*E,n[5]=(1-(u+m))*E,n[6]=(_+v)*E,n[7]=0,n[8]=(h+g)*x,n[9]=(_-v)*x,n[10]=(1-(u+f))*x,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this},s.prototype.decompose=function(e,t,r){void 0===e&&(e=null),void 0===t&&(t=null),void 0===r&&(r=null);var i=this.rawData;if(e&&(e.x=i[12],e.y=i[13],e.z=i[14]),t||r){var a=n.set(i[0],i[1],i[2]).length,s=n.set(i[4],i[5],i[6]).length,c=n.set(i[8],i[9],i[10]).length,l=this.determinant();if(0>l&&(a=-a),t){o.copy(this);var p=1/a,u=1/s,d=1/c;o.rawData[0]*=p,o.rawData[1]*=p,o.rawData[2]*=p,o.rawData[4]*=u,o.rawData[5]*=u,o.rawData[6]*=u,o.rawData[8]*=d,o.rawData[9]*=d,o.rawData[10]*=d,t.fromMatrix(o)}r&&(r.x=a,r.y=s,r.z=c)}return this},s.prototype.transpose=function(e){e||(e=this);var t=e.rawData,r=this.rawData,n=0;return n=t[1],r[1]=t[4],r[4]=n,n=t[2],r[2]=t[8],r[8]=n,n=t[6],r[6]=t[9],r[9]=n,n=t[3],r[3]=t[12],r[12]=n,n=t[7],r[7]=t[13],r[13]=n,n=t[11],r[11]=t[14],r[14]=n,this},s.prototype.inverse=function(e){e||(e=this);var t=e.rawData,r=this.rawData,n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],c=t[5],l=t[6],p=t[7],u=t[8],d=t[9],h=t[10],f=t[11],_=t[12],m=t[13],v=t[14],g=t[15],y=d*v*p-m*h*p+m*l*f-c*v*f-d*l*g+c*h*g,b=_*h*p-u*v*p-_*l*f+s*v*f+u*l*g-s*h*g,E=u*m*p-_*d*p+_*c*f-s*m*f-u*c*g+s*d*g,x=_*d*l-u*m*l-_*c*h+s*m*h+u*c*v-s*d*v,T=n*y+i*b+a*E+o*x;if(0===T)return console.warn("Cannot invert matrix, determinant is 0."),this.identity();var S=1/T;return r[0]=y*S,r[1]=(m*h*o-d*v*o-m*a*f+i*v*f+d*a*g-i*h*g)*S,r[2]=(c*v*o-m*l*o+m*a*p-i*v*p-c*a*g+i*l*g)*S,r[3]=(d*l*o-c*h*o-d*a*p+i*h*p+c*a*f-i*l*f)*S,r[4]=b*S,r[5]=(u*v*o-_*h*o+_*a*f-n*v*f-u*a*g+n*h*g)*S,r[6]=(_*l*o-s*v*o-_*a*p+n*v*p+s*a*g-n*l*g)*S,r[7]=(s*h*o-u*l*o+u*a*p-n*h*p-s*a*f+n*l*f)*S,r[8]=E*S,r[9]=(_*d*o-u*m*o-_*i*f+n*m*f+u*i*g-n*d*g)*S,r[10]=(s*m*o-_*c*o+_*i*p-n*m*p-s*i*g+n*c*g)*S,r[11]=(u*c*o-s*d*o-u*i*p+n*d*p+s*i*f-n*c*f)*S,r[12]=x*S,r[13]=(u*m*a-_*d*a+_*i*h-n*m*h-u*i*v+n*d*v)*S,r[14]=(_*c*a-s*m*a-_*i*l+n*m*l+s*i*v-n*c*v)*S,r[15]=(s*d*a-u*c*a+u*i*l-n*d*l-s*i*h+n*c*h)*S,this},s.prototype.multiplyScalar=function(e,t){t||(t=this);var r=t.rawData,n=this.rawData;n[0]=r[0]*e,n[1]=r[1]*e,n[2]=r[2]*e,n[3]=r[3]*e,n[4]=r[4]*e,n[5]=r[5]*e,n[6]=r[6]*e,n[7]=r[7]*e,n[8]=r[8]*e,n[9]=r[9]*e,n[10]=r[10]*e,n[11]=r[11]*e,n[12]=r[12]*e,n[13]=r[13]*e,n[14]=r[14]*e,n[15]=r[15]*e},s.prototype.multiply=function(e,t){t||(t=e,e=this);var r=e.rawData,n=t.rawData,i=this.rawData,a=r[0],o=r[4],s=r[8],c=r[12],l=r[1],p=r[5],u=r[9],d=r[13],h=r[2],f=r[6],_=r[10],m=r[14],v=r[3],g=r[7],y=r[11],b=r[15],E=n[0],x=n[4],T=n[8],S=n[12],M=n[1],C=n[5],O=n[9],A=n[13],R=n[2],P=n[6],L=n[10],I=n[14],w=n[3],D=n[7],z=n[11],N=n[15];return i[0]=a*E+o*M+s*R+c*w,i[4]=a*x+o*C+s*P+c*D,i[8]=a*T+o*O+s*L+c*z,i[12]=a*S+o*A+s*I+c*N,i[1]=l*E+p*M+u*R+d*w,i[5]=l*x+p*C+u*P+d*D,i[9]=l*T+p*O+u*L+d*z,i[13]=l*S+p*A+u*I+d*N,i[2]=h*E+f*M+_*R+m*w,i[6]=h*x+f*C+_*P+m*D,i[10]=h*T+f*O+_*L+m*z,i[14]=h*S+f*A+_*I+m*N,i[3]=v*E+g*M+y*R+b*w,i[7]=v*x+g*C+y*P+b*D,i[11]=v*T+g*O+y*L+b*z,i[15]=v*S+g*A+y*I+b*N,this},s.prototype.premultiply=function(e){return this.multiply(e,this),this},s.prototype.lerp=function(e,t,r){r||(r=this);for(var n=1-e,i=0;16>i;i++)this.rawData[i]=r.rawData[i]*n+t.rawData[i]*e;return this},s.prototype.lookAt=function(e,t,r){return this.lookRotation(a.subtract(t,e).normalize(),r),this},s.prototype.lookRotation=function(t,r){var a=n.cross(r,t).normalize(void 0,e.Vector3.RIGHT),o=i.cross(t,a),s=this.rawData;return s[0]=a.x,s[4]=o.x,s[8]=t.x,s[1]=a.y,s[5]=o.y,s[9]=t.y,s[2]=a.z,s[6]=o.z,s[10]=t.z,this},s.prototype.getMaxScaleOnAxis=function(){var e=this.rawData,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))},s.prototype.toArray=function(e,t){void 0===t&&(t=0),e||(e=[]);for(var r=0;16>r;++r)e[r+t]=this.rawData[r];return e},s.prototype.toEuler=function(t,r){void 0===r&&(r=2);var n=this.rawData,i=n[0],a=n[4],o=n[8],s=n[1],c=n[5],l=n[9],p=n[2],u=n[6],d=n[10];switch(r){case 0:t.y=Math.asin(e.floatClamp(o,-1,1)),Math.abs(o)<.999999?(t.x=Math.atan2(-l,d),t.z=Math.atan2(-a,i)):(t.x=Math.atan2(u,c),t.z=0);break;case 1:t.z=Math.asin(-e.floatClamp(a,-1,1)),Math.abs(a)<.999999?(t.x=Math.atan2(u,c),t.y=Math.atan2(o,i)):(t.x=Math.atan2(-l,d),t.y=0);break;case 2:t.x=Math.asin(-e.floatClamp(l,-1,1)),Math.abs(l)<.999999?(t.y=Math.atan2(o,d),t.z=Math.atan2(s,c)):(t.y=Math.atan2(-p,i),t.z=0);break;case 3:t.z=Math.asin(e.floatClamp(s,-1,1)),Math.abs(s)<.999999?(t.x=Math.atan2(-l,c),t.y=Math.atan2(-p,i)):(t.x=0,t.y=Math.atan2(o,d));break;case 4:t.x=Math.asin(e.floatClamp(u,-1,1)),Math.abs(u)<.999999?(t.y=Math.atan2(-p,d),t.z=Math.atan2(-a,c)):(t.y=0,t.z=Math.atan2(s,i));break;case 5:t.y=Math.asin(-e.floatClamp(p,-1,1)),Math.abs(p)<.999999?(t.x=Math.atan2(u,d),t.z=Math.atan2(s,i)):(t.x=0,t.z=Math.atan2(-a,c))}return t},s.prototype.transformVector3=function(e,t){var r=e.x*this.rawData[0]+e.y*this.rawData[4]+e.z*this.rawData[8]+this.rawData[12],n=e.x*this.rawData[1]+e.y*this.rawData[5]+e.z*this.rawData[9]+this.rawData[13],i=e.x*this.rawData[2]+e.y*this.rawData[6]+e.z*this.rawData[10]+this.rawData[14],a=e.x*this.rawData[3]+e.y*this.rawData[7]+e.z*this.rawData[11]+this.rawData[15];return t||(t=e),t.x=r/a,t.y=n/a,t.z=i/a,t},s.prototype.transformNormal=function(e,t){var r=e.x*this.rawData[0]+e.y*this.rawData[4]+e.z*this.rawData[8],n=e.x*this.rawData[1]+e.y*this.rawData[5]+e.z*this.rawData[9],i=e.x*this.rawData[2]+e.y*this.rawData[6]+e.z*this.rawData[10];return t||(t=e),t.x=r,t.y=n,t.z=i,t},s.prototype.scale=function(e){var t=this.rawData;return t[0]*=e,t[1]*=e,t[2]*=e,t[3]*=e,t[4]*=e,t[5]*=e,t[6]*=e,t[7]*=e,t[8]*=e,t[9]*=e,t[10]*=e,t[11]*=e,t[12]*=e,t[13]*=e,t[14]*=e,t[15]*=e,this},s.prototype.add=function(e,t){return t||(t=e,e=this),this.rawData[0]=e.rawData[0]+t.rawData[0],this.rawData[1]=e.rawData[1]+t.rawData[1],this.rawData[2]=e.rawData[2]+t.rawData[2],this.rawData[3]=e.rawData[3]+t.rawData[3],this.rawData[4]=e.rawData[4]+t.rawData[4],this.rawData[5]=e.rawData[5]+t.rawData[5],this.rawData[6]=e.rawData[6]+t.rawData[6],this.rawData[7]=e.rawData[7]+t.rawData[7],this.rawData[8]=e.rawData[8]+t.rawData[8],this.rawData[9]=e.rawData[9]+t.rawData[9],this.rawData[10]=e.rawData[10]+t.rawData[10],this.rawData[11]=e.rawData[11]+t.rawData[11],this.rawData[12]=e.rawData[12]+t.rawData[12],this.rawData[13]=e.rawData[13]+t.rawData[13],this.rawData[14]=e.rawData[14]+t.rawData[14],this.rawData[15]=e.rawData[15]+t.rawData[15],this},s.perspectiveProjectLH=function(e,t,r,n,i){var a=1/Math.tan(.5*e);return i.rawData[0]=a/t,i.rawData[1]=i.rawData[2]=i.rawData[3]=0,i.rawData[4]=i.rawData[6]=i.rawData[7]=0,i.rawData[5]=a,i.rawData[8]=i.rawData[9]=0,i.rawData[10]=(n+r)/(n-r),i.rawData[11]=1,i.rawData[12]=i.rawData[13]=i.rawData[15]=0,i.rawData[14]=-2*(r*n)/(n-r),i},s.orthoProjectLH=function(e,t,r,n,i){var a=2/e,o=2/t,s=2/(n-r),c=(r+n)/(r-n);return i.rawData[0]=a,i.rawData[1]=0,i.rawData[2]=0,i.rawData[3]=0,i.rawData[4]=0,i.rawData[5]=o,i.rawData[6]=0,i.rawData[7]=0,i.rawData[8]=0,i.rawData[9]=0,i.rawData[10]=s,i.rawData[11]=0,i.rawData[12]=0,i.rawData[13]=0,i.rawData[14]=c,i.rawData[15]=1,i},s.IDENTITY=new s,s._instances=[],s}(paper.BaseRelease);e.Matrix4=r,__reflect(r.prototype,"egret3d.Matrix4",["paper.ICCS","paper.ISerializable"]);var n=e.Vector3.create(),i=e.Vector3.create(),a=e.Vector3.create(),o=r.create();e.helpMatrixA=r.create(),e.helpMatrixB=r.create(),e.helpMatrixC=r.create(),e.helpMatrixD=r.create()}(egret3d||(egret3d={}));var paper;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._raw=null,t}return __extends(t,e),t.prototype.$parse=function(e){this._raw=e},t.prototype.dispose=function(){return e.prototype.dispose.call(this)?(this._raw=null,!0):!1},t.prototype.caclByteLength=function(){return 0},t}(e.Asset);e.BaseObjectAsset=t,__reflect(t.prototype,"paper.BaseObjectAsset");var r=function(t){function r(){return null!==t&&t.apply(this,arguments)||this
}return __extends(r,t),r.prototype.createInstance=function(t){if(void 0===t&&(t=!1),!this._raw)return null;var r=(2===e.Application.playerMode,new e.Deserializer),n=r.deserialize(this._raw,t);return n},r}(t);e.RawScene=r,__reflect(r.prototype,"paper.RawScene")}(paper||(paper={}));var paper;!function(e){var t;!function(e){e.Materials="materials"}(t=e.RendererEventType||(e.RendererEventType={}));var r=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.frustumCulled=!0,e._aabbDirty=!0,e._boundingSphereDirty=!0,e._receiveShadows=!1,e._castShadows=!1,e._lightmapIndex=-1,e._boundingSphere=egret3d.Sphere.create(),e._aabb=egret3d.AABB.create(),e}return __extends(r,t),r.prototype._recalculateSphere=function(){var e=this.aabb,t=this.gameObject.transform.getWorldMatrix();this._boundingSphere.set(e.center,e.boundingSphereRadius),this._boundingSphere.center.applyMatrix(t),this._boundingSphere.radius*=t.getMaxScaleOnAxis()},Object.defineProperty(r.prototype,"receiveShadows",{get:function(){return this._receiveShadows},set:function(e){e!==this._receiveShadows&&(this._receiveShadows=e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"castShadows",{get:function(){return this._castShadows},set:function(e){e!==this._castShadows&&(this._castShadows=e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"lightmapIndex",{get:function(){return this._lightmapIndex},set:function(e){e!==this._lightmapIndex&&(this._lightmapIndex=e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"aabb",{get:function(){return this._aabbDirty&&(this.recalculateAABB(),this._aabbDirty=!1),this._aabb},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"boundingSphere",{get:function(){return this._boundingSphereDirty&&(this._recalculateSphere(),this._boundingSphereDirty=!1),this._boundingSphere},enumerable:!0,configurable:!0}),__decorate([e.serializedField,e.editor.property(4)],r.prototype,"frustumCulled",void 0),__decorate([e.serializedField],r.prototype,"_receiveShadows",void 0),__decorate([e.serializedField],r.prototype,"_castShadows",void 0),__decorate([e.serializedField],r.prototype,"_lightmapIndex",void 0),__decorate([e.editor.property(4)],r.prototype,"receiveShadows",null),__decorate([e.editor.property(4)],r.prototype,"castShadows",null),__decorate([e.editor.property(1,{minimum:-1})],r.prototype,"lightmapIndex",null),r}(e.BaseComponent);e.BaseRenderer=r,__reflect(r.prototype,"paper.BaseRenderer",["egret3d.IRaycast"])}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(e,r,n,i){void 0===e&&(e=0),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=1);var a=t.call(this)||this;return a.x=e,a.y=r,a.z=n,a.w=i,a}return __extends(r,t),r.create=function(e,t,n,i){if(void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),this._instances.length>0){var a=this._instances.pop().set(e,t,n,i);return a._released=!1,a}return(new r).set(e,t,n,i)},r.prototype.serialize=function(){return[this.x,this.y,this.z,this.w]},r.prototype.deserialize=function(e){return this.fromArray(e)},r.prototype.copy=function(e){return this.set(e.x,e.y,e.z,e.w)},r.prototype.clone=function(){return r.create(this.x,this.y,this.z,this.w)},r.prototype.set=function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},r.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},r.prototype.normalize=function(t){t||(t=this);var r=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w);return r>e.EPSILON?(r=1/r,this.x*=r,this.y*=r,this.z*=r,this.w*=r):(this.x=0,this.y=0,this.z=0,this.w=1),this},r.prototype.toArray=function(e,t){return void 0===t&&(t=0),e[0+t]=this.x,e[1+t]=this.y,e[2+t]=this.z,e[3+t]=this.w,e},Object.defineProperty(r.prototype,"length",{get:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"squaredLength",{get:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},enumerable:!0,configurable:!0}),r._instances=[],r}(paper.BaseRelease);e.Vector4=t,__reflect(t.prototype,"egret3d.Vector4",["egret3d.IVector4","egret3d.IVector3","egret3d.IVector2","paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.buffers=[],e.config=null,e}return __extends(r,t),r._createConfig=function(){var e={version:"4",asset:{version:"2.0"},extensions:{},extensionsRequired:["paper"],extensionsUsed:["paper"]};return e},r.parseFromBinary=function(t){var r=0,n={config:{},buffers:[]};if(1179937895!==t[r++]||2!==t[r++])return void console.assert(!1,"Nonsupport glTF data.");if(t[r++]!==t.byteLength)return void console.assert(!1,"Error glTF data.");for(var i=0,a=0;r<t.length;){if(i=t[r++],a=t[r++],i%4&&console.assert(!1,"Error glTF data."),1313821514===a){var o=new Uint8Array(t.buffer,4*r+t.byteOffset,i/Uint8Array.BYTES_PER_ELEMENT),s=e.io.BinReader.utf8ArrayToString(o);n.config=JSON.parse(s)}else{if(5130562!==a)return void console.assert(!1,"Nonsupport glTF data.");var c=new Uint32Array(t.buffer,4*r+t.byteOffset,i/Uint32Array.BYTES_PER_ELEMENT);n.buffers.push(c)}r+=i/4}return n},r.createMeshConfig=function(){var e=this._createConfig();return e.buffers=[{byteLength:0}],e.bufferViews=[{buffer:0,byteOffset:0,byteLength:0,target:34962}],e.accessors=[],e.meshes=[{primitives:[{attributes:{}}],extensions:{paper:{}}}],e},r.createGLTFExtensionsConfig=function(){var e=this._createConfig();return e.materials=[],e.extensions={KHR_techniques_webgl:{shaders:[],techniques:[],programs:[]},paper:{}},e},r.createTechnique=function(t){var r={name:t.name,attributes:{},uniforms:{}};for(var n in t.attributes){var i=t.attributes[n];r.attributes[n]={semantic:i.semantic}}for(var n in t.uniforms){var a=t.uniforms[n],o=void 0;o=35678!==a.type||a.value?Array.isArray(a.value)?a.value?a.value.concat():[]:a.value?a.value:[]:e.DefaultTextures.WHITE;var s=r.uniforms[n]={type:a.type,value:o};a.semantic&&(s.semantic=a.semantic)}return r},r.copyTechniqueStates=function(e,t){if(e.enable&&e.enable.length>0&&(t||(t={}),t.enable=e.enable.concat()),e.functions)for(var r in e.functions)t||(t={}),t.functions||(t.functions={}),Array.isArray(e.functions[r])?t.functions[r]=e.functions[r].concat():t.functions[r]=e.functions[r];return t},r.prototype.dispose=function(){return t.prototype.dispose.call(this)?(this.buffers.length=0,this.config=null,!0):!1},r.prototype.caclByteLength=function(){return 0},r.prototype.createTypeArrayFromBufferView=function(e,t){var r=this.buffers[e.buffer],n=r.byteOffset+(e.byteOffset||0);switch(t){case 5120:return new Int8Array(r.buffer,n,e.byteLength/Int8Array.BYTES_PER_ELEMENT);case 5121:return new Uint8Array(r.buffer,n,e.byteLength/Uint8Array.BYTES_PER_ELEMENT);case 5122:return new Int16Array(r.buffer,n,e.byteLength/Int16Array.BYTES_PER_ELEMENT);case 5123:return new Uint16Array(r.buffer,n,e.byteLength/Uint16Array.BYTES_PER_ELEMENT);case 5124:return new Int32Array(r.buffer,n,e.byteLength/Int32Array.BYTES_PER_ELEMENT);case 5125:return new Uint32Array(r.buffer,n,e.byteLength/Uint32Array.BYTES_PER_ELEMENT);case 5126:return new Float32Array(r.buffer,n,e.byteLength/Float32Array.BYTES_PER_ELEMENT);default:throw new Error}},r.prototype.createTypeArrayFromAccessor=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=0);var n=this.getAccessorTypeCount(e.type),i=n*Math.min(e.count-t,r||e.count),a=this.getBufferView(e),o=this.buffers[a.buffer],s=o.byteOffset+(a.byteOffset||0)+(e.byteOffset||0);switch(t>0&&(s+=t*n*this.getComponentTypeCount(e.componentType)),e.componentType){case 5120:return new Int8Array(o.buffer,s,i);case 5121:return new Uint8Array(o.buffer,s,i);case 5122:return new Int16Array(o.buffer,s,i);case 5123:return new Uint16Array(o.buffer,s,i);case 5124:return new Int32Array(o.buffer,s,i);case 5125:return new Uint32Array(o.buffer,s,i);case 5126:return new Float32Array(o.buffer,s,i);default:throw new Error}},r.prototype.getComponentTypeCount=function(e){switch(e){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:return 4;case 5126:return 4;default:throw new Error}},r.prototype.getAccessorTypeCount=function(e){switch(e){case"SCALAR":return 1;case"VEC2":return 2;case"VEC3":return 3;case"VEC4":case"MAT2":return 4;case"MAT3":return 9;case"MAT4":return 16;default:throw new Error}},r.prototype.getMeshAttributeType=function(e){switch(e){case"POSITION":case"NORMAL":return"VEC3";case"TEXCOORD_0":case"TEXCOORD_1":return"VEC2";case"TANGENT":case"COLOR_0":case"COLOR_1":case"JOINTS_0":case"WEIGHTS_0":return"VEC4";default:throw new Error}},r.prototype.getBufferLength=function(e){return this.getAccessorTypeCount(e.type)*this.getComponentTypeCount(e.componentType)*e.count},r.prototype.getBufferOffset=function(e){var t=this.getBufferView(e);return(t.byteOffset||0)+(e.byteOffset||0)},r.prototype.getBuffer=function(e){var t=this.getBufferView(e);return this.buffers[t.buffer]},r.prototype.getBufferView=function(e){return this.config.bufferViews[e.bufferView||0]},r.prototype.getAccessor=function(e){return this.config.accessors[e]},r.prototype.getNode=function(e){return this.config.nodes[e]},r.prototype.getAnimationClip=function(e){if(!this.config.animations||0===this.config.animations.length)return null;var t=this.config.animations[0];if(0===t.extensions.paper.clips.length)return null;if(!e)return t.extensions.paper.clips[0];for(var r=0,n=this.config.animations;r<n.length;r++)for(var i=n[r],a=0,o=i.extensions.paper.clips;a<o.length;a++){var s=o[a];if(s.name===e)return s}return null},r}(paper.Asset);e.GLTFAsset=t,__reflect(t.prototype,"egret3d.GLTFAsset")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.caclByteLength=function(){return 0},t}(paper.Asset);e.Texture=t,__reflect(t.prototype,"egret3d.Texture")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=e.Vector3.create(),r=e.Vector3.create(),n=e.Vector3.create(),i=e.Matrix4.create(),a=e.RaycastInfo.create(),o=["POSITION","NORMAL","TEXCOORD_0"],s=function(s){function c(t,r,n,i,a){var c=s.call(this,"string"==typeof n?n:"")||this;if(c._drawMode=35044,c._vertexCount=0,c._attributeNames=[],c._customAttributeTypes={},c._glTFMesh=null,c._helpVertices=null,"number"==typeof t){t=t||3,r=r||0,c.config=e.GLTFAsset.createMeshConfig();var l=c.config.buffers[0],p=c.config.bufferViews[0],u=c.config.accessors,d=c.config.meshes[0].primitives[0].attributes,h=!1;if(i)for(var f in i)h=!0,c._customAttributeTypes[f]=i[f];for(var _=0,m=n||o;_<m.length;_++){var v=m[_],g=h?c._customAttributeTypes[v]||c.getMeshAttributeType(v):c.getMeshAttributeType(v),y=p.byteLength;p.byteLength+=t*c.getAccessorTypeCount(g)*Float32Array.BYTES_PER_ELEMENT,d[v]=u.length,u.push({bufferView:0,byteOffset:y,count:t,normalized:"NORMAL"===v||"TANGENT"===v,componentType:5126,type:g})}l.byteLength=p.byteLength,c.buffers[0]=new Float32Array(p.byteLength/Float32Array.BYTES_PER_ELEMENT),c._drawMode=a||35044,r>0?c.addSubMesh(r,0):c.config.meshes[0].primitives[0].material=0}else{c.config=t;for(var b=0,E=r;b<E.length;b++){var l=E[b];c.buffers.push(l)}c.name=n}c._glTFMesh=c.config.meshes[0],c._vertexCount=c.getAccessor(c._glTFMesh.primitives[0].attributes.POSITION||0).count;for(var f in c._glTFMesh.primitives[0].attributes)c._attributeNames.push(f);return c}return __extends(c,s),c.prototype.clone=function(){for(var t=new e.Mesh(this.vertexCount,0,this._attributeNames,this._customAttributeTypes,this.drawMode),r=0,n=this._glTFMesh.primitives;r<n.length;r++){var i=n[r];if(void 0!==i.indices){var a=this.getAccessor(i.indices);t.addSubMesh(a.count,i.material,i.mode)}}for(var o=0,s=0,c=this.config.bufferViews;s<c.length;s++)for(var l=c[s],p=t.config.bufferViews[o++],u=this.createTypeArrayFromBufferView(l,5125),d=t.createTypeArrayFromBufferView(p,5125),h=0,f=u.length;f>h;++h)d[h]=u[h];return t},c.prototype.raycast=function(e,o,s){for(var c=0,l=t,p=r,u=n,d=this.getVertices(),h=s?this.getAttributes("JOINTS_0"):null,f=s?this.getAttributes("WEIGHTS_0"):null,_=!1,m=0,v=this._glTFMesh.primitives;m<v.length;m++){var g=v[m],y=void 0!==g.indices?this.getIndices(c):null,b=d;if(s)if(this._helpVertices||(this._helpVertices=new Float32Array(d.length)),b=this._helpVertices,y)for(var E=0,x=y;E<x.length;E++){var T=x[E],S=3*T,M=4*T;l.fromArray(d,S),p.set(0,0,0).add(u.applyMatrix(i.fromArray(s,16*h[M+0]),l).multiplyScalar(f[M+0])).add(u.applyMatrix(i.fromArray(s,16*h[M+1]),l).multiplyScalar(f[M+1])).add(u.applyMatrix(i.fromArray(s,16*h[M+2]),l).multiplyScalar(f[M+2])).add(u.applyMatrix(i.fromArray(s,16*h[M+3]),l).multiplyScalar(f[M+3])).toArray(b,S)}else for(var T=0,C=0,O=d.length;O>C;C+=3){var M=3*T++;l.fromArray(d,C),p.set(0,0,0).add(u.applyMatrix(i.fromArray(s,16*h[M+0]),l).multiplyScalar(f[M+0])).add(u.applyMatrix(i.fromArray(s,16*h[M+1]),l).multiplyScalar(f[M+1])).add(u.applyMatrix(i.fromArray(s,16*h[M+2]),l).multiplyScalar(f[M+2])).add(u.applyMatrix(i.fromArray(s,16*h[M+3]),l).multiplyScalar(f[M+3])).toArray(b,C)}switch(g.mode){case 0:break;case 1:break;case 2:break;case 3:break;case 6:break;case 5:break;case 4:default:if(y){for(var C=0,O=y.length;O>C;C+=3)if(l.fromArray(b,3*y[C]),p.fromArray(b,3*y[C+1]),u.fromArray(b,3*y[C+2]),o)e.intersectTriangle(l,p,u,!1,a)&&(!_||o.distance>a.distance)&&(o.subMeshIndex=c,o.triangleIndex=C/3,o.distance=a.distance,o.position.copy(a.position),o.textureCoordA.copy(a.textureCoordA),o.textureCoordB.copy(a.textureCoordB),_=!0);else if(e.intersectTriangle(l,p,u))return!0}else for(var C=0,O=b.length;O>C;C+=9)if(l.fromArray(b,C),p.fromArray(b,C+3),u.fromArray(b,C+6),o)e.intersectTriangle(l,p,u,!1,a)&&(!_||o.distance>a.distance)&&(o.subMeshIndex=c,o.triangleIndex=C/3,o.distance=a.distance,o.position.copy(a.position),o.textureCoordA.copy(a.textureCoordA),o.textureCoordB.copy(a.textureCoordB),_=!0);else if(e.intersectTriangle(l,p,u))return!0}c++}return _},c.prototype.addSubMesh=function(e,t,r){void 0===t&&(t=0);var n=this.config.accessors,i=this.config.meshes[0].primitives,a=this.buffers.length===i.length+1?i.length:0,o=this.config.bufferViews[a+1]={buffer:a+1,byteOffset:0,byteLength:e*this.getAccessorTypeCount("SCALAR")*Uint16Array.BYTES_PER_ELEMENT,target:34963},s=i[a]=i[a]||{attributes:i[0].attributes};return s.indices=n.length,s.material=t,s.mode=r,n.push({bufferView:a+1,byteOffset:0,count:e,componentType:5123,type:"SCALAR"}),this.buffers[a+1]=new Uint16Array(o.byteLength/Uint16Array.BYTES_PER_ELEMENT),this.config.buffers[a+1]={byteLength:o.byteLength},i.length-1},c.prototype.getVertices=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("POSITION",e,t)},c.prototype.getUVs=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("TEXCOORD_0",e,t)},c.prototype.getColors=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("COLOR_0",e,t)},c.prototype.getNormals=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("NORMAL",e,t)},c.prototype.getTangents=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("TANGENT",e,t)},c.prototype.getAttributes=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=0);var n=this._glTFMesh.primitives[0].attributes[e];return void 0===n?null:this.createTypeArrayFromAccessor(this.getAccessor(n),t,r)},c.prototype.setAttributes=function(e,t,r){void 0===r&&(r=0);var n=this.getAttributes(e,r);if(n)for(var i=0,a=Math.min(t.length,n.length);a>i;i++)n[i]=t[i];return n},c.prototype.getIndices=function(e){if(void 0===e&&(e=0),e>=0&&e<this._glTFMesh.primitives.length){var t=this._glTFMesh.primitives[e].indices;return void 0===t?null:this.createTypeArrayFromAccessor(this.getAccessor(t))}return console.warn("Error arguments."),null},c.prototype.setIndices=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=0);var n=this.getIndices(t);if(n)for(var i=0,a=Math.min(e.length,n.length);a>i;i++)n[i]=e[r+i];return n},Object.defineProperty(c.prototype,"drawMode",{get:function(){return this._drawMode},set:function(e){this._drawMode=e},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"subMeshCount",{get:function(){return this._glTFMesh.primitives.length},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"vertexCount",{get:function(){return this._vertexCount},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"attributeNames",{get:function(){return this._attributeNames},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"glTFMesh",{get:function(){return this._glTFMesh},enumerable:!0,configurable:!0}),c}(e.GLTFAsset);e.BaseMesh=s,__reflect(s.prototype,"egret3d.BaseMesh",["egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){function t(e){return 0===e||e!==e?e:e>0?1:-1}function r(e,t,r){return void 0===t&&(t=0),void 0===r&&(r=1),t>e?t:e>r?r:e}function n(e,t,r){return e*(1-r)+t*r}function i(t,r,n,i){i.subtract(n,r),e.helpVector3A.subtract(t,r),i.cross(e.helpVector3A);var a=i.squaredLength;return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,1)}function a(e,t,r,n,i){var a=e.x,o=e.y,s=e.z,c=t.x,l=t.y,p=t.z,u=r.x,d=r.y,h=r.z,f=n.x,_=n.y,m=n.z,v=u*a+d*o+h*s;if(0===v)return null;var g=((c-f)*a+(l-_)*o+(p-m)*s)/v;return i.x=f+u*g,i.y=_+d*g,i.z=m+h*g,i}function o(){}function s(t){for(var r=e.helpVector3A,n=e.helpVector3B,i=e.helpVector3C,a=e.helpVector3H,o=e.helpVector3A,s=0,c=t.length-3;c>=s;s+=3){o.fromArray(t,s);var l=a.x*Math.abs(o.x)+a.y*Math.abs(o.y)+a.z*Math.abs(o.z),p=r.dot(o),u=n.dot(o),d=i.dot(o);if(Math.max(-Math.max(p,u,d),Math.min(p,u,d))>l)return!1}return!0}function c(t,r){if(r.isEmpty)return!1;var n=e.helpVector3A,i=e.helpVector3B,a=e.helpVector3C,o=e.helpVector3D,c=e.helpVector3E,l=e.helpVector3F,p=e.helpVector3G,u=e.helpVector3H;u.subtract(r.maximum,r.center),n.subtract(t.a,p),i.subtract(t.b,p),a.subtract(t.c,p),o.subtract(i,n),c.subtract(a,i),l.subtract(n,a);var d=[0,-o.z,o.y,0,-c.z,c.y,0,-l.z,l.y,o.z,0,-o.x,c.z,0,-c.x,l.z,0,-l.x,-o.y,o.x,0,-c.y,c.x,0,-l.y,l.x,0];return s(d)?(d=[1,0,0,0,1,0,0,0,1],s(d)?(e.helpVector3A.cross(o,c),d=[e.helpVector3A.x,e.helpVector3A.y,e.helpVector3A.z],s(d)):!1):!1}function l(e,t){var r,n,i=t.minimum,a=t.maximum;return e.normal.x>0?(r=e.normal.x*i.x,n=e.normal.x*a.x):(r=e.normal.x*a.x,n=e.normal.x*i.x),e.normal.y>0?(r+=e.normal.y*i.y,n+=e.normal.y*a.y):(r+=e.normal.y*a.y,n+=e.normal.y*i.y),e.normal.z>0?(r+=e.normal.z*i.z,n+=e.normal.z*a.z):(r+=e.normal.z*a.z,n+=e.normal.z*i.z),r<=e.constant&&n>=e.constant}function p(e,t){return Math.abs(e.getDistance(t.center))<=t.radius}function u(t,r){return e.helpVector3A.copy(r.center).clamp(t.minimum,t.maximum),e.helpVector3A.getSquaredDistance(r.center)<=r.radius*r.radius}function d(e,t){var r=e.minimum,n=e.maximum,i=t.minimum,a=t.maximum;return n.x<i.x||r.x>a.x||n.y<i.y||r.y>a.y||n.z<i.z||r.z>a.z?!1:!0}function h(e,t){var r=e.radius+t.radius;return e.center.getSquaredDistance(t.center)<=r*r}e.RAD_DEG=180/Math.PI,e.DEG_RAD=Math.PI/180,e.EPSILON=2.220446049250313e-16,e.sign=t,e.floatClamp=r,e.numberLerp=n,e.getNormal=i,e.calPlaneLineIntersectPoint=a,e.triangleIntersectsPlane=o,e.triangleIntersectsAABB=c,e.planeIntersectsAABB=l,e.planeIntersectsSphere=p,e.aabbIntersectsSphere=u,e.aabbIntersectsAABB=d,e.sphereIntersectsSphere=h}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(e){var t=function(){function t(){this.autoClear=!1,this.batchIndex=0,this._isDone=!1}return t.prototype.undo=function(){return this._isDone?(this._isDone=!1,!0):!1},t.prototype.redo=function(){return this._isDone?!1:(this._isDone=!0,this.editorModel.dirty=!0,!0)},Object.defineProperty(t.prototype,"isDone",{get:function(){return this._isDone},set:function(e){this._isDone=e},enumerable:!0,configurable:!0}),t.prototype.dispatchEditorModelEvent=function(t,r){this.editorModel.dispatchEvent(new e.EditorModelEvent(t,r))},t.prototype.serialize=function(){return null},t.prototype.deserialize=function(e){},t}();e.BaseState=t,__reflect(t.prototype,"paper.editor.BaseState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var egret3d;!function(e){var t=function(e){function t(){var t=e.call(this)||this;return t.r=1,t.g=1,t.b=1,t.a=1,t}return __extends(t,e),t.create=function(e,r,n,i){if(void 0===e&&(e=1),void 0===r&&(r=1),void 0===n&&(n=1),void 0===i&&(i=1),this._instances.length>0){var a=this._instances.pop().set(e,r,n,i);return a._released=!1,a}return(new t).set(e,r,n,i)},t.prototype.serialize=function(){return[this.r,this.g,this.b,this.a]},t.prototype.deserialize=function(e){return this.fromArray(e)},t.prototype.clone=function(){return t.create(this.r,this.g,this.b,this.a)},t.prototype.copy=function(e){return this.set(e.r,e.g,e.b,e.a)},t.prototype.set=function(e,t,r,n){return this.r=e,this.g=t,this.b=r,this.a=n,this},t.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.r=e[0+t],this.g=e[1+t],this.b=e[2+t],this.a=e[3+t],this},t.prototype.multiply=function(e,t){return t||(t=e,e=this),this.r=e.r*t.r,this.g=e.g*t.g,this.b=e.b*t.b,this.a=e.a*t.a,this},t.prototype.scale=function(e,t){return t||(t=this),this.r=t.r*e,this.g=t.g*e,this.b=t.b*e,this.a=t.a*e,this},t.prototype.lerp=function(e,t,r){return r||(r=t,t=this),this.r=e*(r.r-t.r)+t.r,this.g=e*(r.g-t.g)+t.g,this.b=e*(r.b-t.b)+t.b,this.a=e*(r.a-t.a)+t.a,this},t.BLACK=(new t).set(0,0,0,1),t.GRAY=(new t).set(.5,.5,.5,1),t.WHITE=(new t).set(1,1,1,1),t.RED=(new t).set(1,0,0,1),t.GREEN=(new t).set(0,1,0,1),t.BLUE=(new t).set(0,0,1,1),t.YELLOW=(new t).set(1,1,0,1),t.INDIGO=(new t).set(0,1,1,1),t.PURPLE=(new t).set(1,0,1,1),t._instances=[],t}(paper.BaseRelease);e.Color=t,__reflect(t.prototype,"egret3d.Color",["egret3d.IColor","paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(e){e[e.None=0]="None",e[e.NotEditable=1]="NotEditable",e[e.Hide=2]="Hide",e[e.HideAndDontSave=3]="HideAndDontSave"}(t=e.HideFlags||(e.HideFlags={}));var r;!function(e){e.NoName="NoName",e.Global="Global",e.MainCamera="Main Camera",e.EditorCamera="Editor Camera",e.EditorOnly="Editor Only",e.MissingPrefab="Missing Prefab"}(r=e.DefaultNames||(e.DefaultNames={}));var n;!function(e){e.Untagged="",e.Respawn="Respawn",e.Finish="Finish",e.EditorOnly="Editor Only",e.MainCamera="Main Camera",e.Player="Player",e.GameController="Game Controller",e.Global="Global"}(n=e.DefaultTags||(e.DefaultTags={}));var i;!function(e){e[e.Begin=0]="Begin",e[e.Enable=1e3]="Enable",e[e.Start=2e3]="Start",e[e.FixedUpdate=3e3]="FixedUpdate",e[e.Update=4e3]="Update",e[e.Animation=5e3]="Animation",e[e.LaterUpdate=6e3]="LaterUpdate",e[e.Renderer=7e3]="Renderer",e[e.Draw=8e3]="Draw",e[e.Disable=9e3]="Disable",e[e.End=1e4]="End"}(i=e.SystemOrder||(e.SystemOrder={}));var a;!function(e){e[e.Background=1e3]="Background",e[e.Geometry=2e3]="Geometry",e[e.AlphaTest=2450]="AlphaTest",e[e.Transparent=3e3]="Transparent",e[e.Overlay=4e3]="Overlay"}(a=e.RenderQueue||(e.RenderQueue={}));var o;!function(e){e[e.Default=2]="Default",e[e.UI=4]="UI",e[e.UserLayer1=8]="UserLayer1",e[e.UserLayer2=16]="UserLayer2",e[e.UserLayer3=32]="UserLayer3",e[e.UserLayer4=64]="UserLayer4",e[e.UserLayer5=128]="UserLayer5",e[e.UserLayer6=240]="UserLayer6",e[e.UserLayer7=256]="UserLayer7",e[e.UserLayer8=512]="UserLayer8",e[e.UserLayer9=1024]="UserLayer9",e[e.UserLayer10=2048]="UserLayer10",e[e.UserLayer11=3840]="UserLayer11"}(o=e.Layer||(e.Layer={}));var s;!function(e){e[e.Everything=16777215]="Everything",e[e.Nothing=1]="Nothing",e[e.Default=2]="Default",e[e.UI=4]="UI",e[e.UserLayer1=8]="UserLayer1",e[e.UserLayer2=16]="UserLayer2",e[e.UserLayer3=32]="UserLayer3",e[e.UserLayer4=64]="UserLayer4",e[e.UserLayer5=128]="UserLayer5",e[e.UserLayer6=240]="UserLayer6",e[e.UserLayer7=256]="UserLayer7",e[e.UserLayer8=512]="UserLayer8",e[e.UserLayer9=1024]="UserLayer9",e[e.UserLayer10=2048]="UserLayer10",e[e.UserLayer11=3840]="UserLayer11"}(s=e.CullingMask||(e.CullingMask={}))}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return __extends(n,t),n.create=function(e,t,r,i){if(void 0===e&&(e=0),void 0===t&&(t=0),void 0===r&&(r=0),void 0===i&&(i=1),this._instances.length>0){var a=this._instances.pop().set(e,t,r,i);return a._released=!1,a}return(new n).set(e,t,r,i)},n.prototype.clone=function(){return n.create(this.x,this.y,this.z,this.w)},n.prototype.fromMatrix=function(e){var t=e.rawData,r=t[0],n=t[4],i=t[8],a=t[1],o=t[5],s=t[9],c=t[2],l=t[6],p=t[10],u=r+o+p,d=0;return u>0?(d=.5/Math.sqrt(u+1),this.w=.25/d,this.x=(l-s)*d,this.y=(i-c)*d,this.z=(a-n)*d):r>o&&r>p?(d=2*Math.sqrt(1+r-o-p),this.w=(l-s)/d,this.x=.25*d,this.y=(n+a)/d,this.z=(i+c)/d):o>p?(d=2*Math.sqrt(1+o-r-p),this.w=(i-c)/d,this.x=(n+a)/d,this.y=.25*d,this.z=(s+l)/d):(d=2*Math.sqrt(1+p-r-o),this.w=(a-n)/d,this.x=(i+c)/d,this.y=(s+l)/d,this.z=.25*d),this},n.prototype.fromEuler=function(e,t){void 0===t&&(t=2);var r=e.x,n=e.y,i=e.z,a=Math.cos,o=Math.sin,s=a(.5*r),c=a(.5*n),l=a(.5*i),p=o(.5*r),u=o(.5*n),d=o(.5*i);switch(t){case 0:this.x=p*c*l+s*u*d,this.y=s*u*l-p*c*d,this.z=s*c*d+p*u*l,this.w=s*c*l-p*u*d;break;case 1:this.x=p*c*l-s*u*d,this.y=s*u*l-p*c*d,this.z=s*c*d+p*u*l,this.w=s*c*l+p*u*d;break;case 2:this.x=p*c*l+s*u*d,this.y=s*u*l-p*c*d,this.z=s*c*d-p*u*l,this.w=s*c*l+p*u*d;break;case 3:this.x=p*c*l+s*u*d,this.y=s*u*l+p*c*d,this.z=s*c*d-p*u*l,this.w=s*c*l-p*u*d;break;case 4:this.x=p*c*l-s*u*d,this.y=s*u*l+p*c*d,this.z=s*c*d+p*u*l,this.w=s*c*l-p*u*d;break;case 5:this.x=p*c*l-s*u*d,this.y=s*u*l+p*c*d,this.z=s*c*d-p*u*l,this.w=s*c*l+p*u*d}return this},n.prototype.fromAxis=function(e,t){var r=.5*t,n=Math.sin(r);return this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=Math.cos(r),this},n.prototype.inverse=function(e){return e||(e=this),this.x=-1*e.x,this.y=-1*e.y,this.z=-1*e.z,this.w=e.w,this},n.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},n.prototype.multiply=function(e,t){t||(t=e,e=this);var r=e.x,n=e.y,i=e.z,a=e.w,o=t.x,s=t.y,c=t.z,l=t.w;return this.x=r*l+a*o+n*c-i*s,this.y=n*l+a*s+i*o-r*c,this.z=i*l+a*c+r*s-n*o,this.w=a*l-r*o-n*s-i*c,this},n.prototype.premultiply=function(e){return this.multiply(e,this)},n.prototype.lerp=function(t,r,n){if(n||(n=r,r=this),0===t)return this.copy(r);if(1===t)return this.copy(n);var i=r.x,a=r.y,o=r.z,s=r.w,c=s*n.w+i*n.x+a*n.y+o*n.z;if(0>c?(this.w=-n.w,this.x=-n.x,this.y=-n.y,this.z=-n.z,c=-c):this.copy(n),c>=1)return this.w=s,this.x=i,this.y=a,this.z=o,this;var l=1-c*c;if(l<=e.EPSILON){var p=1-t;return this.w=p*s+t*this.w,this.x=p*i+t*this.x,this.y=p*a+t*this.y,this.z=p*o+t*this.z,this.normalize()}var u=Math.sqrt(l),d=Math.atan2(u,c),h=Math.sin((1-t)*d)/u,f=Math.sin(t*d)/u;this.w=s*h+this.w*f,this.x=i*h+this.x*f,this.y=a*h+this.y*f,this.z=o*h+this.z*f},n.prototype.lookAt=function(t,r,n){return this.fromMatrix(e.helpMatrixA.lookAt(t,r,n))},n.prototype.lookRotation=function(t,r){return this.fromMatrix(e.helpMatrixA.lookRotation(t,r))},n.prototype.toEuler=function(e,t){return void 0===t&&(t=2),r.fromRotation(this).toEuler(e,t)},n.IDENTITY=new n,n._instances=[],n}(e.Vector4);e.Quaternion=t,__reflect(t.prototype,"egret3d.Quaternion");var r=e.Matrix4.create()}(egret3d||(egret3d={}));var paper;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.create=function(t,n,i,a,o){var s=e.Asset.find(t);if(s&&s instanceof r){if(void 0!==n&&null!==n){if(n instanceof e.Scene){var c=s.createInstance(n);return c&&c.transform.setLocalPosition(0,0,0),c}var c=s.createInstance(o||null);return c&&c.transform.setLocalPosition(n,i,a),c}var c=s.createInstance();return c&&c.transform.setLocalPosition(0,0,0),c}return console.warn("The prefab don't exists.",t),null},r.prototype.createInstance=function(t,r){if(!this._raw)return null;var n=2===e.Application.playerMode,i=new e.Deserializer,a=i.deserialize(this._raw,r,n,t);return a&&n&&(a.extras.prefab||(a.extras.prefab=this)),a},r}(e.BaseObjectAsset);e.Prefab=t,__reflect(t.prototype,"paper.Prefab")}(paper||(paper={}));var egret3d;!function(e){var t=e.Matrix4.create(),r=function(r){function n(){var t=null!==r&&r.apply(this,arguments)||this;return t._materials=[e.DefaultMaterials.MESH_BASIC],t}return __extends(n,r),n.prototype.uninitialize=function(){r.prototype.uninitialize.call(this),this._materials.length=0},n.prototype.recalculateAABB=function(){this._aabb.clear();var t=this.gameObject.getComponent(e.MeshFilter);if(t&&t.mesh)for(var r=t.mesh.getVertices(),n=e.helpVector3A,i=0,a=r.length;a>i;i+=3)n.set(r[i],r[i+1],r[i+2]),this._aabb.add(n)},n.prototype.raycast=function(r,n,i){var a=this.gameObject.getComponent(e.MeshFilter);if(!a||!a.enabled||!a.mesh)return!1;var o=!1,s=void 0,c=this.gameObject.transform.worldMatrix,l=e.helpRay.applyMatrix(t.inverse(c),r),p=this.aabb;return n&&(n===!0?o=!0:(o=i||!1,s=n)),(o?p.raycast(l)&&a.mesh.raycast(l,s):p.raycast(l,s))?(s&&(s.position.applyMatrix(c),s.distance=r.origin.getDistance(s.position)),!0):!1},Object.defineProperty(n.prototype,"materials",{get:function(){return this._materials},set:function(t){if(t!==this._materials){this._materials.length=0;for(var r=0,n=t;r<n.length;r++){var i=n[r];i||console.warn("Invalid material."),this._materials.push(i||e.DefaultMaterials.MISSING)}paper.EventPool.dispatchEvent("materials",this)}},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"material",{get:function(){return this._materials.length>0?this._materials[0]:null},set:function(e){var t=!1;e?this._materials.length>0?this._materials[0]!==e&&(this._materials[0]=e,t=!0):(this._materials.push(e),t=!0):this._materials.length>0&&(this._materials.splice(0,1),t=!0),t&&paper.EventPool.dispatchEvent("materials",this)},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],n.prototype,"_materials",void 0),__decorate([paper.editor.property(13)],n.prototype,"materials",null),n}(paper.BaseRenderer);e.MeshRenderer=r,__reflect(r.prototype,"egret3d.MeshRenderer")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.cullingMask=16777215,r.intensity=1,r.color=e.Color.create(1,1,1,1),r.castShadows=!1,r.shadowRadius=.5,r.shadowBias=.01,r.shadowSize=512,r.shadowCameraNear=1,r.shadowCameraFar=100,r.shadowCameraSize=30,r.viewPortPixel={x:0,y:0,w:0,h:0},r.matrix=e.Matrix4.create(),r}return __extends(r,t),r.prototype._updateMatrix=function(e){var t=this.matrix;t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);var r=e.context;r.updateCamera(e,this.gameObject.transform.getWorldMatrix()),r.updateLightDepth(this),t.multiply(r.matrix_p).multiply(r.matrix_v)},r.prototype.update=function(e,t){e.backgroundColor.set(1,1,1,1),e.clearOption_Color=!0,e.clearOption_Depth=!0,this._updateMatrix(e)},Object.defineProperty(r.prototype,"power",{get:function(){return this.intensity*(4*Math.PI)},set:function(e){this.intensity=e/(4*Math.PI)},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"cullingMask",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],r.prototype,"intensity",void 0),__decorate([paper.serializedField,paper.editor.property(9)],r.prototype,"color",void 0),__decorate([paper.serializedField,paper.editor.property(4)],r.prototype,"castShadows",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],r.prototype,"shadowRadius",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:.01})],r.prototype,"shadowBias",void 0),__decorate([paper.serializedField,paper.editor.property(0)],r.prototype,"shadowSize",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],r.prototype,"shadowCameraNear",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],r.prototype,"shadowCameraFar",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],r.prototype,"shadowCameraSize",void 0),r}(paper.BaseComponent);e.BaseLight=t,__reflect(t.prototype,"egret3d.BaseLight")
}(egret3d||(egret3d={}));var paper;!function(e){var t=function(){function t(){this._preSystems=[],this._systems=[]}return t.getInstance=function(){return this._instance||(this._instance=new t),this._instance},t.prototype._getSystemInsertIndex=function(e){var t=-1,r=this._systems.length;if(r>0){if(e<this._systems[0]._order)return 0;if(e>=this._systems[r-1]._order)return r}for(var n=0;r-1>n;++n)if(this._systems[n]._order<=e&&e<this._systems[n+1]._order){t=n+1;break}return 0>t?this._systems.length:t},t.prototype._checkRegister=function(e){var t=this.getSystem(e);return t?(console.warn("The system has been registered.",egret.getQualifiedClassName(e)),t):t},t.prototype._preRegisterSystems=function(){this._preSystems.sort(function(e,t){return e.order-t.order});for(var e=0,t=this._preSystems;e<t.length;e++){var r=t[e];this.register(r.systemClass,r.order)}this._preSystems.length=0},t.prototype._update=function(){for(var e=0,t=this._systems;e<t.length;e++){var r=t[e];r&&r.enabled&&!r._started&&(r._started=!0,r.onStart&&r.onStart())}for(var n=0,i=this._systems;n<i.length;n++){var r=i[n];r&&r._update()}for(var a=0,o=this._systems;a<o.length;a++){var r=o[a];r&&r._lateUpdate()}},t.prototype.preRegister=function(e,t){return void 0===t&&(t=4e3),this._systems.length>0?(this.register(e,t),this):(this._preSystems.unshift({systemClass:e,order:t}),this)},t.prototype.register=function(t,r){void 0===r&&(r=4e3);var n=this._checkRegister(t);return n?n:(n=e.BaseSystem.create(t,r),this._systems.splice(this._getSystemInsertIndex(r),0,n),n._initialize(),n)},t.prototype.getSystem=function(e){for(var t=0,r=this._systems;t<r.length;t++){var n=r[t];if(n&&n.constructor===e)return n}return null},t.prototype.getOrRegisterSystem=function(e,t){void 0===t&&(t=4e3);var r=this.getSystem(e);return r||(r=this.register(e,t)),r},Object.defineProperty(t.prototype,"systems",{get:function(){return this._systems},enumerable:!0,configurable:!0}),t._instance=null,t}();e.SystemManager=t,__reflect(t.prototype,"paper.SystemManager")}(paper||(paper={}));var paper;!function(e){var t=function(){function t(){this._scenes=[],this._globalScene=null,this._editorScene=null}return t.getInstance=function(){return this._instance||(this._instance=new t),this._instance},t.prototype._addScene=function(e,t){this._scenes.indexOf(e)>=0&&console.warn("Add the scene again.",e.name),t?this._scenes.unshift(e):this._scenes.push(e)},t.prototype._removeScene=function(e){if(e===this._globalScene||e===this._editorScene)return console.warn("Cannot dispose global scene."),!1;var t=this._scenes.indexOf(e);return 0>t?(console.warn("Remove scene error.",e.name),!1):(this._scenes.splice(t,1),!0)},t.prototype.unloadAllScene=function(e){for(var t=this._scenes.length;t--;){var r=this._scenes[t];e&&e.indexOf(r)>=0||r.destroy()}},t.prototype.getScene=function(e){for(var t=0,r=this._scenes;t<r.length;t++){var n=r[t];if(n.name===e)return n}return null},Object.defineProperty(t.prototype,"scenes",{get:function(){return this._scenes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"globalScene",{get:function(){return this._globalScene||(this._globalScene=e.Scene.createEmpty("Global",!1),this._scenes.pop()),this._globalScene},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"activeScene",{get:function(){return 0===this._scenes.length&&e.Scene.createEmpty(),this._scenes[0]},set:function(e){if(!(this._scenes.length<=1||this._scenes[0]===e||this._globalScene===e)){var t=this._scenes.indexOf(e);0>t&&console.warn("Active scene error.",e.name),this._scenes.splice(t,1),this._scenes.unshift(e)}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"editorScene",{get:function(){return this._editorScene||(this._editorScene=e.Scene.createEmpty("Editor Only",!1),this._scenes.pop()),this._editorScene},enumerable:!0,configurable:!0}),t.prototype.createScene=function(t,r){return void 0===r&&(r=!0),e.Scene.createEmpty(t,r)},t.prototype.loadScene=function(t,r){return void 0===r&&(r=!0),e.Scene.create(t,r)},t.prototype.unloadScene=function(e){e.destroy()},t.prototype.getActiveScene=function(){return this.activeScene},t._instance=null,t}();e.SceneManager=t,__reflect(t.prototype,"paper.SceneManager")}(paper||(paper={}));var egret3d;!function(e){var t;!function(e){e[e.Box=0]="Box",e[e.Sphere=1]="Sphere",e[e.Cylinder=2]="Cylinder",e[e.Cone=3]="Cone",e[e.Capsule=4]="Capsule",e[e.ConvexHull=5]="ConvexHull"}(t=e.ColliderType||(e.ColliderType={}));var r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.colliderType=-1,t._physicsData=null,t}return __extends(t,e),t}(paper.BaseComponent);e.BaseCollider=r,__reflect(r.prototype,"egret3d.BaseCollider",["egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function e(){this._eventMap={}}return e.prototype.addEventListener=function(e,t,r){var n=this._eventMap[e];n||(n=this._eventMap[e]=[]),n.push({listener:t,thisObject:r||this})},e.prototype.removeEventListener=function(e,t,r){var n=this._eventMap[e];if(n)for(var i=0,a=n.length;a>i;i++){var o=n[i];if(o.listener==t&&o.thisObject==(r||this)){n.splice(i,1);break}}},e.prototype.dispatchEvent=function(e){e.target=this,this.notifyListener(e)},e.prototype.notifyListener=function(e){var t=this._eventMap[e.type||e];if(t)for(var r=0,n=t.length;n>r;r++){var i=t[r];i.listener.call(i.thisObject,e)}},e}();e.EventDispatcher=t,__reflect(t.prototype,"egret3d.EventDispatcher")}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(e){var t=function(){function e(){this.__z_e_listeners={}}return e.prototype.addEventListener=function(e,t,r,n){void 0===n&&(n=0);var i=this.__z_e_listeners[e];void 0===i&&(i=[],this.__z_e_listeners[e]=i);var a={func:t,context:r,level:n};i.push(a),i.sort(function(e,t){return t.level-e.level})},e.prototype.removeEventListener=function(e,t,r){var n=this.__z_e_listeners[e];if(void 0!==n)for(var i=n.length,a=0;i>a;a++){var o=n[a];if(o.func===t&&o.context===r)return void n.splice(a,1)}},e.prototype.dispatchEvent=function(e){var t=this.__z_e_listeners[e.type];if(void 0!==t){t.forEach(function(e){e.___dirty___=!0});for(var r=t.length,n=0;r>n;n++){var i=t[n];if(i.___dirty___){var a=i.func,o=i.context;o?a.call(o,e):a(e),i.___dirty___=!1}r!=t.length&&(r=t.length,n=0)}}},e}();e.EventDispatcher=t,__reflect(t.prototype,"paper.editor.EventDispatcher",["paper.editor.IEventDispatcher"]);var r=function(){function e(e,t){this.type=e,this.data=t}return e}();e.BaseEvent=r,__reflect(r.prototype,"paper.editor.BaseEvent")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.__isSingleton=!0,t}(e.BaseComponent);e.SingletonComponent=t,__reflect(t.prototype,"paper.SingletonComponent")}(paper||(paper={}));var paper;!function(e){var t=function(){function t(){if(this._order=-1,this._started=!0,this._locked=!1,this._enabled=!0,this._interests=[],this._groups=[],this._clock=e.GameObject.globalGameObject.getOrAddComponent(e.Clock),!t._createEnabled)throw new Error("Create an instance of a system is not allowed.");t._createEnabled=!1}return t.create=function(e,t){void 0===t&&(t=4e3),this._createEnabled=!0;var r=new e;return r._order<0&&(r._order=t),r},t.prototype._initialize=function(){if(this._interests.length>0){var t=void 0;t=Array.isArray(this._interests[0])?this._interests:[this._interests];for(var r=0,n=t;r<n.length;r++){for(var i=n[r],a=0,o=i;a<o.length;a++){var s=o[a];if(s.listeners)for(var c=0,l=s.listeners;c<l.length;c++){var p=l[c];if(Array.isArray(s.componentClass))for(var u=0,d=s.componentClass;u<d.length;u++){var h=d[u];e.EventPool.addEventListener(p.type,h,p.listener)}else e.EventPool.addEventListener(p.type,s.componentClass,p.listener)}}this._groups.push(e.GameObjectGroup.create(i))}}this.onAwake&&this.onAwake(),this.onEnable&&this.onEnable()},t.prototype._uninitialize=function(){if(this.onDestroy&&this.onDestroy(),this._interests.length>0){var t=void 0;t=Array.isArray(this._interests[0])?this._interests:[this._interests];for(var r=0,n=t;r<n.length;r++)for(var i=n[r],a=0,o=i;a<o.length;a++){var s=o[a];if(s.listeners)for(var c=0,l=s.listeners;c<l.length;c++){var p=l[c];if(Array.isArray(s.componentClass))for(var u=0,d=s.componentClass;u<d.length;u++){var h=d[u];e.EventPool.removeEventListener(p.type,h,p.listener)}else e.EventPool.removeEventListener(p.type,s.componentClass,p.listener)}}}},t.prototype._update=function(){if(this._enabled){this._locked=!0;for(var e=0,t=this._groups;e<t.length;e++){var r=t[e];if(this.onAddGameObject)for(var n=0,i=r._addedGameObjects;n<i.length;n++){var a=i[n];a&&this.onAddGameObject(a,r)}if(this.onAddComponent)for(var o=0,s=r._addedComponents;o<s.length;o++){var c=s[o];c&&this.onAddComponent(c,r)}}this.onUpdate&&this.onUpdate(this._clock.deltaTime),this._locked=!1}},t.prototype._lateUpdate=function(){this._enabled&&(this._locked=!0,this.onLateUpdate&&this.onLateUpdate(this._clock.deltaTime),this._locked=!1)},Object.defineProperty(t.prototype,"enabled",{get:function(){return this._enabled},set:function(e){return this._locked?void console.warn("Cannot change the enabled value when the system is updating.",egret.getQualifiedClassName(this)):void(this._enabled!==e&&(this._enabled=e,this._enabled?this.onEnable&&this.onEnable():this.onDisable&&this.onDisable()))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"groups",{get:function(){return this._groups},enumerable:!0,configurable:!0}),t._createEnabled=!1,t}();e.BaseSystem=t,__reflect(t.prototype,"paper.BaseSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e._isReseted=!1,e._isStarted=!1,e}return __extends(r,t),r.prototype.initialize=function(r){t.prototype.initialize.call(this,r),(2!==e.Application.playerMode||this.constructor.executeInEditMode)&&this.onAwake&&this.onAwake(r)},r.prototype.uninitialize=function(){(2!==e.Application.playerMode||this.constructor.executeInEditMode)&&this.onDestroy&&this.onDestroy(),t.prototype.uninitialize.call(this)},r.prototype.onCollide=function(e){},r}(e.BaseComponent);e.Behaviour=t,__reflect(t.prototype,"paper.Behaviour")}(paper||(paper={}));var egret3d;!function(e){var t=function(){function e(e,t,r,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===r&&(r=0),void 0===n&&(n=0),this.x=e,this.y=t,this.w=r,this.h=n}return e.prototype.serialize=function(){return[this.x,this.y,this.w,this.h]},e.prototype.deserialize=function(e){return this.x=e[0],this.y=e[1],this.w=e[2],this.h=e[3],this},e}();e.Rectangle=t,__reflect(t.prototype,"egret3d.Rectangle",["egret3d.IRectangle","egret3d.IVector2","egret3d.ISize","paper.ISerializable"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r=function(r){function n(){var n=null!==r&&r.apply(this,arguments)||this;return n._interests=[{componentClass:t.ParticleComponent,listeners:[{type:"rotation3DChanged",listener:function(e){n._onMainUpdate(e,"rotation3DChanged")}},{type:"simulationSpace",listener:function(e){n._onMainUpdate(e,"simulationSpace")}},{type:"scaleMode",listener:function(e){n._onMainUpdate(e,"scaleMode")}},{type:"velocityChanged",listener:n._onVelocityOverLifetime.bind(n)},{type:"colorChanged",listener:n._onColorOverLifetime.bind(n)},{type:"sizeChanged",listener:n._onSizeOverLifetime.bind(n)},{type:"rotationChanged",listener:n._onRotationOverLifetime.bind(n)},{type:"textureSheetChanged",listener:n._onTextureSheetAnimation.bind(n)}]},{componentClass:t.ParticleRenderer,listeners:[{type:"mesh",listener:function(e){n._updateDrawCalls(e.gameObject)}},{type:"materials",listener:function(e){n._updateDrawCalls(e.gameObject)}},{type:"lengthScale",listener:function(e){n._onRenderUpdate(e,"lengthScale")}},{type:"velocityScale",listener:function(e){n._onRenderUpdate(e,"velocityScale")}},{type:"renderMode",listener:function(e){n._onRenderUpdate(e,"renderMode")}}]}],n._drawCalls=paper.GameObject.globalGameObject.getOrAddComponent(e.DrawCalls),n}return __extends(n,r),n.prototype._onUpdateBatchMesh=function(e){var r=e.gameObject.getComponent(t.ParticleRenderer);e.initBatcher(),this._onRenderUpdate(r,"renderMode"),this._onRenderUpdate(r,"lengthScale"),this._onRenderUpdate(r,"velocityScale"),this._onMainUpdate(e,"rotation3DChanged"),this._onMainUpdate(e,"simulationSpace"),this._onMainUpdate(e,"scaleMode"),this._onShapeChanged(e),this._onVelocityOverLifetime(e),this._onColorOverLifetime(e),this._onSizeOverLifetime(e),this._onRotationOverLifetime(e),this._onTextureSheetAnimation(e)},n.prototype._onRenderUpdate=function(e,t){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.batchMaterial;switch(t){case"renderMode":this._onRenderMode(e);break;case"lengthScale":r.setFloat("u_lengthScale",e.lengthScale);break;case"velocityScale":r.setFloat("u_speeaScale",e.velocityScale)}}},n.prototype._onRenderMode=function(e){var t=e.batchMaterial;t.removeDefine("SPHERHBILLBOARD"),t.removeDefine("STRETCHEDBILLBOARD"),t.removeDefine("HORIZONTALBILLBOARD"),t.removeDefine("VERTICALBILLBOARD"),t.removeDefine("RENDERMESH");var r=e.renderMode;switch(r){case 0:t.addDefine("SPHERHBILLBOARD");break;case 1:t.addDefine("STRETCHEDBILLBOARD");break;case 2:t.addDefine("HORIZONTALBILLBOARD");break;case 3:t.addDefine("VERTICALBILLBOARD");break;case 4:t.addDefine("RENDERMESH");break;default:throw"_onRenderMode:invalid renderMode"}},n.prototype._onMainUpdate=function(e,r){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var n=e.gameObject.getComponent(t.ParticleRenderer),i=n.batchMaterial,a=e.main;switch(r){case"rotation3DChanged":i.setBoolean("u_startRotation3D",a._startRotation3D);break;case"simulationSpace":i.setInt("u_simulationSpace",a._simulationSpace);break;case"scaleMode":i.setInt("u_scalingMode",a._scaleMode)}}},n.prototype._onShapeChanged=function(e){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.gameObject.getComponent(t.ParticleRenderer),n=r.batchMaterial;n.removeDefine("SHAPE"),e.shape.enable&&n.addDefine("SHAPE")}},n.prototype._onVelocityOverLifetime=function(r){if(this._enabled&&this._groups[0].hasGameObject(r.gameObject)){var n=r.gameObject.getComponent(t.ParticleRenderer),i=n.batchMaterial;i.removeDefine("VELOCITYCONSTANT"),i.removeDefine("VELOCITYCURVE"),i.removeDefine("VELOCITYTWOCONSTANT"),i.removeDefine("VELOCITYTWOCURVE");var a=r.velocityOverLifetime;if(a.enable){var o=a._mode;switch(o){case 0:i.addDefine("VELOCITYCONSTANT");var s=new e.Vector3(a._x.evaluate(),a._y.evaluate(),a._z.evaluate());i.setVector3("u_velocityConst",s);break;case 1:i.addDefine("VELOCITYCURVE"),i.setVector2v("u_velocityCurveX[0]",a._x.curve.floatValues),i.setVector2v("u_velocityCurveY[0]",a._y.curve.floatValues),i.setVector2v("u_velocityCurveZ[0]",a._z.curve.floatValues);break;case 3:i.addDefine("VELOCITYTWOCONSTANT");var c=new e.Vector3(a._x.constantMin,a._y.constantMin,a._z.constantMin),l=new e.Vector3(a._x.constantMax,a._y.constantMax,a._z.constantMax);i.setVector3("u_velocityConst",c),i.setVector3("u_velocityConstMax",l);break;case 2:i.addDefine("VELOCITYTWOCURVE"),i.setVector2v("u_velocityCurveX[0]",a._x.curveMin.floatValues),i.setVector2v("u_velocityCurveY[0]",a._y.curveMin.floatValues),i.setVector2v("u_velocityCurveZ[0]",a._z.curveMin.floatValues),i.setVector2v("u_velocityCurveMaxX[0]",a._x.curveMax.floatValues),i.setVector2v("u_velocityCurveMaxY[0]",a._y.curveMax.floatValues),i.setVector2v("u_velocityCurveMaxZ[0]",a._z.curveMax.floatValues)}i.setInt("u_spaceType",a._space)}}},n.prototype._onColorOverLifetime=function(e){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.gameObject.getComponent(t.ParticleRenderer),n=r.batchMaterial;n.removeDefine("COLOROGRADIENT"),n.removeDefine("COLORTWOGRADIENTS");var i=e.colorOverLifetime;if(i.enable){var a=i._color;switch(a.mode){case 1:n.addDefine("COLOROGRADIENT"),n.setVector2v("u_alphaGradient[0]",a.gradient.alphaValues),n.setVector4v("u_colorGradient[0]",a.gradient.colorValues);break;case 3:n.addDefine("COLORTWOGRADIENTS"),n.setVector2v("u_alphaGradient[0]",a.gradientMin.alphaValues),n.setVector2v("u_alphaGradientMax[0]",a.gradientMax.alphaValues),n.setVector4v("u_colorGradient[0]",a.gradientMin.colorValues),n.setVector4v("u_colorGradientMax[0]",a.gradientMax.colorValues)}}}},n.prototype._onSizeOverLifetime=function(e){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.gameObject.getComponent(t.ParticleRenderer),n=r.batchMaterial;n.removeDefine("SIZECURVE"),n.removeDefine("SIZECURVESEPERATE"),n.removeDefine("SIZETWOCURVES"),n.removeDefine("SIZETWOCURVESSEPERATE");var i=e.sizeOverLifetime;if(i.enable){var a=i._separateAxes,o=i._x.mode;switch(o){case 1:a?(n.addDefine("SIZECURVESEPERATE"),n.setVector2v("u_sizeCurveX[0]",i._x.curve.floatValues),n.setVector2v("u_sizeCurveY[0]",i._y.curve.floatValues),n.setVector2v("u_sizeCurveZ[0]",i._z.curve.floatValues)):(n.addDefine("SIZECURVE"),n.setVector2v("u_sizeCurve[0]",i._size.curve.floatValues));break;case 2:a?(n.addDefine("SIZETWOCURVESSEPERATE"),n.setVector2v("u_sizeCurveX[0]",i._x.curveMin.floatValues),n.setVector2v("u_sizeCurveY[0]",i._y.curveMin.floatValues),n.setVector2v("u_sizeCurveZ[0]",i._z.curveMin.floatValues),n.setVector2v("u_sizeCurveMaxX[0]",i._x.curveMax.floatValues),n.setVector2v("u_sizeCurveMaxY[0]",i._y.curveMax.floatValues),n.setVector2v("u_sizeCurveMaxZ[0]",i._z.curveMax.floatValues)):(n.addDefine("SIZETWOCURVES"),n.setVector2v("u_sizeCurve[0]",i._size.curveMin.floatValues),n.setVector2v("u_sizeCurveMax[0]",i._size.curveMax.floatValues))}}}},n.prototype._onRotationOverLifetime=function(r){if(this._enabled&&this._groups[0].hasGameObject(r.gameObject)){var n=r.gameObject.getComponent(t.ParticleRenderer),i=n.batchMaterial;i.removeDefine("ROTATIONOVERLIFETIME"),i.removeDefine("ROTATIONCONSTANT"),i.removeDefine("ROTATIONTWOCONSTANTS"),i.removeDefine("ROTATIONSEPERATE"),i.removeDefine("ROTATIONCURVE"),i.removeDefine("ROTATIONTWOCURVES");var a=r.rotationOverLifetime;if(a.enable){var o=r.rotationOverLifetime._x.mode,s=a._separateAxes;switch(s?i.addDefine("ROTATIONSEPERATE"):i.addDefine("ROTATIONOVERLIFETIME"),o){case 0:i.addDefine("ROTATIONCONSTANT"),s?i.setVector3("u_rotationConstSeprarate",new e.Vector3(a._x.constant,a._y.constant,a._z.constant)):i.setFloat("u_rotationConst",a._z.constant);break;case 3:i.addDefine("ROTATIONTWOCONSTANTS"),s?(i.setVector3("u_rotationConstSeprarate",new e.Vector3(a._x.constantMin,a._y.constantMin,a._z.constantMin)),i.setVector3("u_rotationConstMaxSeprarate",new e.Vector3(a._x.constantMax,a._y.constantMax,a._z.constantMax))):(i.setFloat("u_rotationConst",a._z.constantMin),i.setFloat("u_rotationConstMax",a._z.constantMax));break;case 1:i.addDefine("ROTATIONCURVE"),s?(i.setVector2v("u_rotationCurveX[0]",a._x.curve.floatValues),i.setVector2v("u_rotationCurveY[0]",a._y.curve.floatValues),i.setVector2v("u_rotationCurveZ[0]",a._z.curve.floatValues)):i.setVector2v("u_rotationCurve[0]",a._z.curve.floatValues);break;case 2:i.addDefine("ROTATIONTWOCURVES"),s?(i.setVector2v("u_rotationCurveX[0]",a._x.curveMin.floatValues),i.setVector2v("u_rotationCurveY[0]",a._y.curveMin.floatValues),i.setVector2v("u_rotationCurveZ[0]",a._z.curveMin.floatValues),i.setVector2v("u_rotationCurveMaxX[0]",a._x.curveMax.floatValues),i.setVector2v("u_rotationCurveMaxY[0]",a._y.curveMax.floatValues),i.setVector2v("u_rotationCurveMaxZ[0]",a._z.curveMax.floatValues)):(i.setVector2v("u_rotationCurve[0]",a._z.curveMin.floatValues),i.setVector2v("u_rotationCurveMax[0]",a._z.curveMin.floatValues))}}}},n.prototype._onTextureSheetAnimation=function(e){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.gameObject.getComponent(t.ParticleRenderer),n=r.batchMaterial;n.removeDefine("TEXTURESHEETANIMATIONCURVE"),n.removeDefine("TEXTURESHEETANIMATIONTWOCURVE");var i=e.textureSheetAnimation;if(i.enable){var a=i._frameOverTime.mode;switch(a){case 1:n.addDefine("TEXTURESHEETANIMATIONCURVE"),n.setVector2v("u_uvCurve[0]",i._frameOverTime.curve.floatValues);break;case 2:n.addDefine("TEXTURESHEETANIMATIONTWOCURVE"),n.setVector2v("u_uvCurve[0]",i._frameOverTime.curveMin.floatValues),n.setVector2v("u_uvCurveMax[0]",i._frameOverTime.curveMax.floatValues)}(1===a||2===a)&&(n.setFloat("u_cycles",i._cycleCount),n.setVector4v("u_subUV",i.floatValues))}}},n.prototype._updateDrawCalls=function(r){if(this._enabled&&this._groups[0].hasGameObject(r)){var n=r.getComponent(t.ParticleComponent),i=r.getComponent(t.ParticleRenderer);if(this._onUpdateBatchMesh(n),this._drawCalls.removeDrawCalls(i),i.batchMesh&&i.batchMaterial){5===i._renderMode&&console.error("ParticleSystem : error renderMode"),i.batchMesh._createBuffer(),this._drawCalls.renderers.push(i);for(var a=0,o=0,s=i.batchMesh.glTFMesh.primitives;o<s.length;o++){var c=(s[o],{renderer:i,subMeshIndex:a++,mesh:i.batchMesh,material:i.batchMaterial||e.DefaultMaterials.MISSING,zdist:-1});this._drawCalls.drawCalls.push(c)}}}},n.prototype.onEnable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._updateDrawCalls(r)}},n.prototype.onAddGameObject=function(e,r){this._updateDrawCalls(e);var n=e.getComponent(t.ParticleComponent);n.main.playOnAwake&&n.play()},n.prototype.onRemoveGameObject=function(e){this._drawCalls.removeDrawCalls(e.renderer)},n.prototype.onUpdate=function(e){for(var r=0,n=this._groups[0].gameObjects;r<n.length;r++){var i=n[r];i.getComponent(t.ParticleComponent).update(e)}},n.prototype.onDisable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._drawCalls.removeDrawCalls(r.renderer)}},n}(paper.BaseSystem);t.ParticleSystem=r,__reflect(r.prototype,"egret3d.particle.ParticleSystem")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var paper;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.begin=[],t.stay=[],t.end=[],t}return __extends(t,e),t.prototype.clear=function(){this.begin.length=0,this.end.length=0},t}(e.SingletonComponent);e.ContactColliders=t,__reflect(t.prototype,"paper.ContactColliders")}(paper||(paper={}));var paper;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.maxFixedSubSteps=3,t.fixedDeltaTime=.02,t.timeScale=1,t._frameCount=0,t._beginTime=0,t._lastTime=0,t._delayTime=0,t._unscaledTime=0,t._unscaledDeltaTime=0,t._fixedTime=0,t}return __extends(t,e),t.prototype.initialize=function(){e.prototype.initialize.call(this),this._beginTime=.001*Date.now()},t.prototype.update=function(e){0!==this._unscaledTime&&(this._lastTime=this._unscaledTime,this._fixedTime<this.fixedDeltaTime||(this._fixedTime<this.fixedDeltaTime*this.maxFixedSubSteps?this._fixedTime%=this.fixedDeltaTime:this._fixedTime-=this.fixedDeltaTime*this.maxFixedSubSteps));var t=e||.001*Date.now();this._frameCount+=1,this._unscaledTime=t-this._beginTime,this._unscaledDeltaTime=this._unscaledTime-this._lastTime,this._fixedTime+=this._unscaledDeltaTime},Object.defineProperty(t.prototype,"frameCount",{get:function(){return this._frameCount},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"time",{get:function(){return this._unscaledTime*this.timeScale},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fixedTime",{get:function(){return this._fixedTime},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"deltaTime",{get:function(){return this._unscaledDeltaTime*this.timeScale},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"unscaledTime",{get:function(){return this._unscaledTime},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"unscaledDeltaTime",{get:function(){return this._unscaledDeltaTime},enumerable:!0,configurable:!0}),t}(e.SingletonComponent);e.Clock=t,__reflect(t.prototype,"paper.Clock")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.missingObject=null,e}return __extends(r,t),__decorate([e.serializedField],r.prototype,"missingObject",void 0),r}(e.BaseComponent);e.MissingComponent=t,__reflect(t.prototype,"paper.MissingComponent")}(paper||(paper={}));var paper;!function(e){var t;!function(e){e[e.Extends=1]="Extends",e[e.Exculde=2]="Exculde",e[e.Unessential=4]="Unessential"}(t=e.InterestType||(e.InterestType={}));var r=function(){function t(t){this.locked=!1,this._isRemoved=!1,this._isBehaviour=!1,this._bufferedGameObjects=[],this._addedGameObjects=[],this._gameObjects=[],this._bufferedComponents=[],this._addedComponents=[],this._behaviourComponents=[],this._interestConfig=null,this._isBehaviour=1===t.length&&void 0!==t[0].type&&0!==t[0].type,this._interestConfig=t,this._onAddComponent=this._onAddComponent.bind(this),this._onRemoveComponent=this._onRemoveComponent.bind(this),this._onAddUnessentialComponent=this._onAddUnessentialComponent.bind(this),this._onRemoveUnessentialComponent=this._onRemoveUnessentialComponent.bind(this);for(var r=0,n=this._interestConfig;r<n.length;r++){var i=n[r],a=i.type&&4&i.type;if(Array.isArray(i.componentClass))for(var o=0,s=i.componentClass;o<s.length;o++){var c=s[o];e.EventPool.addEventListener("__disabled__",c,this._onRemoveUnessentialComponent),a||(e.EventPool.addEventListener("__enabled__",c,this._onAddComponent),e.EventPool.addEventListener("__disabled__",c,this._onRemoveComponent)),e.EventPool.addEventListener("__enabled__",c,this._onAddUnessentialComponent)}else e.EventPool.addEventListener("__disabled__",i.componentClass,this._onRemoveUnessentialComponent),a||(e.EventPool.addEventListener("__enabled__",i.componentClass,this._onAddComponent),e.EventPool.addEventListener("__disabled__",i.componentClass,this._onRemoveComponent)),e.EventPool.addEventListener("__enabled__",i.componentClass,this._onAddUnessentialComponent)}for(var l=0,p=e.Application.sceneManager.scenes;l<p.length;l++)for(var u=p[l],d=0,h=u.gameObjects;d<h.length;d++){var f=h[d];this._addGameObject(f)}}return t.create=function(e){e=Array.isArray(e)?e:[e];for(var r=0,n=this._groups;r<n.length;r++){var i=n[r];if(i._interestConfig.length===e.length){for(var a=!0,o=0,s=e.length;s>o;++o){var c=e[o],l=i._interestConfig[o];if(c.type!==l.type){a=!1;break}if(Array.isArray(c.componentClass)&&Array.isArray(l.componentClass)){if(c.componentClass.length!==l.componentClass.length){a=!1;break}}else if(c.componentClass!==l.componentClass){a=!1;break}}if(a)return i}}var p=new t(e);return this._groups.push(p),p},t.update=function(){for(var e=0,t=this._groups;e<t.length;e++){var r=t[e];r._update()}},t.prototype._onAddComponent=function(e){this._addGameObject(e.gameObject)},t.prototype._onAddUnessentialComponent=function(t){var r=t.gameObject;if(!this._isBehaviour){if(r===e.GameObject.globalGameObject)return;if(this._bufferedGameObjects.indexOf(r)<0&&this._gameObjects.indexOf(r)<0)return}this._bufferedComponents.indexOf(t)>=0||this._behaviourComponents.indexOf(t)>=0||this._bufferedComponents.push(t)},t.prototype._onRemoveUnessentialComponent=function(t){var r=t.gameObject,n=this._bufferedComponents.indexOf(t);if(n>=0)return void this._bufferedComponents.splice(n,1);if(this._isBehaviour){if(n=this._behaviourComponents.indexOf(t),0>n)return;this._isRemoved=!0,this._behaviourComponents[n]=null,n=this._addedComponents.indexOf(t),n>=0&&(this._addedComponents[n]=null)}else{if(r===e.GameObject.globalGameObject)return;if(this._gameObjects.indexOf(r)<0)return;n=this._addedComponents.indexOf(t),n>=0&&(this._addedComponents[n]=null)}for(var i=0,a=e.Application.systemManager.systems;i<a.length;i++){var o=a[i];!o.onRemoveComponent||o.groups.indexOf(this)<0||o.onRemoveComponent(t,this)}},t.prototype._onRemoveComponent=function(e){this._removeGameObject(e.gameObject)},t.prototype._addGameObject=function(t){if((this._isBehaviour||t!==e.GameObject.globalGameObject)&&!(this._bufferedGameObjects.indexOf(t)>=0||this._gameObjects.indexOf(t)>=0)){for(var r=0,n=this._interestConfig;r<n.length;r++){var i=n[r];if(!(i.type&&4&i.type)){var a=i.type&&0!==(1&i.type),o=i.type&&0!==(2&i.type),s=null;if(Array.isArray(i.componentClass))for(var c=0,l=i.componentClass;c<l.length;c++){var p=l[c];if(s=t.getComponent(p,a))break}else s=t.getComponent(i.componentClass,a);if(o?s:!s)return}}this._bufferedGameObjects.push(t)}},t.prototype._removeGameObject=function(t){var r=this._bufferedGameObjects.indexOf(t);if(r>=0)this._bufferedGameObjects.splice(r,1);else if(r=this._gameObjects.indexOf(t),r>=0){this.locked&&(this.locked=!1,this._gameObjects=this._gameObjects.concat()),this._gameObjects.splice(r,1),r=this._addedGameObjects.indexOf(t),r>=0&&(this._addedGameObjects[r]=null);for(var n=0,i=e.Application.systemManager.systems;n<i.length;n++){var a=i[n];!a.onRemoveGameObject||a.groups.indexOf(this)<0||a.onRemoveGameObject(t,this)}}},t.prototype._update=function(){if(this.locked=!1,this._addedGameObjects.length>0&&(this._addedGameObjects.length=0),this._addedComponents.length>0&&(this._addedComponents.length=0),this._isRemoved){var t=0,r=0;this._isRemoved=!1;for(var n=0,i=this._behaviourComponents;n<i.length;n++){var a=i[n];a?r>0&&(this._behaviourComponents[t-r]=a,this._behaviourComponents[t]=null):r++,t++}r>0&&(this._behaviourComponents.length-=r)}if(this._bufferedGameObjects.length>0){for(var o=0,s=this._bufferedGameObjects;o<s.length;o++){var c=s[o];c&&(this._addedGameObjects.push(c),this._gameObjects.push(c))}this._bufferedGameObjects.length=0}if(this._bufferedComponents.length>0){for(var l=0,p=this._bufferedComponents;l<p.length;l++){var a=p[l];a&&(this._addedComponents.push(a),a instanceof e.Behaviour&&(a.gameObject.getComponent(egret3d.Camera)?this._behaviourComponents.unshift(a):this._behaviourComponents.push(a)))}this._bufferedComponents.length=0}},t.prototype.hasGameObject=function(e){return this._gameObjects.indexOf(e)>=0},Object.defineProperty(t.prototype,"gameObjects",{get:function(){return this._gameObjects},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"components",{get:function(){return this._behaviourComponents},enumerable:!0,configurable:!0}),t._groups=[],t}();e.GameObjectGroup=r,__reflect(r.prototype,"paper.GameObjectGroup")}(paper||(paper={}));var paper;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.componentIndex=-1,t.componentClass=null,t._components=[],t}return __extends(t,e),t.prototype._addComponent=function(e){this._components.push(e)},t.prototype._removeComponent=function(e){var t=this._components.indexOf(e);t>=0&&this._components.splice(1,0)},Object.defineProperty(t.prototype,"components",{get:function(){return this._components},enumerable:!0,configurable:!0}),t}(e.BaseComponent);e.GroupComponent=t,__reflect(t.prototype,"paper.GroupComponent")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r}return __extends(r,t),r.prototype.onAddComponent=function(t){if(t){if(2===e.Application.playerMode){if(!t.constructor.executeInEditMode)return;t._isReseted||(t._isReseted=!0,t.onReset&&t.onReset())}t.onEnable&&t.onEnable()}},r}(e.BaseSystem);e.EnableSystem=t,__reflect(t.prototype,"paper.EnableSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r}return __extends(r,t),r.prototype.onAddComponent=function(t){t&&!t._isStarted&&(2!==e.Application.playerMode||t.constructor.executeInEditMode)&&(t._isStarted=!0,t.onStart&&t.onStart())},r}(e.BaseSystem);e.StartSystem=t,__reflect(t.prototype,"paper.StartSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r}return __extends(r,t),r.prototype.onUpdate=function(){for(var e=0,t=this._clock.fixedTime,r=Math.min(Math.floor(t/this._clock.fixedDeltaTime),this._clock.maxFixedSubSteps),n=this._groups[0].components;t>=this._clock.fixedDeltaTime&&e++<this._clock.maxFixedSubSteps;){for(var i=0,a=n;i<a.length;i++){var o=a[i];
o&&o.onFixedUpdate&&o.onFixedUpdate(e,r)}t-=this._clock.fixedDeltaTime}},r}(e.BaseSystem);e.FixedUpdateSystem=t,__reflect(t.prototype,"paper.FixedUpdateSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r}return __extends(r,t),r.prototype.onUpdate=function(t){var r=this._groups[0].components;if(2===e.Application.playerMode)for(var n=0,i=r;n<i.length;n++){var a=i[n];a&&a.constructor.executeInEditMode&&a.onUpdate&&a.onUpdate(t)}else for(var o=0,s=r;o<s.length;o++){var a=s[o];a&&a.onUpdate&&a.onUpdate(t)}},r}(e.BaseSystem);e.UpdateSystem=t,__reflect(t.prototype,"paper.UpdateSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r._laterCalls=[],r}return __extends(r,t),r.prototype.onUpdate=function(t){var r=this._groups[0].components;if(2===e.Application.playerMode)for(var n=0,i=r;n<i.length;n++){var a=i[n];a&&a.constructor.executeInEditMode&&a.onLateUpdate&&a.onLateUpdate(t)}else for(var o=0,s=r;o<s.length;o++){var a=s[o];a&&a.onLateUpdate&&a.onLateUpdate(t)}if(egret.ticker.update(),this._laterCalls.length>0){for(var c=0,l=this._laterCalls;c<l.length;c++){var p=l[c];p()}this._laterCalls.length=0}},r.prototype.callLater=function(e){this._laterCalls.push(e)},r}(e.BaseSystem);e.LateUpdateSystem=t,__reflect(t.prototype,"paper.LateUpdateSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r._contactColliders=e.GameObject.globalGameObject.getOrAddComponent(e.ContactColliders),r._disposeCollecter=e.GameObject.globalGameObject.getOrAddComponent(e.DisposeCollecter),r}return __extends(r,t),r.prototype.onRemoveComponent=function(t){t&&(2!==e.Application.playerMode||t.constructor.executeInEditMode)&&t.onDisable&&t.onDisable()},r.prototype.onUpdate=function(){for(var t=(e.GameObject._instances,0),r=this._disposeCollecter.scenes;t<r.length;t++){var n=r[t];n.uninitialize()}for(var i=0,a=this._disposeCollecter.gameObjects;i<a.length;i++){var o=a[i];o.uninitialize()}for(var s=0,c=this._disposeCollecter.components;s<c.length;s++){var l=c[s];l.uninitialize()}for(var p=0,u=this._disposeCollecter.releases;p<u.length;p++){var d=u[p],h=d.constructor._instances;h.push(d)}this._contactColliders.clear(),this._disposeCollecter.clear()},r}(e.BaseSystem);e.DisableSystem=t,__reflect(t.prototype,"paper.DisableSystem")}(paper||(paper={}));var paper;!function(e){e.serializeClassMap={0:"paper.Scene",1:"paper.GameObject",2:"egret3d.AniPlayer",3:"egret3d.BoxCollider",4:"egret3d.Camera",5:"egret3d.MeshFilter",6:"egret3d.MeshRenderer",7:"egret3d.particle.ParticleComponent",8:"egret3d.particle.ParticleRenderer",9:"egret3d.SkinnedMeshRenderer",10:"egret3d.SphereCollider",11:"egret3d.Transform",12:"egret3d.Shader",15:"egret3d.AnimationClip",16:"egret3d.TPoseInfo",17:"egret3d.PoseBoneMatrix",18:"egret3d.Texture",19:"egret3d.Texture",20:"egret3d.Vector2",21:"egret3d.Vector3",22:"egret3d.Vector4",23:"egret3d.Quaternion",24:"egret3d.Color",25:"egret3d.Gradient",26:"egret3d.Curve",27:"egret3d.Keyframe",28:"egret3d.Rect",29:"egret3d.MainModule",30:"egret3d.EmissionModule",31:"egret3d.ShapeModule",32:"egret3d.VelocityOverLifetimeModule",33:"egret3d.RotationOverLifetimeModule",34:"egret3d.ColorOverLifetimeModule",35:"egret3d.SizeOverLifetimeModule",36:"egret3d.MinMaxCurve",37:"egret3d.MinMaxGradient",38:"egret3d.alphaKey",39:"egret3d.colorKey",40:"egret3d.Animation",41:"egret3d.GLTFAsset",13:"paper.Compatible",14:"paper.Compatible"};var t=function(){function e(){}return e.prototype.serialize=function(){throw new Error("Never")},e.prototype.deserialize=function(e,t){if(!t)throw new Error("Never");return t.getAssetOrComponent(e._glTFAsset)},e}();e.Compatible=t,__reflect(t.prototype,"paper.Compatible",["paper.ISerializable"])}(paper||(paper={}));var paper;!function(e){function t(e,r){void 0===r&&(r=null);var n=e.__serializeKeys;if(n){r=r||{};for(var i in n){var a=n[i];a&&(r[a]=i)}}return e.prototype&&e.prototype.__proto__.constructor!==Object&&t(e.prototype.__proto__.constructor,r),r}function r(e,t){if(void 0===t&&(t=null),e.__deserializeIgnore){t=t||[];for(var n=0,i=e.__deserializeIgnore;n<i.length;n++){var a=i[n];t.push(a)}}return e.prototype&&e.prototype.__proto__.constructor!==Object&&r(e.prototype.__proto__.constructor,t),t}var n="uuid",i="asset",a="class",o="deserialize",s="components",c="extras",l="children",p=function(){function p(){this.assets=[],this.objects={},this.components={},this._deserializers={},this._rootTarget=null}return p.prototype._deserializeObject=function(e,i){var o=t(i.constructor),s=r(i.constructor);for(var c in e)if(c!==a&&(this._keepUUID||c!==n)){var l=o&&c in o?o[c]:c;s&&s.indexOf(l)>=0||(i[l]=this._deserializeChild(e[c],i[l]))}return i},p.prototype._createComponent=function(t,r,n){var i=e.serializeClassMap[t["class"]]||t["class"],a=egret.getDefinitionByName(i),o=void 0;if(a){var s=c in t&&t[c].linkedID;if(a===egret3d.Transform){if(o=this.components[t.uuid],l in t)for(var p=0,u=t[l];p<u.length;p++){var d=u[p],h=this.components[d.uuid];h&&h._parent!==o&&(h._parent=o,o._children.push(h))}}else if(s){var f=t[c],_=r[c],m=f.linkedID,v=this._deserializers[_.prefab?r.uuid:_.rootID];o=v.components[m]}else o=(n||this._rootTarget).addComponent(a);!s&&this._makeLink&&o&&(o.extras.linkedID=t.uuid)}else o=(n||this._rootTarget).addComponent(e.MissingComponent),o.missingObject=t,console.warn("Class "+i+" is not defined.");return this.components[t.uuid]=o,o},p.prototype._deserializeChild=function(t,r){if(null===t||void 0===t)return t;switch(typeof t){case"function":return;case"object":if(r){if(ArrayBuffer.isView(r)){for(var s=0,c=Math.min(t.length,r.length);c>s;++s)r[s]=t[s];return r}if(Array.isArray(r)&&0===r.length){for(var s=0,c=t.length;c>s;++s)r[s]=this._deserializeChild(t[s]);return r}if(r[o])return r.deserialize(t,this)}if(Array.isArray(t)){r=[];for(var s=0,c=t.length;c>s;++s)r[s]=this._deserializeChild(t[s]);return r}var l=t[a];if(i in t){var p=t.asset;return p>=0?e.Asset.find(this.assets[p]):null}if(n in t){var u=t.uuid;if(u in this.objects)return this.objects[u];if(u in this.components)return this.components[u];if(l){var d=this._rootTarget instanceof e.GameObject?this._rootTarget.scene:this._rootTarget;if((e.serializeClassMap[l]||l)===egret.getQualifiedClassName(e.GameObject))for(var h=0,f=d.gameObjects;h<f.length;h++){var _=f[h];if(_.uuid===u)return _}else for(var m=0,v=d.gameObjects;m<v.length;m++)for(var _=v[m],g=0,y=_.components;g<y.length;g++){var b=y[g];if(b&&b.uuid===u)return b}}}else{if(!l){r={};for(var E in t)r[E]=this._deserializeChild(t[E]);return r}var x=egret.getDefinitionByName(e.serializeClassMap[l]||l);if(x)return r=new x,r.deserialize(t,this)}return void console.warn("Deserialize error.",t);default:return t}},p.prototype.getAssetOrComponent=function(t){if(i in t){var r=t.asset;return r>=0?e.Asset.find(this.assets[r]):null}var n=t.uuid;return this.components[n]||this.objects[n]},p.prototype.deserialize=function(t,r,n,i){if(void 0===r&&(r=!1),void 0===n&&(n=!1),void 0===i&&(i=null),t.assets)for(var a=0,o=t.assets;a<o.length;a++){var l=o[a];this.assets.push(l)}this._keepUUID=r,this._makeLink=n,this._rootTarget=i;var u=egret.getQualifiedClassName(e.Scene),d=egret.getQualifiedClassName(egret3d.Transform),h={},f=null;if(t.components)for(var _=0,m=t.components;_<m.length;_++){var v=m[_];h[v.uuid]=v}if(t.objects){for(var g=0,y=t.objects;g<y.length;g++){var b=y[g],E=e.serializeClassMap[b["class"]]||b["class"],x=void 0;if(E===u)x=e.Scene.createEmpty(b.name),this._rootTarget=x;else{this._rootTarget||(this._rootTarget=e.Application.sceneManager.activeScene);var T=c in b&&b[c].linkedID;if(T){var S=b[c],M=S.linkedID,C=S.prefab;if(C){var O=C.asset;if(O>=0){var l=this.assets[O];x=e.Prefab.create(l,this._rootTarget),x?this._deserializers[b.uuid]=p._lastDeserializer:x=e.GameObject.create("Missing Prefab","",this._rootTarget)}}else{var A=this._deserializers[S.rootID];x=A.objects[M]}}else x=e.GameObject.create("NoName","",this._rootTarget),this._makeLink&&(x.extras.linkedID=b.uuid,f&&(x.extras.rootID=f.uuid));if(x&&s in b)for(var R=0,P=b[s];R<P.length;R++){var L=P[R],I=L.uuid,v=h[I];(e.serializeClassMap[v["class"]]||v["class"])===d&&(this.components[I]=x.transform)}}x&&(this.objects[b.uuid]=x,f=f||x)}for(var w=t.objects.length;w--;){var b=t.objects[w],x=this.objects[b.uuid];if(x&&(this._deserializeObject(b,x),x.constructor===e.GameObject&&s in b))for(var D=0,z=b[s];D<z.length;D++){var L=z[D];this._createComponent(h[L.uuid],b,x)}}}if(t.components)for(var N=0,U=t.components;N<U.length;N++){var v=U[N],I=v.uuid,V=this.components[I];if(V){if(V.constructor===e.MissingComponent)continue;this._deserializeObject(v,V)}else i&&i.constructor===e.GameObject&&(V=this._createComponent(v),f=f||V,this._deserializeObject(v,V))}return p._lastDeserializer=this,f},p}();e.Deserializer=p,__reflect(p.prototype,"paper.Deserializer")}(paper||(paper={}));var paper;!function(e){function t(t,r){void 0===r&&(r=!1),E&&console.warn("The deserialization is not complete."),x||(x=e.GameObject.create("NoName","",e.Application.sceneManager.globalScene),x.parent=e.GameObject.globalGameObject),m=r,E={version:e.DATA_VERSION,assets:[],objects:[],components:[]},p(t),v.length=0;for(var n in g)delete g[n];x.transform.destroyChildren(),x.removeAllComponents();var i=E;return E=null,i}function r(r){var n=t(r,!0),i=new e.Deserializer;return i.deserialize(n)}function n(t,r){var i=typeof t,o=typeof r;if(i!==o)return!1;if(null===t&&null===r)return!0;if(null===t||null===r)return!1;switch(i){case"undefined":case"boolean":case"number":case"string":case"symbol":case"function":return t===r;case"object":}if((Array.isArray(t)||ArrayBuffer.isView(t))&&(Array.isArray(r)||ArrayBuffer.isView(r))){var s=t.length;if(s!==r.length)return!1;if(0===s)return!0;for(var c=0;s>c;++c)if(!n(t[c],r[c]))return!1;return!0}if(t.constructor!==r.constructor)return!1;if(t instanceof e.Asset||t.constructor===e.GameObject||t instanceof e.BaseComponent)return t===r;if(t.constructor===Object){for(var l=0,p=t;l<p.length;l++){var u=p[l];if(!n(t[u],r[u]))return!1}return!0}if(egret.is(t,"paper.ISerializable"))return n(t.serialize(),r.serialize());if(t instanceof e.BaseObject)return n(a(t),a(r));throw new Error("Unsupported data.")}function i(e){if(!e.name)return{asset:-1};if(E&&E.assets){var t=E.assets.indexOf(e.name);return 0>t&&(t=E.assets.length,E.assets.push(e.name)),{asset:t}}return{asset:-1}}function a(e){var t=egret.getQualifiedClassName(e),r={"class":s(t)||t};return u(e,r,null,null),r}function o(e,t){void 0===t&&(t=null);var r=e.__serializeKeys;if(r){t=t||[];for(var n in r)t.push(r[n]||n)}return e.prototype&&e.prototype.__proto__.constructor!==Object&&o(e.prototype.__proto__.constructor,t),t}function s(t){for(var r in e.serializeClassMap)if(e.serializeClassMap[r]===t)return r;return""}function c(e){var t=egret.getQualifiedClassName(e);return{uuid:e.uuid,"class":s(t)||t}}function l(e){for(;!e.extras.prefab;)e=e.parent;return e}function p(t){if(v.indexOf(t.uuid)>=0)return!0;var r=c(t),n=null,i=y;if(t instanceof e.GameObject){if(t.isDestroyed)return console.warn("Missing game object."),!1;if(t.extras&&t.extras.linkedID){var a=l(t),o=a.extras.prefab.name;if(!(o in g)){var s=e.Prefab.create(o,x.scene);s.parent=x,g[o]=e.Deserializer._lastDeserializer}var p=g[o];n=p.objects[t.extras.linkedID],t.extras.prefab&&(i=b)}else n=x;E.objects.push(r)}else if(t instanceof e.BaseComponent){if(t.isDestroyed)return console.warn("Missing component."),!1;if(t.extras&&t.extras.linkedID){var a=l(t.gameObject),o=a.extras.prefab.name;if(!(o in g)){var s=e.Prefab.create(o,x.scene);s.parent=x,g[o]=e.Deserializer._lastDeserializer}var p=g[o];n=p.components[t.extras.linkedID],t.gameObject.extras.prefab&&(i=b)}else n=x.getOrAddComponent(t.constructor);E.components.push(r)}else E.objects.push(r);return v.push(t.uuid),u(t,r,n,i),!0}function u(e,t,r,i){var a=o(e.constructor);if(a)for(var s=0,c=a;s<c.length;s++){var l=c[s];r&&(!i||i.indexOf(l)<0)&&n(e[l],r[l])||(t[l]=d(e[l],e,l))}}function d(t,r,n){if(null===t||void 0===t)return t;switch(typeof t){case"function":return;case"object":if(Array.isArray(t)||ArrayBuffer.isView(t)){for(var o=[],s=0,l=t;s<l.length;s++){var u=l[s],m=d(u,r,n);void 0!==m&&o.push(m)}return o}if(t.constructor===Object){var o={};for(var v in t){var m=d(t[v],r,n);void 0!==m&&(o[v]=m)}return o}if(egret.is(t,"paper.ISerializable"))return t.serialize();if(t instanceof e.BaseObject){if(t.constructor===e.Scene)return;if(t instanceof e.Asset)return i(t);if(t.constructor===e.GameObject||t instanceof e.BaseComponent){if(t.constructor===e.GameObject&&3===t.hideFlags)return;if(t.constructor===egret3d.Transform&&3===t.gameObject.hideFlags)return;if(r)if(r.constructor===e.Scene){if(n===h)return p(t)?{uuid:t.uuid}:void 0}else if(r.constructor===e.GameObject){if(n===f)return p(t)?{uuid:t.uuid}:void 0}else if(r.constructor===egret3d.Transform&&n===_)return p(t.gameObject)?{uuid:t.uuid}:void 0;return c(t)}return a(t)}return void console.warn("Serialize error.",t);default:return t}}e.DATA_VERSION=3,e.DATA_VERSIONS=[e.DATA_VERSION];var h="gameObjects",f="components",_="children",m=!1,v=[],g={},y=["extras"],b=["name","localPosition","localRotation","extras"],E=null,x=null;e.serialize=t,e.clone=r,e.equal=n,e.serializeAsset=i,e.serializeStruct=a}(paper||(paper={}));var paper;!function(e){var t;!function(e){e[e.Player=0]="Player",e[e.DebugPlayer=1]="DebugPlayer",e[e.Editor=2]="Editor"}(t=e.PlayerMode||(e.PlayerMode={}));var r=function(){function t(){this.version="1.2.0.001",this.systemManager=e.SystemManager.getInstance(),this.sceneManager=e.SceneManager.getInstance(),this._isFocused=!1,this._isRunning=!1,this._playerMode=0,this._bindUpdate=null}return t.getInstance=function(){return this._instance||(this._instance=new t),this._instance},t.prototype._update=function(){this._isRunning&&requestAnimationFrame(this._bindUpdate),e.Time&&e.Time.update(),e.GameObjectGroup.update(),this.systemManager._update()},t.prototype._updatePlayerMode=function(){},t.prototype.init=function(t){this._playerMode=t.playerMode||0,this.systemManager.register(e.EnableSystem,1e3),this.systemManager.register(e.StartSystem,2e3),this.systemManager.register(e.FixedUpdateSystem,3e3),this.systemManager.register(e.UpdateSystem,4e3),this.systemManager.register(e.LateUpdateSystem,6e3),this.systemManager.register(e.DisableSystem,9e3),this._updatePlayerMode(),this.resume()},t.prototype.pause=function(){this._isRunning=!1},t.prototype.resume=function(){this._isRunning||(this._isRunning=!0,this._bindUpdate||(this._bindUpdate=this._update.bind(this)),this._update())},Object.defineProperty(t.prototype,"isFocused",{get:function(){return this._isFocused},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isRunning",{get:function(){return this._isRunning},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"playerMode",{get:function(){return this._playerMode},set:function(e){this._playerMode!==e&&(this._playerMode=e)},enumerable:!0,configurable:!0}),t._instance=null,t}();e.ECS=r,__reflect(r.prototype,"paper.ECS"),e.Application=r.getInstance()}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.onAwake=function(){var t=paper.GameObject.globalGameObject;t.getOrAddComponent(e.DefaultTextures),t.getOrAddComponent(e.DefaultMeshes),t.getOrAddComponent(e.DefaultShaders),t.getOrAddComponent(e.DefaultMaterials),paper.Time=t.getOrAddComponent(paper.Clock),t.getOrAddComponent(e.WebGLCapabilities)},r.prototype.onUpdate=function(){e.Performance.startCounter("all"),e.stage.update()},r}(paper.BaseSystem);e.BeginSystem=t,__reflect(t.prototype,"egret3d.BeginSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.onUpdate=function(t){e.InputManager.update(t),e.Performance.updateFPS(),e.Performance.endCounter("all")},r}(paper.BaseSystem);e.EndSystem=t,__reflect(t.prototype,"egret3d.EndSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t,r=e.Vector3.create(),n=e.Quaternion.create(),i=e.Matrix4.create();!function(e){e[e.PRS=7]="PRS",e[e.Position=1]="Position",e[e.Rotation=2]="Rotation",e[e.Scale=4]="Scale",e[e.Euler=8]="Euler",e[e.Matrix=16]="Matrix"}(t||(t={}));var a=function(t){function a(){var r=null!==t&&t.apply(this,arguments)||this;return r._localDirty=31,r._worldDirty=31,r._worldMatrixDeterminant=0,r._localPosition=e.Vector3.create(),r._localRotation=e.Quaternion.create(),r._localEuler=e.Vector3.create(),r._localEulerAngles=e.Vector3.create(),r._localScale=e.Vector3.ONE.clone(),r._localMatrix=e.Matrix4.create(),r._position=e.Vector3.create(),r._rotation=e.Quaternion.create(),r._euler=e.Vector3.create(),r._eulerAngles=e.Vector3.create(),r._scale=e.Vector3.ONE.clone(),r._worldMatrix=e.Matrix4.create(),r._children=[],r._parent=null,r}return __extends(a,t),a.prototype._removeFromChildren=function(e){for(var t=0,r=0,n=this._children;r<n.length;r++){var i=n[r];if(i===e){this._children.splice(t,1);break}t++}},a.prototype._dirtify=function(e,t){if(e&&(this._localDirty|=16|t,2&t?(this._localDirty|=4,this._localDirty|=8):4&t&&(this._localDirty|=2)),!(this._worldDirty&t&&16&this._worldDirty)){1&t?this._worldDirty|=16|t:this._worldDirty|=31;for(var r=0,n=this._children;r<n.length;r++){var i=n[r];i._dirtify(!1,t)}this.gameObject.renderer&&(this.gameObject.renderer._boundingSphereDirty=!0)}},a.prototype._updateMatrix=function(e){if(e){var t=this.localMatrix;this._parent?this._worldMatrix.multiply(this._parent.worldMatrix,t):this._worldMatrix.copy(t),this._worldMatrixDeterminant=this._worldMatrix.determinant(),this._worldDirty&=-17}else 2&this._localDirty||4&this._localDirty?(this._localMatrix.compose(this.localPosition,this.localRotation,this.localScale),this._localDirty&=-8):1&this._localDirty&&(this._localMatrix.fromTranslate(this.localPosition,!0),this._localDirty&=-2),this._localDirty&=-17},a.prototype._updateEuler=function(t,r){t?(this.worldMatrix.toEuler(this._euler,r),this._eulerAngles.multiplyScalar(e.RAD_DEG,this._euler),this._worldDirty&=-9):(this.localMatrix.toEuler(this._localEuler,r),this._localEulerAngles.multiplyScalar(e.RAD_DEG,this._localEuler),this._localDirty&=-9)},a.prototype._onParentChange=function(e,t){var r=t?t.gameObject.activeInHierarchy:this.gameObject.activeSelf;(e?e.gameObject.activeInHierarchy:this.gameObject.activeSelf)!==r&&this.gameObject._activeInHierarchyDirty(r),this._dirtify(!1,7)},a.prototype.getAllChildren=function(e){void 0===e&&(e=[]);for(var t=0,r=this._children;t<r.length;t++){var n=r[t];if(Array.isArray(e))e.push(n);else{var i=n.gameObject.name;if(i in e){var a=e[i];Array.isArray(a)?a.push(n):e[i]=[a,n]}else e[i]=n}n.getAllChildren(e)}return e},a.prototype.destroyChildren=function(){for(var e=this._children.length;e--;)this._children[e].gameObject.destroy()},a.prototype.contains=function(e){if(e===this)return!1;for(var t=e;t!==this&&null!==t;)t=t.parent;return t===this},a.prototype.setParent=function(e,t){void 0===t&&(t=!1);var n=this._parent;return n===e?this:e&&this.gameObject.scene!==e.gameObject.scene?(console.warn("Cannot change the parent to a different scene."),this):this===e||e&&this.contains(e)?(console.error("Set the parent error."),this):(t&&r.copy(this.position),n&&n._removeFromChildren(this),e&&e._children.push(this),this._parent=e,this._onParentChange(e,n),t&&(this.position=r),this)},a.prototype.getChildIndex=function(e){return e.parent!==this?-1:this._children.indexOf(e)},a.prototype.setChildIndex=function(e,t){if(e.parent===this){var r=this._children.indexOf(e);r!==t&&(this._children.splice(r,1),this._children.splice(t,0,e))}},a.prototype.getChildAt=function(e){return e>=0&&e<this._children.length?this._children[e]:null},a.prototype.find=function(e){for(var t=e.split("/"),r=this,n=0,i=t;n<i.length;n++){var a=i[n];if(!a)return r;for(var o=r,s=0,c=r._children;s<c.length;s++){var l=c[s];if(l.gameObject.name===a){r=l;break}}if(o===r)return null}return r},a.prototype.getLocalPosition=function(){return this._localPosition},a.prototype.setLocalPosition=function(e,t,r){return e.hasOwnProperty("x")?(this._localPosition.x=e.x,this._localPosition.y=e.y,this._localPosition.z=e.z):(this._localPosition.x=e,this._localPosition.y=t||0,this._localPosition.z=r||0),this._dirtify(!0,1),this},Object.defineProperty(a.prototype,"localPosition",{get:function(){return this._localPosition},set:function(e){this._localPosition.x=e.x,this._localPosition.y=e.y,this._localPosition.z=e.z,this._dirtify(!0,1)},enumerable:!0,configurable:!0}),a.prototype.getLocalRotation=function(){return this._localRotation},a.prototype.setLocalRotation=function(e,t,r,n){return e.hasOwnProperty("x")?(this._localRotation.x=e.x,this._localRotation.y=e.y,this._localRotation.z=e.z,this._localRotation.w=e.w):(this._localRotation.x=e,this._localRotation.y=t||0,this._localRotation.z=r||0,this._localRotation.w=void 0!==n?n:1),this._dirtify(!0,2),this},Object.defineProperty(a.prototype,"localRotation",{get:function(){return this._localRotation},set:function(e){this._localRotation.x=e.x,this._localRotation.y=e.y,this._localRotation.z=e.z,this._localRotation.w=e.w,this._dirtify(!0,2)},enumerable:!0,configurable:!0}),a.prototype.getLocalEuler=function(e){return 8&this._localDirty&&this._updateEuler(!1,e),this._localEuler},a.prototype.setLocalEuler=function(t,r,n,i){return t.hasOwnProperty("x")?(this._localEuler.x=t.x,this._localEuler.y=t.y,this._localEuler.z=t.z,this._localEulerAngles.multiplyScalar(e.RAD_DEG,this._localEuler),this._localRotation.fromEuler(this._localEuler,r)):(this._localEuler.x=t,this._localEuler.y=r,this._localEuler.z=n,this._localEulerAngles.multiplyScalar(e.RAD_DEG,this._localEuler),this._localRotation.fromEuler(this._localEuler,i)),this._dirtify(!0,2),this._localDirty&=-9,this},Object.defineProperty(a.prototype,"localEuler",{get:function(){return 8&this._localDirty&&this._updateEuler(!1),this._localEuler},set:function(t){this._localEuler.x=t.x,this._localEuler.y=t.y,this._localEuler.z=t.z,this._localEulerAngles.multiplyScalar(e.RAD_DEG,this._localEuler),this._localRotation.fromEuler(this._localEuler),this._dirtify(!0,2),this._localDirty&=-9},enumerable:!0,configurable:!0}),a.prototype.getLocalEulerAngles=function(e){return 8&this._localDirty&&this._updateEuler(!1,e),this._localEulerAngles},a.prototype.setLocalEulerAngles=function(t,r,n,i){return t.hasOwnProperty("x")?(this._localEulerAngles.x=t.x,this._localEulerAngles.y=t.y,this._localEulerAngles.z=t.z,this._localEuler.multiplyScalar(e.DEG_RAD,this._localEulerAngles),this._localRotation.fromEuler(this._localEuler,r)):(this._localEulerAngles.x=t,this._localEulerAngles.y=r,this._localEulerAngles.z=n,this._localEuler.multiplyScalar(e.DEG_RAD,this._localEulerAngles),this._localRotation.fromEuler(this._localEuler,i)),this._dirtify(!0,2),this._localDirty&=-9,this},Object.defineProperty(a.prototype,"localEulerAngles",{get:function(){return 8&this._localDirty&&this._updateEuler(!1),this._localEulerAngles},set:function(t){this._localEulerAngles.x=t.x,this._localEulerAngles.y=t.y,this._localEulerAngles.z=t.z,this._localEuler.multiplyScalar(e.DEG_RAD,this._localEulerAngles),this._localRotation.fromEuler(this._localEuler),this._dirtify(!0,2),this._localDirty&=-9},enumerable:!0,configurable:!0}),a.prototype.getLocalScale=function(){return this._localScale},a.prototype.setLocalScale=function(e,t,r){return e.hasOwnProperty("x")?(this._localScale.x=e.x,this._localScale.y=e.y,this._localScale.z=e.z):(this._localScale.x=e,this._localScale.y=void 0!==t?t:e,this._localScale.z=void 0!==r?r:e),this._dirtify(!0,4),this},Object.defineProperty(a.prototype,"localScale",{get:function(){return this._localScale},set:function(e){this._localScale.x=e.x,this._localScale.y=e.y,this._localScale.z=e.z,this._dirtify(!0,4)},enumerable:!0,configurable:!0}),a.prototype.getLocalMatrix=function(){return 16&this._localDirty&&this._updateMatrix(!1),this._localMatrix},Object.defineProperty(a.prototype,"localMatrix",{get:function(){return 16&this._localDirty&&this._updateMatrix(!1),this._localMatrix},enumerable:!0,configurable:!0}),a.prototype.getPosition=function(){return 1&this._worldDirty&&(this.worldMatrix.decompose(this._position,null,null),this._worldDirty&=-2),this._position},a.prototype.setPosition=function(e,t,r){return e.hasOwnProperty("x")?(this._localPosition.x=e.x,this._localPosition.y=e.y,this._localPosition.z=e.z):(this._localPosition.x=e,this._localPosition.y=t||0,this._localPosition.z=r||0),this._parent&&this._localPosition.applyMatrix(i.inverse(this._parent.worldMatrix)),this._dirtify(!0,1),this},Object.defineProperty(a.prototype,"position",{get:function(){return 1&this._worldDirty&&(this.worldMatrix.decompose(this._position,null,null),this._worldDirty&=-2),this._position},set:function(e){this._localPosition.x=e.x,this._localPosition.y=e.y,this._localPosition.z=e.z,this._parent&&this._localPosition.applyMatrix(i.inverse(this._parent.worldMatrix)),this._dirtify(!0,1)},enumerable:!0,configurable:!0}),a.prototype.getRotation=function(){return 2&this._worldDirty&&(this.worldMatrix.decompose(null,this._rotation,null),this._worldDirty&=-3),this._rotation},a.prototype.setRotation=function(e,t,r,i){return e.hasOwnProperty("x")?(this._localRotation.x=e.x,this._localRotation.y=e.y,this._localRotation.z=e.z,this._localRotation.w=e.w):(this._localRotation.x=e,this._localRotation.y=t||0,this._localRotation.z=r||0,this._localRotation.w=void 0!==i?i:1),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2),this},Object.defineProperty(a.prototype,"rotation",{get:function(){return 2&this._worldDirty&&(this.worldMatrix.decompose(null,this._rotation,null),this._worldDirty&=-3),this._rotation},set:function(e){this._localRotation.x=e.x,this._localRotation.y=e.y,this._localRotation.z=e.z,this._localRotation.w=e.w,this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2)},enumerable:!0,configurable:!0}),a.prototype.getEuler=function(e){return 8&this._worldDirty&&this._updateEuler(!0,e),this._euler},a.prototype.setEuler=function(e,t,i,a){return e.hasOwnProperty("x")?this._localRotation.fromEuler(e,t):(r.set(e,t,i),this._localRotation.fromEuler(r,a)),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2),this},Object.defineProperty(a.prototype,"euler",{get:function(){return 8&this._worldDirty&&this._updateEuler(!0),this._euler},set:function(e){this._localRotation.fromEuler(e),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2)},enumerable:!0,configurable:!0}),a.prototype.getEulerAngles=function(e){return 8&this._worldDirty&&this._updateEuler(!0,e),this._eulerAngles},a.prototype.setEulerAngles=function(t,i,a,o){return t.hasOwnProperty("x")?(r.multiplyScalar(e.DEG_RAD,t),this._localRotation.fromEuler(r,i)):(r.set(t*e.DEG_RAD,i*e.DEG_RAD,a*e.DEG_RAD),this._localRotation.fromEuler(r,o)),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2),this},Object.defineProperty(a.prototype,"eulerAngles",{get:function(){return 8&this._worldDirty&&this._updateEuler(!0),this._eulerAngles},set:function(t){r.multiplyScalar(e.DEG_RAD,t),this._localRotation.fromEuler(r),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2)},enumerable:!0,configurable:!0}),a.prototype.getScale=function(){return 4&this._worldDirty&&(this.worldMatrix.decompose(null,null,this._scale),this._worldDirty&=-5),this._scale},a.prototype.setScale=function(e,t,r){return e.hasOwnProperty("x")?(this._localScale.x=e.x,this._localScale.y=e.y,this._localScale.z=e.z):(this._localScale.x=e,this._localScale.y=void 0!==t?t:e,this._localScale.z=void 0!==r?r:e),this._parent&&this._localScale.applyDirection(i.inverse(this._parent.worldMatrix)),this._dirtify(!0,4),this},Object.defineProperty(a.prototype,"scale",{get:function(){return 4&this._worldDirty&&(this.worldMatrix.decompose(null,null,this._scale),this._worldDirty&=-5),this._scale},set:function(e){this._localScale.x=e.x,this._localScale.y=e.y,this._localScale.z=e.z,this._parent&&this._localScale.applyDirection(i.inverse(this._parent.worldMatrix)),this._dirtify(!0,4)},enumerable:!0,configurable:!0}),a.prototype.getWorldMatrix=function(){return 16&this._worldDirty&&this._updateMatrix(!0),this._worldMatrix},Object.defineProperty(a.prototype,"worldMatrix",{get:function(){return 16&this._worldDirty&&this._updateMatrix(!0),this._worldMatrix},enumerable:!0,configurable:!0}),a.prototype.translate=function(e,t,n,i){return e.hasOwnProperty("x")?t?this.position=this._localPosition.add(e,this.position):this.localPosition=this._localPosition.add(e):(r.set(e,t,n),i?this.position=this._localPosition.add(r,this.position):this.localPosition=this._localPosition.add(r)),this},a.prototype.rotate=function(e,t,n,i,a){return e.hasOwnProperty("x")?t?this.euler=this._localEuler.add(e,this.euler):(this.localEuler,this.localEuler=this._localEuler.add(e)):(r.set(e,t,n),i?this.euler=this._localEuler.add(r,this.euler):(this.localEuler,this.localEuler=this._localEuler.add(r))),this},a.prototype.rotateOnAxis=function(e,t,r){return n.fromAxis(e,t),r?this.localRotation=this._localRotation.premultiply(n).normalize():this.localRotation=this._localRotation.multiply(n).normalize(),this},a.prototype.rotateAround=function(e,t,r){return this.rotateOnAxis(t,r,!0),this.position=this._localPosition.applyMatrix(i.fromRotation(n.fromAxis(t,r)).fromTranslate(e,!0),this.position),this},a.prototype.rotateAngle=function(e,t,n,i,a){return e.hasOwnProperty("x")?t?this.eulerAngles=this._localEulerAngles.add(e,this.eulerAngles):(this.localEulerAngles,this.localEulerAngles=this._localEulerAngles.add(e)):(r.set(e,t,n),i?this.eulerAngles=this._localEulerAngles.add(r,this.eulerAngles):(this.localEulerAngles,this.localEulerAngles=this._localEulerAngles.add(r))),this},a.prototype.rotateAngleOnAxis=function(t,r,n){return this.rotateOnAxis(t,r*e.DEG_RAD,n)},a.prototype.rotateAngleAround=function(t,r,n){return this.rotateAround(t,r,n*e.DEG_RAD)},a.prototype.getRight=function(t){return t||(t=e.Vector3.create()),t.applyDirection(this.worldMatrix,e.Vector3.RIGHT).normalize()},a.prototype.getUp=function(t){return t||(t=e.Vector3.create()),t.applyDirection(this.worldMatrix,e.Vector3.UP).normalize()},a.prototype.getForward=function(t){return t||(t=e.Vector3.create()),t.applyDirection(this.worldMatrix,e.Vector3.FORWARD).normalize()},a.prototype.lookAt=function(t,r){return void 0===r&&(r=e.Vector3.UP),this.rotation=this._localRotation.fromMatrix(i.lookAt(this.position,t instanceof a?t.position:t,r)),this},Object.defineProperty(a.prototype,"childCount",{get:function(){return this._children.length},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"children",{get:function(){return this._children},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"parent",{get:function(){return this._parent},set:function(e){this.setParent(e,!1)},enumerable:!0,configurable:!0}),__decorate([paper.serializedField("localPosition")],a.prototype,"_localPosition",void 0),__decorate([paper.serializedField("localRotation")],a.prototype,"_localRotation",void 0),__decorate([paper.serializedField("localScale")],a.prototype,"_localScale",void 0),__decorate([paper.editor.property(6)],a.prototype,"localPosition",null),__decorate([paper.editor.property(6,{step:1})],a.prototype,"localEulerAngles",null),__decorate([paper.editor.property(6)],a.prototype,"localScale",null),__decorate([paper.serializedField,paper.deserializedIgnore],a.prototype,"children",null),a
}(paper.BaseComponent);e.Transform=a,__reflect(a.prototype,"egret3d.Transform")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=e.Vector3.create(),r=["POSITION","NORMAL","TEXCOORD_0"],n=function(n){function i(){return null!==n&&n.apply(this,arguments)||this}return __extends(i,n),i.prototype.initialize=function(){n.prototype.initialize.call(this);var t=i.createPlane();t._isBuiltin=!0,t.name="builtin/quad.mesh.bin",paper.Asset.register(t),i.QUAD=t;var t=i.createPlane(1,1,-.5,0);t._isBuiltin=!0,t.name="builtin/quad_particle.mesh.bin",paper.Asset.register(t),i.QUAD_PARTICLE=t;var t=i.createPlane(10,10);t._isBuiltin=!0,t.name="builtin/plane.mesh.bin",paper.Asset.register(t),i.PLANE=t;var t=i.createCube();t._isBuiltin=!0,t.name="builtin/cube.mesh.bin",paper.Asset.register(t),i.CUBE=t;var t=new e.Mesh(16,18);t._isBuiltin=!0,t.name="builtin/pyramid.mesh.bin",paper.Asset.register(t),i.PYRAMID=t,t.setAttributes("POSITION",[-.5,-.5,-.5,0,.5,0,.5,-.5,-.5,.5,-.5,-.5,0,.5,0,.5,-.5,.5,.5,-.5,.5,0,.5,0,-.5,-.5,.5,-.5,-.5,.5,0,.5,0,-.5,-.5,-.5,-.5,-.5,-.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,.5]),t.setAttributes("NORMAL",[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0]),t.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),t.setAttributes("TEXCOORD_0",[0,0,.5,.5,0,1,0,1,.5,.5,1,1,1,1,.5,.5,1,0,1,0,.5,.5,0,0,0,0,1,0,1,1,0,1]),t.setIndices([0,2,1,3,5,4,6,8,7,9,11,10,12,14,13,15,14,12]);var t=i.createCylinder(0,.5,1,0,0,0,16,1);t._isBuiltin=!0,t.name="builtin/cone.mesh.bin",paper.Asset.register(t),i.CONE=t;var t=i.createCylinder();t._isBuiltin=!0,t.name="builtin/cylinder.mesh.bin",paper.Asset.register(t),i.CYLINDER=t;var t=i.createTorus();t._isBuiltin=!0,t.name="builtin/torus.mesh.bin",paper.Asset.register(t),i.TORUS=t;var t=i.createSphere();t._isBuiltin=!0,t.name="builtin/sphere.mesh.bin",paper.Asset.register(t),i.SPHERE=t;var t=new e.Mesh(4,2,["POSITION","COLOR_0"]);t._isBuiltin=!0,t.name="builtin/line_x.mesh.bin",t.glTFMesh.primitives[0].mode=1,paper.Asset.register(t),i.LINE_X=t,t.setAttributes("POSITION",[0,0,0,1,0,0,0,0,0,1,0,0]),t.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),t.setIndices([0,1],0);var t=new e.Mesh(4,2,["POSITION","COLOR_0"]);t._isBuiltin=!0,t.name="builtin/line_y.mesh.bin",t.glTFMesh.primitives[0].mode=1,paper.Asset.register(t),i.LINE_Y=t,t.setAttributes("POSITION",[0,0,0,0,1,0,0,0,0,0,1,0]),t.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),t.setIndices([0,1],0);var t=new e.Mesh(4,2,["POSITION","COLOR_0"]);t._isBuiltin=!0,t.name="builtin/line_z.mesh.bin",t.glTFMesh.primitives[0].mode=1,paper.Asset.register(t),i.LINE_Z=t,t.setAttributes("POSITION",[0,0,0,0,0,1,0,0,0,0,0,1]),t.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),t.setIndices([0,1],0);var t=i.createCircle();t._isBuiltin=!0,t.name="builtin/circle_line.mesh.bin",paper.Asset.register(t),i.CIRCLE_LINE=t;var t=new e.Mesh(8,24,["POSITION","COLOR_0"]);t._isBuiltin=!0,t.name="builtin/cube_line.mesh.bin",t.glTFMesh.primitives[0].mode=1,paper.Asset.register(t),i.CUBE_LINE=t,t.setAttributes("POSITION",[-.5,.5,-.5,.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,.5,.5,.5,.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5]),t.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),t.setIndices([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,7,1,4,2,5,3,6])},i.createObject=function(t,r,n,i){var a=paper.GameObject.create(r,n,i),o=a.addComponent(e.MeshFilter),s=a.addComponent(e.MeshRenderer);switch(o.mesh=t,t){case this.QUAD:case this.QUAD_PARTICLE:case this.PLANE:s.material=e.DefaultMaterials.MESH_BASIC_DOUBLESIDE;break;case this.LINE_X:case this.LINE_Y:case this.LINE_Z:case this.CIRCLE_LINE:case this.CUBE_LINE:s.material=e.DefaultMaterials.LINEDASHED_COLOR}return a},i.createPlane=function(t,r,n,i,a,o){void 0===t&&(t=1),void 0===r&&(r=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===a&&(a=1),void 0===o&&(o=1);for(var s=t/2,c=r/2,l=a+1,p=o+1,u=t/a,d=r/o,h=[],f=[],_=[],m=[],v=0;p>v;v++)for(var g=v*d-c,y=0;l>y;y++){var b=y*u-s;f.push(n+b,i-g,0),_.push(0,0,1),m.push(y/a,v/o)}for(var v=0;o>v;v++)for(var y=0;a>y;y++){var E=y+l*v,x=y+l*(v+1),T=y+1+l*(v+1),S=y+1+l*v;h.push(E,x,S,x,T,S)}var M=e.Mesh.create(f.length/3,h.length);return M.setAttributes("POSITION",f),M.setAttributes("NORMAL",_),M.setAttributes("TEXCOORD_0",m),M.setIndices(h),M},i.createCube=function(r,n,i,a,o,s,c,l,p,u){function d(e,r,n,i,c,l,p,u,d,g){for(var y=l/d,b=p/g,E=l/2,x=p/2,T=u/2,S=d+1,M=g+1,C=0,O=0;M>O;O++)for(var A=O*b-x,R=0;S>R;R++){var P=R*y-E;t[e]=P*i,t[r]=A*c,t[n]=T,_.push(t.x+a,t.y+o,t.z+s),t[e]=0,t[r]=0,t[n]=u>0?1:-1,m.push(t.x,t.y,t.z),v.push(R/d),v.push(O/g),C+=1}for(var O=0;g>O;O++)for(var R=0;d>R;R++){var L=h+R+S*O,I=h+R+S*(O+1),w=h+(R+1)+S*(O+1),D=h+(R+1)+S*O;f.push(L,I,D,I,w,D)}h+=C}void 0===r&&(r=1),void 0===n&&(n=1),void 0===i&&(i=1),void 0===a&&(a=0),void 0===o&&(o=0),void 0===s&&(s=0),void 0===c&&(c=1),void 0===l&&(l=1),void 0===p&&(p=1),void 0===u&&(u=!1);var h=0,f=[],_=[],m=[],v=[];if(d("z","y","x",-1,-1,i,n,-r,p,l),d("z","y","x",1,-1,i,n,r,p,l),d("x","z","y",1,1,r,i,-n,c,p),d("x","z","y",1,-1,r,i,n,c,p),d("x","y","z",1,-1,r,n,-i,c,l),d("x","y","z",-1,-1,r,n,i,c,l),u){var g=f.length/6,y=e.Mesh.create(_.length/3,0);y.setAttributes("POSITION",_),y.setAttributes("NORMAL",m),y.setAttributes("TEXCOORD_0",v);for(var b=0;6>b;++b)y.addSubMesh(g,b),y.setIndices(f,b,g*b);return y}var y=e.Mesh.create(_.length/3,f.length);return y.setAttributes("POSITION",_),y.setAttributes("NORMAL",m),y.setAttributes("TEXCOORD_0",v),y.setIndices(f),y},i.createCylinder=function(r,n,i,a,o,s,c,l,p,u,d,h){function f(){for(var e=0,p=(n-r)/i,h=0;l>=h;h++){for(var f=[],_=h/l,M=_*(n-r)+r,C=0;c>=C;C++){var O=C/c,A=O*d+u,R=Math.sin(A),P=Math.cos(A);t.x=M*R,t.y=-_*i+x,t.z=-M*P,v.push(t.x+a,t.y+o,t.z+s),t.set(R,p,P).normalize(),g.push(t.x,t.y,t.z),y.push(O,_),f.push(b++)}T.push(f)}for(var C=0;c>C;C++)for(var h=0;l>h;h++){var L=T[h][C],I=T[h+1][C],w=T[h+1][C+1],D=T[h][C+1];m.push(L,I,D,I,w,D),e+=6}S.push(E,e,0),E+=e}function _(e){var i=0,l=0,p=0,h=e?r:n,f=e?1:-1;i=b;for(var _=1;c>=_;_++)v.push(0,x*f,0),g.push(0,f,0),y.push(.5,.5),b++;l=b;for(var _=0;c>=_;_++){var T=_/c,M=T*d+u,C=Math.cos(M),O=Math.sin(M);t.x=h*O,t.y=x*f,t.z=-h*C,v.push(t.x+a,t.y+o,t.z+s),g.push(0,f,0),y.push(.5*O*f+.5,.5*C+.5),b++}for(var _=0;c>_;_++){var A=i+_,R=l+_;e===!0?m.push(R,R+1,A):m.push(R+1,R,A),p+=3}S.push(E,p,e===!0?1:2),E+=p}void 0===r&&(r=.5),void 0===n&&(n=.5),void 0===i&&(i=1),void 0===a&&(a=0),void 0===o&&(o=0),void 0===s&&(s=0),void 0===c&&(c=16),void 0===l&&(l=1),void 0===p&&(p=!1),void 0===u&&(u=0),void 0===d&&(d=2*Math.PI),void 0===h&&(h=!1);var m=[],v=[],g=[],y=[],b=0,E=0,x=i/2,T=[],S=[];if(f(),p===!1&&(r>0&&_(!0),n>0&&_(!1)),h){var M=e.Mesh.create(v.length/3,0);M.setAttributes("POSITION",v),M.setAttributes("NORMAL",g),M.setAttributes("TEXCOORD_0",y);for(var C=0;C<S.length;C+=3)M.addSubMesh(S[1],S[2]),M.setIndices(m,C,S[0]);return M}var M=e.Mesh.create(v.length/3,m.length);return M.setAttributes("POSITION",v),M.setAttributes("NORMAL",g),M.setAttributes("TEXCOORD_0",y),M.setIndices(m),M},i.createCircle=function(t,r,n){void 0===t&&(t=.5),void 0===r&&(r=1),void 0===n&&(n=1);for(var i=[],a=0;64*r>=a;++a)switch(n){case 1:i.push(0,Math.cos(a/32*Math.PI)*t,-Math.sin(a/32*Math.PI)*t);break;case 2:i.push(Math.cos(a/32*Math.PI)*t,0,-Math.sin(a/32*Math.PI)*t);break;case 3:i.push(Math.cos(a/32*Math.PI)*t,Math.sin(a/32*Math.PI)*t,-0)}var o=e.Mesh.create(i.length/3,0,["POSITION","COLOR_0"]);return o.setAttributes("POSITION",i),o.glTFMesh.primitives[0].mode=3,o},i.createTorus=function(t,r,n,i,a,o){void 0===t&&(t=.5),void 0===r&&(r=.1),void 0===n&&(n=4),void 0===i&&(i=12),void 0===a&&(a=1),void 0===o&&(o=1);var s,c,l=[],p=[],u=[],d=[],h=e.Vector3.create(),f=e.Vector3.create(),_=e.Vector3.create();for(s=0;n>=s;s++)for(c=0;i>=c;c++){var m=c/i*Math.PI*2*a,v=s/n*Math.PI*2;switch(o){case 1:f.x=r*Math.sin(v),f.y=(t+r*Math.cos(v))*Math.cos(m),f.z=(t+r*Math.cos(v))*Math.sin(m);break;case 2:f.x=(t+r*Math.cos(v))*Math.cos(m),f.y=r*Math.sin(v),f.z=(t+r*Math.cos(v))*Math.sin(m);break;default:f.x=(t+r*Math.cos(v))*Math.cos(m),f.y=(t+r*Math.cos(v))*Math.sin(m),f.z=r*Math.sin(v)}p.push(f.x,f.y,-f.z),h.x=t*Math.cos(m),h.y=t*Math.sin(m),_.subtract(f,h).normalize(),u.push(_.x,_.y,-_.z),d.push(c/i),d.push(s/n)}for(s=1;n>=s;s++)for(c=1;i>=c;c++){var g=(i+1)*s+c-1,y=(i+1)*(s-1)+c-1,b=(i+1)*(s-1)+c,E=(i+1)*s+c;l.push(g,y,E,y,b,E)}h.release(),f.release(),_.release();var x=e.Mesh.create(p.length/3,l.length,["POSITION","NORMAL","TEXCOORD_0"]);return x.setAttributes("POSITION",p),x.setAttributes("NORMAL",u),x.setAttributes("TEXCOORD_0",d),x.setIndices(l),x},i.createSphere=function(t,n,i){void 0===t&&(t=.5),void 0===n&&(n=24),void 0===i&&(i=12),n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));for(var a=new e.Mesh((n+1)*(i+1),n*i*6-6,r),o=0,s=new e.Vector3,c=new e.Vector3,l=new Array,p=[],u=[],d=[],h=0;i>=h;h++){for(var f=new Array,_=h/i,m=0;n>=m;m++){var v=m/n;s.x=-t*Math.cos(v*Math.PI*2)*Math.sin(_*Math.PI),s.y=t*Math.cos(_*Math.PI),s.z=t*Math.sin(v*Math.PI*2)*Math.sin(_*Math.PI),p.push(s.x,s.y,s.z),c.x=s.x,c.y=s.y,c.z=s.z;var g=Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z);g>Number.MIN_VALUE?u.push(c.x/g,c.y/g,c.z/g):u.push(0,0,0),d.push(0,1-v,_),f.push(o++)}l.push(f)}a.setAttributes("POSITION",p),a.setAttributes("NORMAL",u),a.setAttributes("TEXCOORD_0",d);for(var y=new Array,h=0;i>h;h++)for(var m=0;n>m;m++){var b=l[h][m+1],E=l[h][m],x=l[h+1][m],T=l[h+1][m+1];0!==h&&y.push(b,T,E),h!==i-1&&y.push(E,T,x)}for(var S=a.getIndices(),M=0,C=y.length;C>M;M++)S[M]=y[M];return a},i.prototype.computeLineDistances=function(t,r){r[0]=0;for(var n=3,i=1;n>t.length;n+=3,i++){var a=e.Vector3.create(t[n-3],t[n-2],t[n-1]),o=e.Vector3.create(t[n],t[n+1],t[n+2]);r[i]=r[i-1]+a.getDistance(o)}},i}(paper.SingletonComponent);e.DefaultMeshes=n,__reflect(n.prototype,"egret3d.DefaultMeshes")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.initialize=function(){var t=e.GLTexture2D.createColorTexture("builtin/white.image.json",255,255,255);t._isBuiltin=!0,r.WHITE=t,paper.Asset.register(t);var t=e.GLTexture2D.createColorTexture("builtin/gray.image.json",128,128,128);t._isBuiltin=!0,r.GRAY=t,paper.Asset.register(t);var t=e.GLTexture2D.createGridTexture("builtin/grid.image.json");t._isBuiltin=!0,r.GRID=t,paper.Asset.register(t);var t=e.GLTexture2D.createColorTexture("builtin/missing.image.json",255,0,255);t._isBuiltin=!0,r.MISSING=t,paper.Asset.register(t)},r}(paper.SingletonComponent);e.DefaultTextures=t,__reflect(t.prototype,"egret3d.DefaultTextures")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype._createShader=function(t,r,n,i,a){var o=new e.Shader(r,t);if(o._isBuiltin=!0,n&&(o._renderQueue=n),a&&(o._defines=a),i){var s=e.GLTFAsset.copyTechniqueStates(i);s&&(o._states=s)}return paper.Asset.register(o),o},r.prototype.initialize=function(){t.prototype.initialize.call(this);var n=new e.Material(new e.Shader(e.ShaderLib.meshbasic,""));n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.MESH_BASIC=this._createShader("builtin/meshbasic.shader.json",e.ShaderLib.meshbasic,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0),r.MESH_BASIC_DOUBLESIDE=this._createShader("builtin/meshbasic_doubleside.shader.json",e.ShaderLib.meshbasic,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.MESH_LAMBERT=this._createShader("builtin/meshlambert.shader.json",e.ShaderLib.meshlambert,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0),r.MESH_LAMBERT_DOUBLESIDE=this._createShader("builtin/meshlambert_doubleside.shader.json",e.ShaderLib.meshlambert,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.MESH_PHONG=this._createShader("builtin/meshphong.shader.json",e.ShaderLib.meshphong,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0),r.MESH_PHONE_DOUBLESIDE=this._createShader("builtin/meshphong_doubleside.shader.json",e.ShaderLib.meshphong,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.MESH_PHYSICAL=this._createShader("builtin/meshphysical.shader.json",e.ShaderLib.meshphysical,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0),r.MESH_PHYSICAL_DOUBLESIDE=this._createShader("builtin/meshphysical_doubleside.shader.json",e.ShaderLib.meshphysical,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setCullFace(!0,2305,1029).setBlend(1),r.TRANSPARENT=this._createShader("builtin/transparent.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setBlend(1),r.TRANSPARENT_DOUBLESIDE=this._createShader("builtin/transparent_doubleside.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setCullFace(!0,2305,1029).setBlend(3),r.TRANSPARENT_ADDITIVE=this._createShader("builtin/transparent_additive.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setBlend(3),r.TRANSPARENT_ADDITIVE_DOUBLESIDE=this._createShader("builtin/transparent_additive_doubleside.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.LINEDASHED=this._createShader("builtin/linedashed.shader.json",e.ShaderLib.linedashed,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.VERTEX_COLOR=this._createShader("builtin/vertcolor.shader.json",e.ShaderLib.meshbasic,2e3,n.glTFTechnique.states,["USE_MAP","USE_COLOR"]),n.clearStates().setDepth(!0,!0),r.MATERIAL_COLOR=this._createShader("builtin/materialcolor.shader.json",e.ShaderLib.meshbasic,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.PARTICLE=this._createShader("builtin/particle.shader.json",e.ShaderLib.particle,2e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(1),r.PARTICLE_BLEND=this._createShader("builtin/particle_blend.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!0).setBlend(1),n.glTFTechnique.states.functions.depthFunc=[514],r.PARTICLE_BLEND1=this._createShader("builtin/particle_blend1.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(3),r.PARTICLE_ADDITIVE=this._createShader("builtin/particle_additive.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(2),r.PARTICLE_BLEND_PREMULTIPLY=this._createShader("builtin/particle_blend_premultiply.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(4),r.PARTICLE_ADDITIVE_PREMULTIPLY=this._createShader("builtin/particle_additive_premultiply.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!0),r.CUBE=this._createShader("builtin/cube.shader.json",e.ShaderLib.cube,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.DEPTH=this._createShader("builtin/depth.shader.json",e.ShaderLib.depth,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.DISTANCE_RGBA=this._createShader("builtin/distanceRGBA.shader.json",e.ShaderLib.distanceRGBA,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.EQUIRECT=this._createShader("builtin/equirect.shader.json",e.ShaderLib.equirect,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.NORMAL=this._createShader("builtin/normal.shader.json",e.ShaderLib.normal,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.POINTS=this._createShader("builtin/points.shader.json",e.ShaderLib.points,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.SHADOW=this._createShader("builtin/shadow.shader.json",e.ShaderLib.shadow,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.SPRITE=this._createShader("builtin/sprite.shader.json",e.ShaderLib.sprite,2e3,n.glTFTechnique.states),n.dispose()},r}(paper.SingletonComponent);e.DefaultShaders=t,__reflect(t.prototype,"egret3d.DefaultShaders")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype._createMaterial=function(t,r,n){void 0===n&&(n=2e3);var i=new e.Material(r);return i.name=t,i.renderQueue=n,i._isBuiltin=!0,paper.Asset.register(i),i},r.prototype.initialize=function(){t.prototype.initialize.call(this),r.MESH_BASIC=this._createMaterial("builtin/meshbasic.mat.json",e.DefaultShaders.MESH_BASIC).setTexture(e.DefaultTextures.WHITE),r.MESH_BASIC_DOUBLESIDE=this._createMaterial("builtin/meshbasic_doubleside.mat.json",e.DefaultShaders.MESH_BASIC).setTexture(e.DefaultTextures.WHITE).setCullFace(!1),r.MESH_LAMBERT=this._createMaterial("builtin/meshlambert.mat.json",e.DefaultShaders.MESH_LAMBERT).setTexture(e.DefaultTextures.WHITE),r.MESH_LAMBERT_DOUBLESIDE=this._createMaterial("builtin/meshlambert_doubleside.mat.json",e.DefaultShaders.MESH_BASIC).setTexture(e.DefaultTextures.WHITE).setCullFace(!1),r.LINEDASHED_COLOR=this._createMaterial("builtin/linedashed_color.mat.json",e.DefaultShaders.LINEDASHED).addDefine("USE_COLOR"),r.MISSING=this._createMaterial("builtin/missing.mat.json",e.DefaultShaders.MESH_BASIC).setColor(e.Color.PURPLE),r.SHADOW_DEPTH=this._createMaterial("builtin/shadow_depth.mat.json",e.DefaultShaders.DEPTH).addDefine("DEPTH_PACKING 3201"),r.SHADOW_DISTANCE=this._createMaterial("builtin/shadow_distance.mat.json",e.DefaultShaders.DISTANCE_RGBA)},r}(paper.SingletonComponent);e.DefaultMaterials=t,__reflect(t.prototype,"egret3d.DefaultMaterials")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.cameras=[],e.lights=[],e}return __extends(r,t),r.prototype._sortCameras=function(e,t){var r=e.renderTarget?e.order:1e3*e.order+1,n=t.renderTarget?t.order:1e3*t.order+1;return r-n},r.prototype.updateCameras=function(t){this.cameras.length=0;for(var r=0,n=t;r<n.length;r++){var i=n[r];this.cameras.push(i.getComponent(e.Camera))}},r.prototype.updateLights=function(t){this.lights.length=0;for(var r=0,n=t;r<n.length;r++){var i=n[r];this.lights.push(i.getComponent(e.BaseLight,!0))}},r.prototype.sortCameras=function(){this.cameras.sort(this._sortCameras)},Object.defineProperty(r.prototype,"cameraCount",{get:function(){return this.cameras.length},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"lightCount",{get:function(){return this.lights.length},enumerable:!0,configurable:!0}),__decorate([paper.editor.property(0)],r.prototype,"cameraCount",null),__decorate([paper.editor.property(0)],r.prototype,"lightCount",null),r}(paper.SingletonComponent);e.CamerasAndLights=t,__reflect(t.prototype,"egret3d.CamerasAndLights")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.drawCallCount=0,t.renderers=[],t.drawCalls=[],t.opaqueCalls=[],t.transparentCalls=[],t.shadowCalls=[],t}return __extends(t,e),t.prototype._sortOpaque=function(e,t){var r=e.material,n=t.material;return r.renderQueue!==n.renderQueue?r.renderQueue-n.renderQueue:r._glTFTechnique.program!==n._glTFTechnique.program?r._glTFTechnique.program-n._glTFTechnique.program:r._id!==n._id?r._id-n._id:e.zdist-t.zdist},t.prototype._sortFromFarToNear=function(e,t){return e.material.renderQueue===t.material.renderQueue?t.zdist-e.zdist:e.material.renderQueue-t.material.renderQueue},t.prototype.shadowFrustumCulling=function(e){this.shadowCalls.length=0;for(var t=0,r=this.drawCalls;t<r.length;t++){var n=r[t],i=n.renderer;!i.castShadows||0===(e.cullingMask&i.gameObject.layer)||i.frustumCulled&&!e.testFrustumCulling(i)||(this.drawCallCount++,this.shadowCalls.push(n))}this.shadowCalls.sort(this._sortFromFarToNear)},t.prototype.frustumCulling=function(e){var t=e.gameObject.transform.position;this.opaqueCalls.length=0,this.transparentCalls.length=0;for(var r=0,n=this.drawCalls;r<n.length;r++){var i=n[r],a=i.renderer;0===(e.cullingMask&a.gameObject.layer)||a.frustumCulled&&!e.testFrustumCulling(a)||(this.drawCallCount++,i.material.renderQueue>=3e3?this.transparentCalls.push(i):this.opaqueCalls.push(i),i.zdist=a.gameObject.transform.getPosition().getDistance(t))}this.opaqueCalls.sort(this._sortOpaque),this.transparentCalls.sort(this._sortFromFarToNear)},t.prototype.removeDrawCalls=function(e){var t=this.renderers.indexOf(e);if(!(0>t)){for(var r=this.drawCalls.length;r--;)this.drawCalls[r].renderer===e&&this.drawCalls.splice(r,1);this.renderers.splice(t,1)}},t.prototype.hasDrawCalls=function(e){return this.renderers.indexOf(e)>=0},__decorate([paper.editor.property(0)],t.prototype,"drawCallCount",void 0),t}(paper.SingletonComponent);e.DrawCalls=t,__reflect(t.prototype,"egret3d.DrawCalls")}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(t){function r(e,t,r,n){var i=l[t];if(e in i)for(var a=i[e],o=0,s=a;o<s.length;o++){var c=s[o];n?c(r,n):c(r)}}function n(e,t,r){var n=egret.getQualifiedClassName(t),i=n in l?l[n]:l[n]={},a=e in i?i[e]:i[e]=[];a.push(r)}function i(e,t,r){var n=egret.getQualifiedClassName(t);if(n in l){var i=l[n];if(e in i)for(var a=i[e],o=0,s=a.length;s>o;o++)if(a[o]===r){a.splice(o,1);break}}}function a(e,t){var r=egret.getQualifiedClassName(t);if(r in l){var n=l[r];e?e in n&&(n[e].length=0):delete l[r]}}function o(e,t,n){("__enabled__"===e||"__disabled__"===e)&&egret.is(t,c)&&r(e,c,t);var i=egret.getQualifiedClassName(t);i in l&&r(e,i,t,n)}var s;!function(e){e.Enabled="__enabled__",e.Disabled="__disabled__"}(s=t.EventType||(t.EventType={}));var c=egret.getQualifiedClassName(e.Behaviour),l={};t.addEventListener=n,t.removeEventListener=i,t.removeAllEventListener=a,t.dispatchEvent=o}(t=e.EventPool||(e.EventPool={}))}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.colliderType=e.ColliderType.Box,r.aabb=e.AABB.ONE.clone(),r}return __extends(r,t),r.prototype.raycast=function(t,r){var n=e.helpRay.applyMatrix(e.helpMatrixA.inverse(this.transform.worldMatrix),t);return this.aabb.raycast(n,r)?(r&&(r.position.applyMatrix(this.transform.worldMatrix),r.distance=t.origin.getDistance(r.position)),!0):!1},__decorate([paper.serializedField],r.prototype,"aabb",void 0),r}(e.BaseCollider);e.BoxCollider=t,__reflect(t.prototype,"egret3d.BoxCollider")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.colliderType=e.ColliderType.Sphere,r.sphere=e.Sphere.create(e.Vector3.ZERO,.5),r}return __extends(r,t),r.prototype.raycast=function(t,r){var n=e.helpRay.applyMatrix(e.helpMatrixA.inverse(this.transform.worldMatrix),t);return this.sphere.raycast(n,r)?(r&&(r.position.applyMatrix(this.transform.worldMatrix),r.distance=t.origin.getDistance(r.position)),!0):!1},__decorate([paper.serializedField],r.prototype,"sphere",void 0),r}(e.BaseCollider);e.SphereCollider=t,__reflect(t.prototype,"egret3d.SphereCollider")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[[{componentClass:e.Camera}],[{componentClass:[e.DirectionalLight,e.PointLight,e.SpotLight]}]],r._camerasAndLights=paper.GameObject.globalGameObject.getOrAddComponent(e.CamerasAndLights),r}return __extends(r,t),r.prototype.onAddGameObject=function(e,t){t===this._groups[0]?this._camerasAndLights.updateCameras(this._groups[0].gameObjects):t===this._groups[1]&&this._camerasAndLights.updateLights(this._groups[1].gameObjects)},r.prototype.onRemoveGameObject=function(e,t){t===this._groups[0]?this._camerasAndLights.updateCameras(this._groups[0].gameObjects):t===this._groups[1]&&this._camerasAndLights.updateLights(this._groups[1].gameObjects)},r.prototype.onUpdate=function(e){var t=this._camerasAndLights.cameras;if(t.length>0){this._camerasAndLights.sortCameras();for(var r=0,n=t;r<n.length;r++){var i=n[r];i._update(e)}}},r}(paper.BaseSystem);e.CameraAndLightSystem=t,__reflect(t.prototype,"egret3d.CameraAndLightSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=new e.Rectangle,r=function(r){function n(){var t=null!==r&&r.apply(this,arguments)||this;return t.clearOption_Color=!0,t.clearOption_Depth=!0,t.cullingMask=16777215,t.order=0,t.fov=.25*Math.PI,t.size=2,t.opvalue=1,t.backgroundColor=e.Color.create(.15,.25,.5,1),t.viewport=new e.Rectangle(0,0,1,1),t.postQueues=[],t.context=null,t.renderTarget=null,t._near=.001,t._far=1e3,t._projectionMatrix=e.Matrix4.create(),t._matProjO=e.Matrix4.create(),t._frameVectors=[e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create()],t}return __extends(n,r),Object.defineProperty(n,"main",{get:function(){var t=paper.Application.sceneManager.activeScene.findWithTag("Main Camera");return t||(t=paper.GameObject.create("Main Camera","Main Camera"),t.transform.setLocalPosition(0,10,-10),t.transform.lookAt(e.Vector3.ZERO)),t.getOrAddComponent(n)},enumerable:!0,configurable:!0}),Object.defineProperty(n,"editor",{get:function(){var t=paper.Application.sceneManager.editorScene.find("Editor Camera");if(!t){t=paper.GameObject.create("Editor Camera","Editor Only",paper.Application.sceneManager.editorScene),t.transform.setLocalPosition(0,10,-10),t.transform.lookAt(e.Vector3.ZERO);var r=t.addComponent(n);r.cullingMask&=-5,r.far=1e4}return t.getOrAddComponent(n)},enumerable:!0,configurable:!0}),n.prototype._calcCameraFrame=function(){var e=t;this.calcViewPortPixel(e);var r=this._frameVectors[0],n=this._frameVectors[1],i=this._frameVectors[2],a=this._frameVectors[3],o=this._frameVectors[4],s=this._frameVectors[5],c=this._frameVectors[6],l=this._frameVectors[7],p=this.near*Math.tan(.5*this.fov),u=e.w/e.h,d=p*u;s.set(-d,p,this.near),n.set(-d,-p,this.near),l.set(d,p,this.near),a.set(d,-p,this.near);var h=this.far*Math.tan(.5*this.fov),f=h*u;o.set(-f,h,this.far),r.set(-f,-h,this.far),c.set(f,h,this.far),i.set(f,-h,this.far);var _=this.gameObject.transform.getWorldMatrix();r.applyMatrix(_),n.applyMatrix(_),i.applyMatrix(_),a.applyMatrix(_),o.applyMatrix(_),s.applyMatrix(_),c.applyMatrix(_),l.applyMatrix(_)},n.prototype._intersectPlane=function(t,r,n,i){var a=e.helpVector3A,o=e.helpVector3B,s=e.helpVector3C,c=e.helpVector3D,l=e.helpVector3E,p=t.center;a.subtract(n,r),o.subtract(i,n),s.cross(a,o),e.calPlaneLineIntersectPoint(s,r,s,p,c),l.subtract(c,p);var u=l.dot(s);if(0>=u)return!0;var d=c.getDistance(p);return d<t.radius?!0:!1},n.prototype._update=function(e){this._calcCameraFrame(),this.context.updateCamera(this,this.gameObject.transform.getWorldMatrix())},n.prototype.initialize=function(){r.prototype.initialize.call(this),this.context=new e.RenderContext},n.prototype.calcProjectMatrix=function(t,r){return this.opvalue>0&&e.Matrix4.perspectiveProjectLH(this.fov,t,this.near,this.far,this._projectionMatrix),this.opvalue<1&&e.Matrix4.orthoProjectLH(this.size*t,this.size,this.near,this.far,this._matProjO),0===this.opvalue?r.copy(this._matProjO):1===this.opvalue?r.copy(this._projectionMatrix):r.lerp(this.opvalue,this._matProjO,this._projectionMatrix),r},n.prototype.calcViewPortPixel=function(t){var r,n,i=this.renderTarget,a=this.viewport;i?(r=i.width,n=i.height):(r=e.stage.screenViewport.w,n=e.stage.screenViewport.h),t.x=r*a.x,t.y=n*a.y,t.w=r*a.w,t.h=n*a.h},n.prototype.calcWorldPosFromScreenPos=function(r,n){var i=t;this.calcViewPortPixel(i);var a=e.helpVector3A;a.x=r.x/i.w*2-1,a.y=1-r.y/i.h*2,a.z=r.z;var o=e.helpMatrixA,s=e.helpMatrixB,c=i.w/i.h;o.inverse(this.gameObject.transform.getWorldMatrix()),this.calcProjectMatrix(c,s),e.helpMatrixC.multiply(s,o).inverse().transformVector3(a,n)},n.prototype.calcScreenPosFromWorldPos=function(r,n){var i=t;this.calcViewPortPixel(i);var a=e.helpMatrixA,o=e.helpMatrixB,s=i.w/i.h;a.inverse(this.gameObject.transform.getWorldMatrix()),this.calcProjectMatrix(s,o);var c=e.helpMatrixC.multiply(o,a),l=e.helpVector3A;c.transformVector3(r,l),n.x=(l.x+1)*i.w*.5,n.y=(1-l.y)*i.h*.5},n.prototype.getPosAtXPanelInViewCoordinateByScreenPos=function(r,n,i){var a=t;this.calcViewPortPixel(a);var o=e.helpVector3A;o.z=-this.near,o.x=r.x-.5*a.w,o.y=.5*a.h-r.y;var s=e.helpVector3B;s.z=-this.far,s.x=this.far*o.x/this.near,s.y=this.far*o.y/this.near;var c=(o.z-n)/(o.z-s.z);i.x=o.x-(o.x-s.x)*c,i.y=o.y-(o.y-s.y)*c},n.prototype.createRayByScreen=function(t,r,n){var i=e.Vector3.create(t,r,0).release(),a=e.Vector3.create(t,r,1).release();return this.calcWorldPosFromScreenPos(i,i),this.calcWorldPosFromScreenPos(a,a),a.subtract(a,i).normalize(),n=n||e.Ray.create(),n.set(i,a),n},n.prototype.testFrustumCulling=function(e){var t=e.boundingSphere;return this._intersectPlane(t,this._frameVectors[0],this._frameVectors[1],this._frameVectors[5])&&this._intersectPlane(t,this._frameVectors[1],this._frameVectors[3],this._frameVectors[7])&&this._intersectPlane(t,this._frameVectors[3],this._frameVectors[2],this._frameVectors[6])&&this._intersectPlane(t,this._frameVectors[2],this._frameVectors[0],this._frameVectors[4])&&this._intersectPlane(t,this._frameVectors[5],this._frameVectors[7],this._frameVectors[6])&&this._intersectPlane(t,this._frameVectors[0],this._frameVectors[2],this._frameVectors[3])?!0:!1},Object.defineProperty(n.prototype,"near",{get:function(){return this._near},set:function(e){e>=this.far&&(e=this.far-1),.001>e&&(e=.001),this._near=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"far",{get:function(){return this._far},set:function(e){e<=this.near&&(e=this.near+1),e>=1e4&&(e=1e4),this._far=e},enumerable:!0,configurable:!0}),__decorate([paper.serializedField,paper.editor.property(4)],n.prototype,"clearOption_Color",void 0),__decorate([paper.serializedField,paper.editor.property(4)],n.prototype,"clearOption_Depth",void 0),__decorate([paper.serializedField,paper.editor.property(10,{listItems:paper.editor.getItemsFromEnum(paper.CullingMask)})],n.prototype,"cullingMask",void 0),__decorate([paper.serializedField,paper.editor.property(1)],n.prototype,"order",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0,maximum:Math.PI,step:.01})],n.prototype,"fov",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],n.prototype,"size",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0,maximum:1,step:.01})],n.prototype,"opvalue",void 0),__decorate([paper.serializedField,paper.editor.property(9)],n.prototype,"backgroundColor",void 0),__decorate([paper.serializedField],n.prototype,"viewport",void 0),__decorate([paper.serializedField],n.prototype,"_near",void 0),__decorate([paper.serializedField],n.prototype,"_far",void 0),__decorate([paper.editor.property(2,{minimum:.001,step:1})],n.prototype,"near",null),__decorate([paper.editor.property(2,{minimum:0,maximum:3e3,step:1})],n.prototype,"far",null),n}(paper.BaseComponent);e.Camera=r,__reflect(r.prototype,"egret3d.Camera")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function e(){this.renderTarget=null}return e.prototype.render=function(e,t){},e}();e.CameraPostQueueDepth=t,__reflect(t.prototype,"egret3d.CameraPostQueueDepth",["egret3d.ICameraPostQueue"]);var r=function(){function e(){this.renderTarget=null}return e.prototype.render=function(e,t){},e}();e.CameraPostQueueColor=r,__reflect(r.prototype,"egret3d.CameraPostQueueColor",["egret3d.ICameraPostQueue"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.Directional=12]="Directional",e[e.Point=15]="Point",e[e.Spot=18]="Spot"}(t||(t={}));
var r=e.Vector3.create(),n=function(){function t(){this.lightCount=0,this.directLightCount=0,this.pointLightCount=0,this.spotLightCount=0,this.shaderContextDefine="",this.lightmap=null,this.lightmapUV=1,this.lightmapIntensity=1,this.directLightArray=new Float32Array(0),this.pointLightArray=new Float32Array(0),this.spotLightArray=new Float32Array(0),this.directShadowMatrix=new Float32Array(0),this.spotShadowMatrix=new Float32Array(0),this.pointShadowMatrix=new Float32Array(0),this.matrix_m=e.Matrix4.create(),this.matrix_mvp=e.Matrix4.create(),this.directShadowMaps=[],this.pointShadowMaps=[],this.spotShadowMaps=[],this.ambientLightColor=new Float32Array([0,0,0]),this.viewPortPixel={x:0,y:0,w:0,h:0},this.cameraPosition=new Float32Array(3),this.cameraForward=new Float32Array(3),this.cameraUp=new Float32Array(3),this.matrix_v=e.Matrix4.create(),this.matrix_p=e.Matrix4.create(),this.matrix_mv=e.Matrix4.create(),this.matrix_vp=e.Matrix4.create(),this.matrix_mv_inverse=new e.Matrix3,this.lightShadowCameraNear=0,this.lightShadowCameraFar=0,this.lightPosition=new Float32Array([0,0,0,1]),this.fogColor=new Float32Array(3),this.fogDensity=0,this.fogNear=0,this.fogFar=0,this.drawCall=null}return t.prototype.updateCamera=function(e,t){e.calcViewPortPixel(this.viewPortPixel),e.calcProjectMatrix(this.viewPortPixel.w/this.viewPortPixel.h,this.matrix_p),this.matrix_v.inverse(t),this.matrix_vp.multiply(this.matrix_p,this.matrix_v);var r=t.rawData;(this.cameraPosition[0]!==r[12]||this.cameraPosition[1]!==r[13]||this.cameraPosition[2]!==r[14])&&(this.cameraPosition[0]=r[12],this.cameraPosition[1]=r[13],this.cameraPosition[2]=r[14]),(this.cameraUp[0]!==r[4]||this.cameraUp[1]!==r[5]||this.cameraUp[2]!==r[6])&&(this.cameraUp[0]=r[4],this.cameraUp[1]=r[5],this.cameraUp[2]=r[6]),(this.cameraForward[0]!==r[8]||this.cameraForward[1]!==r[9]||this.cameraForward[2]!==r[10])&&(this.cameraForward[0]=-r[8],this.cameraForward[1]=-r[9],this.cameraForward[2]=-r[10])},t.prototype.updateLights=function(t,n){var i=0,a=0,o=0,s=0;t.length>0&&(this.ambientLightColor[0]=n.r,this.ambientLightColor[1]=n.g,this.ambientLightColor[2]=n.b);for(var c=0,l=t;c<l.length;c++){var p=l[c];p instanceof e.DirectionalLight?a++:p instanceof e.PointLight?o++:p instanceof e.SpotLight&&s++,i++}this.directLightArray.length!==12*a&&(this.directLightArray=new Float32Array(12*a)),this.pointLightArray.length!==15*o&&(this.pointLightArray=new Float32Array(15*o)),this.spotLightArray.length!==18*s&&(this.spotLightArray=new Float32Array(18*s)),this.directShadowMatrix.length!==16*a&&(this.directShadowMatrix=new Float32Array(16*a)),this.pointShadowMatrix.length!==16*o&&(this.pointShadowMatrix=new Float32Array(16*o)),this.spotShadowMatrix.length!==16*s&&(this.spotShadowMatrix=new Float32Array(16*s)),this.directShadowMaps.length=a,this.pointShadowMaps.length=o,this.spotShadowMaps.length=s,this.lightCount=i,this.directLightCount=a,this.pointLightCount=o,this.spotLightCount=s;for(var u=0,d=0,h=0,f=0,_=this.directLightArray,m=0,v=t;m<v.length;m++){var p=v[m];switch(p.constructor){case e.DirectionalLight:p.gameObject.transform.getForward(r),r.applyDirection(this.matrix_v).normalize(),_=this.directLightArray,f=12*u,_[f++]=-r.x,_[f++]=-r.y,_[f++]=-r.z,_[f++]=p.color.r*p.intensity,_[f++]=p.color.g*p.intensity,_[f++]=p.color.b*p.intensity;break;case e.PointLight:var g=p.gameObject.transform.getPosition();_=this.pointLightArray,f=15*d,_[f++]=g.x,_[f++]=g.y,_[f++]=g.z,_[f++]=p.color.r*p.intensity,_[f++]=p.color.g*p.intensity,_[f++]=p.color.b*p.intensity,_[f++]=p.distance,_[f++]=p.decay;break;case e.SpotLight:var g=p.gameObject.transform.getPosition();p.gameObject.transform.getForward(r),r.applyDirection(this.matrix_v).normalize(),_=this.spotLightArray,f=18*h,_[f++]=g.x,_[f++]=g.y,_[f++]=g.z,_[f++]=-r.x,_[f++]=-r.y,_[f++]=-r.z,_[f++]=p.color.r*p.intensity,_[f++]=p.color.g*p.intensity,_[f++]=p.color.b*p.intensity,_[f++]=p.distance,_[f++]=p.decay,_[f++]=Math.cos(p.angle),_[f++]=Math.cos(p.angle*(1-p.penumbra))}if(p.castShadows)switch(_[f++]=1,_[f++]=-p.shadowBias,_[f++]=p.shadowRadius,_[f++]=p.shadowSize,_[f++]=p.shadowSize,p.constructor){case e.DirectionalLight:this.directShadowMatrix.set(p.matrix.rawData,16*u),this.directShadowMaps[u++]=p.renderTarget.texture;break;case e.PointLight:_[f++]=p.shadowCameraNear,_[f++]=p.shadowCameraFar,this.pointShadowMatrix.set(p.matrix.rawData,16*d),this.pointShadowMaps[d++]=p.renderTarget.texture;break;case e.SpotLight:this.spotShadowMatrix.set(p.matrix.rawData,16*h),this.spotShadowMaps[h++]=p.renderTarget.texture}else switch(_[f++]=0,_[f++]=0,_[f++]=0,_[f++]=0,p.constructor){case e.DirectionalLight:this.directShadowMaps[u++]=null;break;case e.PointLight:_[f++]=0,_[f++]=0,this.pointShadowMaps[d++]=null;break;case e.SpotLight:this.spotShadowMaps[h++]=null}}},t.prototype.updateLightDepth=function(e){var t=e.gameObject.transform.getPosition();(this.lightPosition[0]!==t.x||this.lightPosition[1]!==t.y||this.lightPosition[2]!==t.z)&&(this.lightPosition[0]=t.x,this.lightPosition[1]=t.y,this.lightPosition[2]=t.z),(this.lightShadowCameraNear!==e.shadowCameraNear||this.lightShadowCameraNear!==e.shadowCameraFar)&&(this.lightShadowCameraNear=e.shadowCameraNear,this.lightShadowCameraFar=e.shadowCameraFar)},t.prototype.update=function(e){var t=e.renderer,r=t.gameObject.scene,n=e.matrix||t.gameObject.transform.worldMatrix;this.drawCall=e,this.matrix_m.copy(n),this.matrix_mv.multiply(this.matrix_v,this.matrix_m),this.matrix_mvp.multiply(this.matrix_vp,this.matrix_m),this.matrix_mv_inverse.getNormalMatrix(this.matrix_mv),this.shaderContextDefine="",t.lightmapIndex>=0&&r.lightmaps.length>t.lightmapIndex&&(this.lightmap=r.lightmaps[t.lightmapIndex],this.lightmapUV=e.mesh.glTFMesh.primitives[e.subMeshIndex].attributes.TEXCOORD_1?1:0,this.lightmapIntensity=r.lightmapIntensity,this.shaderContextDefine+="#define USE_LIGHTMAP \n"),this.lightCount>0&&(this.directLightCount>0&&(this.shaderContextDefine+="#define NUM_DIR_LIGHTS "+this.directLightCount+"\n"),this.pointLightCount>0&&(this.shaderContextDefine+="#define NUM_POINT_LIGHTS "+this.pointLightCount+"\n"),this.spotLightCount>0&&(this.shaderContextDefine+="#define NUM_SPOT_LIGHTS "+this.spotLightCount+"\n"),t.receiveShadows&&(this.shaderContextDefine+="#define USE_SHADOWMAP \n",this.shaderContextDefine+="#define SHADOWMAP_TYPE_PCF \n")),0!==r.fogMode&&(this.fogColor[0]=r.fogColor.r,this.fogColor[1]=r.fogColor.g,this.fogColor[2]=r.fogColor.b,this.shaderContextDefine+="#define USE_FOG \n",2===r.fogMode?(this.fogDensity=r.fogDensity,this.shaderContextDefine+="#define FOG_EXP2 \n"):(this.fogNear=r.fogNear,this.fogFar=r.fogFar))},t}();e.RenderContext=n,__reflect(n.prototype,"egret3d.RenderContext")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.frustumCulled=!1,r._screenAdapter=new e.ConstantAdapter,r._catchedEvent={},r._stageWidth=0,r._stageHeight=0,r._scaler=1,r}return __extends(r,t),Object.defineProperty(r.prototype,"screenAdapter",{get:function(){return this._screenAdapter},set:function(e){e.$dirty=!0,this._screenAdapter=e},enumerable:!0,configurable:!0}),r.prototype.initialize=function(){t.prototype.initialize.call(this),this.stage=new egret.Stage,this.stage.maxTouches=98,this.root=new egret.DisplayObjectContainer,this.stage.addChild(this.root),this._renderer||(this._renderer=egret.web.Renderer.getInstance(e.WebGLCapabilities.webgl));var r=this.stage,n=new egret.sys.DisplayList(r);n.renderBuffer=new egret.sys.RenderBuffer(void 0,void 0,!0),r.$displayList=n;var i=paper.Application.systemManager.getSystem(e.Egret2DRendererSystem).webInput;i&&egret.web.$cacheTextAdapter(i,r,e.WebGLCapabilities.canvas.parentNode,e.WebGLCapabilities.canvas),e.InputManager.touch.addEventListener("touchstart",this._onTouchStart,this),e.InputManager.touch.addEventListener("touchend",this._onTouchEnd,this),e.InputManager.touch.addEventListener("touchcancel",this._onTouchEnd,this),e.InputManager.touch.addEventListener("touchmove",this._onTouchMove,this),e.InputManager.mouse.addEventListener("mousedown",this._onTouchStart,this),e.InputManager.mouse.addEventListener("mouseup",this._onTouchEnd,this),e.InputManager.mouse.addEventListener("mousemove",this._onTouchMove,this)},r.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),e.InputManager.touch.removeEventListener("touchstart",this._onTouchStart,this),e.InputManager.touch.removeEventListener("touchend",this._onTouchEnd,this),e.InputManager.touch.removeEventListener("touchcancel",this._onTouchEnd,this),e.InputManager.touch.removeEventListener("touchmove",this._onTouchMove,this),e.InputManager.mouse.removeEventListener("mousedown",this._onTouchStart,this),e.InputManager.mouse.removeEventListener("mouseup",this._onTouchEnd,this),e.InputManager.mouse.removeEventListener("mousemove",this._onTouchMove,this)},r.prototype.recalculateAABB=function(){},r.prototype.raycast=function(e,t,r){return!1},r.prototype.checkEventThrough=function(e,t){return!!this._catchedEvent[e+"_"+t]},r.prototype._onTouchStart=function(e){this.stage.$onTouchBegin(e.x/this._scaler,e.y/this._scaler,e.identifier)&&(this._catchedEvent[e.x+"_"+e.y]=!0)},r.prototype._onTouchMove=function(e){this.stage.$onTouchMove(e.x/this._scaler,e.y/this._scaler,e.identifier)&&(this._catchedEvent[e.x+"_"+e.y]=!0)},r.prototype._onTouchEnd=function(e){this.stage.$onTouchEnd(e.x/this._scaler,e.y/this._scaler,e.identifier)&&(this._catchedEvent[e.x+"_"+e.y]=!0)},r.prototype.screenPosToUIPos=function(t,r){return void 0===r&&(r=new e.Vector2),r.x=t.x/this._scaler,r.y=t.y/this._scaler,r},Object.defineProperty(r.prototype,"scaler",{get:function(){return this._scaler},enumerable:!0,configurable:!0}),r.prototype.update=function(t){var r=this.stage,n=e.stage.screenViewport,i=n.w,a=n.h;if(this._stageWidth!==i||this._stageHeight!==a||this.screenAdapter.$dirty){var o={w:0,h:0,s:0};this.screenAdapter.calculateScaler(i,a,o),this.screenAdapter.$dirty=!1,r.$displayList.offsetMatrix.a=o.s,r.$displayList.offsetMatrix.d=o.s,this._scaler=o.s;var s=o.w,c=o.h;r.$stageWidth=s,r.$stageHeight=c,r.pushResize(i,a),r.dispatchEventWith(egret.Event.RESIZE),this._stageWidth=i,this._stageHeight=a}this._catchedEvent={}},r.prototype.render=function(e,t){this._renderer.beforeRender(),this.stage.drawToSurface()},r}(paper.BaseRenderer);e.Egret2DRenderer=t,__reflect(t.prototype,"egret3d.Egret2DRenderer")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Egret2DRenderer}],r.webInput=egret.Capabilities.runtimeType===egret.RuntimeType.WEB?new egret.web.HTMLInput:null,r}return __extends(r,t),r.prototype.onAwake=function(){this.webInput&&this.webInput._initStageDelegateDiv(e.WebGLCapabilities.canvas.parentNode,e.WebGLCapabilities.canvas)},r.prototype.onUpdate=function(t){for(var r=0,n=this._groups[0].gameObjects;r<n.length;r++){var i=n[r];i.getComponent(e.Egret2DRenderer).update(t)}},r}(paper.BaseSystem);e.Egret2DRendererSystem=t,__reflect(t.prototype,"egret3d.Egret2DRendererSystem")}(egret3d||(egret3d={}));var egret;!function(e){var t;!function(t){var r=function(){function r(t){this.context=t;var r=this.egretWebGLRenderContext=e.web.WebGLRenderContext.getInstance(0,0);r.setContext(t),this.drawCmdManager=r.drawCmdManager,this.vao=r.vao,r.$drawWebGL=this.$drawWebGL.bind(this),e.sys.RenderBuffer=e.web.WebGLRenderBuffer,e.sys.systemRenderer=new e.web.WebGLRenderer,e.sys.canvasRenderer=new e.CanvasRenderer,e.sys.customHitTestBuffer=new e.web.WebGLRenderBuffer(3,3),e.sys.canvasHitTestBuffer=new e.web.CanvasRenderBuffer(3,3),e.Capabilities.$renderMode="webgl",this.vertexBuffer=t.createBuffer(),this.indexBuffer=t.createBuffer()}return r.getInstance=function(e){return this._instance||(this._instance=new r(e)),this._instance},r.prototype.beforeRender=function(){var e=this.context;e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.enable(e.BLEND),e.disable(e.STENCIL_TEST),e.colorMask(!0,!0,!0,!0),this.setBlendMode("source-over"),e.activeTexture(e.TEXTURE0),this.currentProgram=null},r.prototype.$drawWebGL=function(){if(0!=this.drawCmdManager.drawDataLen){this.uploadVerticesArray(this.vao.getVertices()),this.vao.isMesh()&&this.uploadIndicesArray(this.vao.getMeshIndices());for(var e=this.drawCmdManager.drawDataLen,t=0,r=0;e>r;r++){var n=this.drawCmdManager.drawData[r];n&&(t=this.drawData(n,t),6==n.type&&(this._activatedBuffer=n.buffer,this.egretWebGLRenderContext.activatedBuffer=n.buffer),(0==n.type||1==n.type||2==n.type)&&this._activatedBuffer&&this._activatedBuffer.$computeDrawCall&&this._activatedBuffer.$drawCalls++)}this.vao.isMesh()&&this.uploadIndicesArray(this.vao.getIndices()),this.drawCmdManager.clear(),this.vao.clear()}},r.prototype.drawData=function(e,r){if(e){var n,i=this.context,a=e.filter;switch(e.type){case 0:a?"custom"===a.type?n=t.EgretWebGLProgram.getProgram(i,a.$vertexSrc,a.$fragmentSrc,a.$shaderKey):"colorTransform"===a.type?n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.colorTransform_frag,"colorTransform"):"blurX"===a.type?n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.blur_frag,"blur"):"blurY"===a.type?n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.blur_frag,"blur"):"glow"===a.type&&(n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.glow_frag,"glow")):n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.texture_frag,"texture"),this.activeProgram(i,n),this.syncUniforms(n,a,e),r+=this.drawTextureElements(e,r);break;case 1:n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.primitive_frag,"primitive"),this.activeProgram(i,n),this.syncUniforms(n,a,e),r+=this.drawPushMaskElements(e,r);break;case 2:n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.primitive_frag,"primitive"),this.activeProgram(i,n),this.syncUniforms(n,a,e),r+=this.drawPopMaskElements(e,r);break;case 3:this.setBlendMode(e.value);break;case 4:e.buffer.rootRenderTarget.resize(e.width,e.height),this.onResize(e.width,e.height);break;case 5:if(this._activatedBuffer){var o=this._activatedBuffer.rootRenderTarget;(0!=o.width||0!=o.height)&&o.clear(!0)}break;case 6:this.activateBuffer(e.buffer,e.width,e.height);break;case 7:var s=this._activatedBuffer;s&&(s.rootRenderTarget&&s.rootRenderTarget.enabledStencil(),s.enableScissor(e.x,e.y,e.width,e.height));break;case 8:s=this._activatedBuffer,s&&s.disableScissor()}return r}},r.prototype.activeProgram=function(e,t){if(t!=this.currentProgram){e.useProgram(t.id);var r=t.attributes;for(var n in r)"aVertexPosition"===n?(e.vertexAttribPointer(r.aVertexPosition.location,2,e.FLOAT,!1,16,0),e.enableVertexAttribArray(r.aVertexPosition.location)):"aTextureCoord"===n?(e.vertexAttribPointer(r.aTextureCoord.location,2,e.UNSIGNED_SHORT,!0,16,8),e.enableVertexAttribArray(r.aTextureCoord.location)):"aColor"===n?(e.vertexAttribPointer(r.aColor.location,1,e.FLOAT,!1,16,12),e.enableVertexAttribArray(r.aColor.location)):"aParticlePosition"===n?(e.vertexAttribPointer(r.aParticlePosition.location,2,e.FLOAT,!1,88,0),e.enableVertexAttribArray(r.aParticlePosition.location)):"aParticleTextureCoord"===n?(e.vertexAttribPointer(r.aParticleTextureCoord.location,2,e.FLOAT,!1,88,8),e.enableVertexAttribArray(r.aParticleTextureCoord.location)):"aParticleScale"===n?(e.vertexAttribPointer(r.aParticleScale.location,2,e.FLOAT,!1,88,16),e.enableVertexAttribArray(r.aParticleScale.location)):"aParticleRotation"===n?(e.vertexAttribPointer(r.aParticleRotation.location,2,e.FLOAT,!1,88,24),e.enableVertexAttribArray(r.aParticleRotation.location)):"aParticleRed"===n?(e.vertexAttribPointer(r.aParticleRed.location,2,e.FLOAT,!1,88,32),e.enableVertexAttribArray(r.aParticleRed.location)):"aParticleGreen"===n?(e.vertexAttribPointer(r.aParticleGreen.location,2,e.FLOAT,!1,88,40),e.enableVertexAttribArray(r.aParticleGreen.location)):"aParticleBlue"===n?(e.vertexAttribPointer(r.aParticleBlue.location,2,e.FLOAT,!1,88,48),e.enableVertexAttribArray(r.aParticleBlue.location)):"aParticleAlpha"===n?(e.vertexAttribPointer(r.aParticleAlpha.location,2,e.FLOAT,!1,88,56),e.enableVertexAttribArray(r.aParticleAlpha.location)):"aParticleEmitRotation"===n?(e.vertexAttribPointer(r.aParticleEmitRotation.location,2,e.FLOAT,!1,88,64),e.enableVertexAttribArray(r.aParticleEmitRotation.location)):"aParticleEmitRadius"===n?(e.vertexAttribPointer(r.aParticleEmitRadius.location,2,e.FLOAT,!1,88,72),e.enableVertexAttribArray(r.aParticleEmitRadius.location)):"aParticleTime"===n&&(e.vertexAttribPointer(r.aParticleTime.location,2,e.FLOAT,!1,88,80),e.enableVertexAttribArray(r.aParticleTime.location));this.currentProgram=t}},r.prototype.syncUniforms=function(e,t,r){var n=e.uniforms;for(var i in n)if("projectionVector"===i)n[i].setValue({x:this.projectionX,y:this.projectionY});else if("uTextureSize"===i)n[i].setValue({x:r.textureWidth,y:r.textureHeight});else if("uSampler"===i);else if("uGlobalMatrix"===i)n[i].setValue([r.a,r.c,r.tx,r.b,r.d,r.ty,0,0,1]);else if("uGlobalAlpha"===i)n[i].setValue(r.alpha);else{var a=t.$uniforms[i];void 0!==a&&n[i].setValue(a)}},r.prototype.drawTextureElements=function(e,t){var r=this.context;r.bindTexture(r.TEXTURE_2D,e.texture);var n=3*e.count;return r.drawElements(r.TRIANGLES,n,r.UNSIGNED_SHORT,2*t),n},r.prototype.activateBuffer=function(e,t,r){e.rootRenderTarget.activate(),this.bindIndices||this.uploadIndicesArray(this.vao.getIndices()),e.restoreStencil(),e.restoreScissor(),this.onResize(t,r)},r.prototype.onResize=function(e,t){this.projectionX=e/2,this.projectionY=-t/2,this.context&&this.context.viewport(0,0,e,t)},r.prototype.uploadVerticesArray=function(e){var t=this.context;t.bufferData(t.ARRAY_BUFFER,e,t.STREAM_DRAW)},r.prototype.uploadIndicesArray=function(e){var t=this.context;t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW),this.bindIndices=!0},r.prototype.drawPushMaskElements=function(e,t){var r=this.context,n=3*e.count,i=this._activatedBuffer;if(i){i.rootRenderTarget&&i.rootRenderTarget.enabledStencil(),0==i.stencilHandleCount&&(i.enableStencil(),r.clear(r.STENCIL_BUFFER_BIT));var a=i.stencilHandleCount;i.stencilHandleCount++,r.colorMask(!1,!1,!1,!1),r.stencilFunc(r.EQUAL,a,255),r.stencilOp(r.KEEP,r.KEEP,r.INCR),r.drawElements(r.TRIANGLES,n,r.UNSIGNED_SHORT,2*t),r.stencilFunc(r.EQUAL,a+1,255),r.colorMask(!0,!0,!0,!0),r.stencilOp(r.KEEP,r.KEEP,r.KEEP)}return n},r.prototype.drawPopMaskElements=function(e,t){var r=this.context,n=3*e.count,i=this._activatedBuffer;if(i)if(i.stencilHandleCount--,0==i.stencilHandleCount)i.disableStencil();else{var a=i.stencilHandleCount;r.colorMask(!1,!1,!1,!1),r.stencilFunc(r.EQUAL,a+1,255),r.stencilOp(r.KEEP,r.KEEP,r.DECR),r.drawElements(r.TRIANGLES,n,r.UNSIGNED_SHORT,2*t),r.stencilFunc(r.EQUAL,a,255),r.colorMask(!0,!0,!0,!0),r.stencilOp(r.KEEP,r.KEEP,r.KEEP)}return n},r.prototype.setBlendMode=function(e){var t=this.context,n=r.blendModesForGL[e];n&&t.blendFunc(n[0],n[1])},r.initBlendMode=function(){r.blendModesForGL={},r.blendModesForGL["source-over"]=[1,771],r.blendModesForGL.lighter=[1,1],r.blendModesForGL["lighter-in"]=[770,771],r.blendModesForGL["destination-out"]=[0,771],r.blendModesForGL["destination-in"]=[0,770]},r.blendModesForGL=null,r}();t.Renderer=r,__reflect(r.prototype,"egret.web.Renderer"),r.initBlendMode()}(t=e.web||(e.web={}))}(egret||(egret={}));var egret3d;!function(e){var t=function(){function e(){this.$dirty=!0,this._scaleFactor=1}return Object.defineProperty(e.prototype,"scaleFactor",{set:function(e){this._scaleFactor=e,this.$dirty=!0},enumerable:!0,configurable:!0}),e.prototype.calculateScaler=function(e,t,r){var n=this._scaleFactor;r.s=n,r.w=e/n,r.h=t/n},e}();e.ConstantAdapter=t,__reflect(t.prototype,"egret3d.ConstantAdapter",["egret3d.IScreenAdapter"]);var r=function(){function t(){this.$dirty=!0,this._resolution=new e.Vector2(640,1136)}return t.prototype.setResolution=function(e,t){this._resolution.x=e,this._resolution.y=t,this.$dirty=!0},t.prototype.calculateScaler=function(e,t,r){var n=e/t,i=this._resolution.x/this._resolution.y,a=1;a=n>i?t/this._resolution.y:e/this._resolution.x,r.s=a,r.w=e/a,r.h=t/a},t}();e.ExpandAdapter=r,__reflect(r.prototype,"egret3d.ExpandAdapter",["egret3d.IScreenAdapter"]);var n=function(){function t(){this.$dirty=!0,this._resolution=new e.Vector2(640,1136)}return t.prototype.setResolution=function(e,t){this._resolution.x=e,this._resolution.y=t,this.$dirty=!0},t.prototype.calculateScaler=function(e,t,r){var n=e/t,i=this._resolution.x/this._resolution.y,a=1;a=n>i?e/this._resolution.x:t/this._resolution.y,r.s=a,r.w=e/a,r.h=t/a},t}();e.ShrinkAdapter=n,__reflect(n.prototype,"egret3d.ShrinkAdapter",["egret3d.IScreenAdapter"]);var i=function(){function t(){this.$dirty=!0,this._resolution=new e.Vector2(640,1136),this._matchFactor=0}return t.prototype.setResolution=function(e,t){this._resolution.x=e,this._resolution.y=t,this.$dirty=!0},Object.defineProperty(t.prototype,"matchFactor",{set:function(e){this._matchFactor=e,this.$dirty=!0},enumerable:!0,configurable:!0}),t.prototype.calculateScaler=function(e,t,r){var n=e/this._resolution.x,i=t/this._resolution.y,a=n+(i-n)*this._matchFactor;r.s=a,r.w=e/a,r.h=t/a},t}();e.MatchWidthOrHeightAdapter=i,__reflect(i.prototype,"egret3d.MatchWidthOrHeightAdapter",["egret3d.IScreenAdapter"])}(egret3d||(egret3d={}));var paper;!function(e){var t=function(t){function r(r,n,i){void 0===r&&(r="NoName"),void 0===n&&(n=""),void 0===i&&(i=null);var a=t.call(this)||this;return a.isStatic=!1,a.hideFlags=0,a.layer=2,a.name="",a.tag="",a.transform=null,a.renderer=null,a.extras=2===e.Application.playerMode?{}:void 0,a._activeSelf=!0,a._activeInHierarchy=!0,a._activeDirty=!0,a._components=[],a._cachedComponents=[],a._scene=null,a.name=r,a.tag=n,a._addToScene(i||e.Application.sceneManager.activeScene),a.addComponent(egret3d.Transform),a}return __extends(r,t),r.create=function(e,t,n){void 0===e&&(e="NoName"),void 0===t&&(t=""),void 0===n&&(n=null);var i;return i=new r(e,t,n)},r._raycast=function(e,t,r,n,i,a){if(void 0===r&&(r=0),void 0===n&&(n=16777215),void 0===i&&(i=!1),3!==t.hideFlags||"Editor Only"!==t.tag||t.transform.parent&&!t.transform.parent.gameObject.activeInHierarchy?t.activeInHierarchy:!t.activeSelf){var o=egret3d.RaycastInfo.create();if(o.transform=null,o.collider=null,t.layer&n)if(i)t.renderer&&t.renderer.enabled&&t.renderer.raycast(e,o,i)&&(o.transform=t.transform);else{var s=t.getComponent(egret3d.BoxCollider);if(s)s.enabled&&s.raycast(e,o)&&(o.transform=t.transform,o.collider=s);else{var c=t.getComponent(egret3d.SphereCollider);c&&c.enabled&&c.raycast(e,o)&&(o.transform=t.transform,o.collider=c)}}if(o.transform&&(0>=r||o.distance<=r)?a.push(o):(o.transform=null,o.release()),!o.transform)for(var l=0,p=t.transform.children;l<p.length;l++){var u=p[l];this._raycast(e,u.gameObject,r,n,i,a)}}},r._sortRaycastInfo=function(e,t){return e.distance-t.distance},r.raycast=function(e,t,n,i,a){void 0===n&&(n=0),void 0===i&&(i=16777215),void 0===a&&(a=!1);for(var o=[],s=0,c=t;s<c.length;s++){var l=c[s];this._raycast(e,l instanceof r?l:l.gameObject,n,i,a,o)}return o.sort(this._sortRaycastInfo),o},Object.defineProperty(r,"globalGameObject",{get:function(){return this._globalGameObject||(this._globalGameObject=r.create("Global","Global",e.Application.sceneManager.globalScene),this._globalGameObject.dontDestroy=!0),this._globalGameObject},enumerable:!0,configurable:!0}),r.prototype._destroy=function(){this._scene._removeGameObject(this);for(var t=0,n=this.transform.children;t<n.length;t++){var i=n[t];i.gameObject._destroy()}for(var a=0,o=this._components;a<o.length;a++){var s=o[a];s&&this._removeComponent(s,null)}r.globalGameObject.getOrAddComponent(e.DisposeCollecter).gameObjects.push(this),this._components.length=0,this._scene=null},r.prototype._addToScene=function(e){this._scene&&this._scene._removeGameObject(this),this._scene=e,this._scene._addGameObject(this)},r.prototype._canRemoveComponent=function(t){if(t===this.transform)return console.warn("Cannot remove the transform component from a game object."),!1;for(var r=0,n=this._components;r<n.length;r++){var i=n[r];if(i){i.constructor===e.GroupComponent&&(i=i.components[0]);var a=i.constructor.requireComponents;if(a&&a.indexOf(t.constructor)>=0)return console.warn("Cannot remove the "+egret.getQualifiedClassName(t)+" component from the game object ("+this.path+"), because it is required from the "+egret.getQualifiedClassName(i)+" component."),!1}}return!0},r.prototype._removeComponent=function(t,n){if(t.enabled=!1,t.gameObject=null,t===this.renderer&&(this.renderer=null),r.globalGameObject.getOrAddComponent(e.DisposeCollecter).components.push(t),n)n._removeComponent(t),0===n.components.length&&this._removeComponent(n,null);else if(t.constructor===e.GroupComponent){n=t,delete this._components[n.componentIndex];for(var i=0,a=n.components;i<a.length;i++){var o=a[i];this._removeComponent(o,n)}}else delete this._components[t.constructor.__index]},r.prototype._getComponent=function(e){var t=e.__index;return 0>t?null:this._components[t]},r.prototype._activeInHierarchyDirty=function(t){this._activeDirty=!0;var r=this.activeInHierarchy;if(r!==t)for(var n=0,i=this._components;n<i.length;n++){var a=i[n];if(a&&(a.enabled&&e.EventPool.dispatchEvent(r?"__enabled__":"__disabled__",a),a.constructor===e.GroupComponent))for(var o=0,s=a.components;o<s.length;o++){var c=s[o];c.enabled&&e.EventPool.dispatchEvent(r?"__enabled__":"__disabled__",c)}}for(var l=0,p=this.transform.children;l<p.length;l++){var u=p[l];u.gameObject._activeInHierarchyDirty(t)}},r.prototype.uninitialize=function(){this.isStatic=!1,this.hideFlags=0,this.layer=2,this.name="",this.tag="",this.transform=null,this.renderer=null,this.extras&&(this.extras={}),this._activeSelf=!0,this._activeInHierarchy=!0,this._activeDirty=!0,this._cachedComponents.length=0,this._scene=null},r.prototype.destroy=function(){if(this.isDestroyed)return console.warn("The game object has been destroyed."),!1;if(this===r._globalGameObject)return console.warn("Cannot destroy global game object."),!1;var e=this.transform.parent;return e&&e._children.splice(e._children.indexOf(this.transform),1),this._destroy(),!0},r.prototype.addComponent=function(t,n){if(e.registerClass(t),t.__isSingleton&&this!==r._globalGameObject)return r.globalGameObject.getOrAddComponent(t,n);var i=t.__index,a=this._components[i];if(!t.allowMultiple&&a)return console.warn("Cannot add the "+egret.getQualifiedClassName(t)+" component to the game object ("+this.path+") again."),a;if(t.requireComponents)for(var o=0,s=t.requireComponents;o<s.length;o++){var c=s[o];this.getOrAddComponent(c)}var l=e.BaseComponent.create(t,this);if(t===egret3d.Transform?this.transform=l:l instanceof e.BaseRenderer&&(this.renderer=l),a)if(a.constructor===e.GroupComponent)a._addComponent(l);else{e.registerClass(e.GroupComponent);var p=e.BaseComponent.create(e.GroupComponent,this);p.initialize(),p.componentIndex=i,p.componentClass=t,p._addComponent(a),p._addComponent(l),this._components[i]=p}else this._components[i]=l;return n?l.initialize(n):l.initialize(),l.isActiveAndEnabled&&e.EventPool.dispatchEvent("__enabled__",l),l},r.prototype.removeComponent=function(t,n){if(void 0===n&&(n=!1),t instanceof e.BaseComponent){var i=t.constructor;if(i.__isSingleton&&this!==r._globalGameObject)return void r.globalGameObject.removeComponent(t,n);if(!this._canRemoveComponent(t))return;this._removeComponent(t,null)}else{if(t.__isSingleton&&this!==r._globalGameObject)return r.globalGameObject.removeComponent(t,n);if(n)for(var a=0,o=this._components;a<o.length;a++){var s=o[a];if(s){var c=null;if(s.constructor===e.GroupComponent&&(c=s,s=c.components[0]),c){if(!(c.components[0]instanceof t)||1===c.components.length&&!this._canRemoveComponent(c.components[0]))continue}else if(!(s instanceof t&&this._canRemoveComponent(s)))continue;this._removeComponent(s,c)}}else{var s=this._getComponent(t);if(!s)return;var c=null;if(s.constructor===e.GroupComponent&&(c=s,s=c.components[0]),c){if(1===c.components.length&&!this._canRemoveComponent(c.components[0]))return}else if(!this._canRemoveComponent(s))return;this._removeComponent(s,c)}}},r.prototype.removeAllComponents=function(t,n){if(void 0===n&&(n=!1),t){if(t.__isSingleton&&this!==r._globalGameObject)return void r.globalGameObject.removeAllComponents(t,n);if(n)for(var i=0,a=this._components;i<a.length;i++){var o=a[i];if(o){if(o.constructor===e.GroupComponent){var s=o;if(!(s.components[0]instanceof t&&this._canRemoveComponent(s.components[0])))continue}else if(!this._canRemoveComponent(o))continue;this._removeComponent(o,null)}}else{var o=this._getComponent(t);if(!o)return;if(o.constructor===e.GroupComponent){var s=o;if(!this._canRemoveComponent(s.components[0]))return}else if(!this._canRemoveComponent(o))return;this._removeComponent(o,null)}}else for(var c=0,l=this._components;c<l.length;c++){var o=l[c];o&&o.constructor!==egret3d.Transform&&this._removeComponent(o,null)}},r.prototype.getComponent=function(t,n){if(void 0===n&&(n=!1),t.__isSingleton&&this!==r._globalGameObject)return r.globalGameObject.getComponent(t,n);if(n){for(var i=0,a=this._components;i<a.length;i++){var o=a[i];if(o)if(o.constructor===e.GroupComponent){var s=o;if(s.components[0]instanceof t)return s.components[0]}else if(o instanceof t)return o}return null}var c=t.__index;if(0>c)return null;var l=this._components[c];return l?l.constructor===e.GroupComponent?l.components[0]:l:null},r.prototype.getComponents=function(t,n){if(void 0===n&&(n=!1),t.__isSingleton&&this!==r._globalGameObject)return r.globalGameObject.getComponents(t,n);var i=[];if(n)for(var a=0,o=this._components;a<o.length;a++){var s=o[a];if(s)if(s.constructor===e.GroupComponent&&s.components[0]instanceof t)for(var c=0,l=s.components;c<l.length;c++){var p=l[c];i.push(p)}else s instanceof t&&i.push(s)}else{var s=this._getComponent(t);if(s)if(s.constructor===e.GroupComponent&&s.components[0]instanceof t)for(var u=0,d=s.components;u<d.length;u++){var p=d[u];i.push(p)}else s instanceof t&&i.push(s)}return i},r.prototype.getComponentInParent=function(e,t){void 0===t&&(t=!1);for(var r=null,n=this.transform.parent;!r&&n;)r=n.gameObject.getComponent(e,t),n=n.parent;return r},r.prototype.getComponentInChildren=function(e,t){void 0===t&&(t=!1);var r=this.getComponent(e,t);if(!r)for(var n=0,i=this.transform.children;n<i.length;n++){var a=i[n];if(r=a.gameObject.getComponentInChildren(e,t))break}return r},r.prototype.getComponentsInChildren=function(t,r,n){void 0===r&&(r=!1),void 0===n&&(n=null),n=n||[];for(var i=0,a=this._components;i<a.length;i++){var o=a[i];if(o)if(o.constructor===e.GroupComponent){var s=o;if(r?s.components[0]instanceof t:s.componentClass===t)for(var c=0,l=s.components;c<l.length;c++){var p=l[c];n.push(p)}}else(r?o instanceof t:o.constructor===t)&&n.push(o)}for(var u=0,d=this.transform.children;u<d.length;u++){var h=d[u];h.gameObject.getComponentsInChildren(t,r,n)}return n},r.prototype.getOrAddComponent=function(e,t){return void 0===t&&(t=!1),this.getComponent(e,t)||this.addComponent(e,t)},r.prototype.sendMessage=function(t,r,n){void 0===n&&(n=!0);for(var i=0,a=this._components;i<a.length;i++){var o=a[i];o&&o.isActiveAndEnabled&&o.constructor instanceof e.Behaviour&&(t in o?o[t](r):n&&console.warn(this.name,egret.getQualifiedClassName(o),t))}},r.prototype.sendMessageUpwards=function(e,t,r){void 0===r&&(r=!0),this.sendMessage(e,t,r);var n=this.transform.parent;n&&n.gameObject.activeInHierarchy&&n.gameObject.sendMessage(e,t,r)},r.prototype.broadcastMessage=function(e,t,r){void 0===r&&(r=!0),this.sendMessage(e,t,r);for(var n=0,i=this.transform.children;n<i.length;n++){var a=i[n];a.gameObject.activeInHierarchy&&a.gameObject.broadcastMessage(e,t,r)}},Object.defineProperty(r.prototype,"isDestroyed",{get:function(){return!this._scene
},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"dontDestroy",{get:function(){return this._scene===e.Application.sceneManager.globalScene},set:function(t){if(this.dontDestroy!==t){if(this.transform.parent&&this.transform.parent.gameObject.dontDestroy!==t&&(this.transform.parent=null),t)this._addToScene(e.Application.sceneManager.globalScene);else{if(this===r._globalGameObject)return void console.warn("Cannot change the `dontDestroy` value of the global game object.",this.name,this.uuid);this._addToScene(e.Application.sceneManager.activeScene)}for(var n=0,i=this.transform.children;n<i.length;n++){var a=i[n];a.gameObject.dontDestroy=t}}},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"activeSelf",{get:function(){return this._activeSelf},set:function(e){if(this._activeSelf!==e){var t=this.transform.parent;if(!t||t.gameObject.activeInHierarchy){var r=this._activeSelf;this._activeSelf=e,this._activeInHierarchyDirty(r)}else this._activeSelf=e}},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"activeInHierarchy",{get:function(){if(this._activeDirty){var e=this.transform.parent;!e||e.gameObject.activeInHierarchy?this._activeInHierarchy=this._activeSelf:this._activeInHierarchy=!1,this._activeDirty=!1}return this._activeInHierarchy},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"path",{get:function(){var e=this.name;if(this.transform){for(var t=this.transform.parent;t;)e=t.gameObject.name+"/"+e,t=t.parent;return this._scene.name+"/"+e}return e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"components",{get:function(){this._cachedComponents.length=0;for(var t=0,r=this._components;t<r.length;t++){var n=r[t];if(n)if(n.constructor===e.GroupComponent)for(var i=0,a=n.components;i<a.length;i++){var o=a[i];this._cachedComponents.push(o)}else this._cachedComponents.push(n)}return this._cachedComponents},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"parent",{get:function(){return this.transform.parent?this.transform.parent.gameObject:null},set:function(e){this.transform.parent=e?e.transform:null},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"scene",{get:function(){return this._scene},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"globalGameObject",{get:function(){return r.globalGameObject},enumerable:!0,configurable:!0}),r.find=function(t,r){return void 0===r&&(r=null),(r||e.Application.sceneManager.activeScene).find(t)},r.findWithTag=function(t,r){return void 0===r&&(r=null),(r||e.Application.sceneManager.activeScene).findWithTag(t)},r.findGameObjectsWithTag=function(t,r){return void 0===r&&(r=null),(r||e.Application.sceneManager.activeScene).findGameObjectsWithTag(t)},r._instances=[],r._globalGameObject=null,__decorate([e.serializedField,e.editor.property(4)],r.prototype,"isStatic",void 0),__decorate([e.serializedField],r.prototype,"hideFlags",void 0),__decorate([e.serializedField,e.editor.property(10,{listItems:e.editor.getItemsFromEnum(e.Layer)})],r.prototype,"layer",void 0),__decorate([e.serializedField,e.editor.property(3)],r.prototype,"name",void 0),__decorate([e.serializedField,e.editor.property(10,{listItems:e.editor.getItemsFromEnum(e.DefaultTags)})],r.prototype,"tag",void 0),__decorate([e.serializedField],r.prototype,"extras",void 0),__decorate([e.serializedField],r.prototype,"_activeSelf",void 0),__decorate([e.editor.property(4)],r.prototype,"activeSelf",null),__decorate([e.serializedField,e.deserializedIgnore],r.prototype,"components",null),r}(e.BaseObject);e.GameObject=t,__reflect(t.prototype,"paper.GameObject")}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.renderTarget=new e.GlRenderTarget("DirectionalLight",1024,1024,!0),r}return __extends(r,t),r.prototype.update=function(e,r){e.near=this.shadowCameraNear,e.far=this.shadowCameraFar,e.size=this.shadowCameraSize,e.fov=.25*Math.PI,e.opvalue=0,t.prototype.update.call(this,e,r)},r}(e.BaseLight);e.DirectionalLight=t,__reflect(t.prototype,"egret3d.DirectionalLight")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=[new e.Vector3(-1,0,0),new e.Vector3(1,0,0),new e.Vector3(0,1,0),new e.Vector3(0,-1,0),new e.Vector3(0,0,1),new e.Vector3(0,0,-1)],r=[new e.Vector3(0,-1,0),new e.Vector3(0,-1,0),new e.Vector3(0,0,1),new e.Vector3(0,0,-1),new e.Vector3(0,-1,0),new e.Vector3(0,-1,0)],n=function(n){function i(){var t=null!==n&&n.apply(this,arguments)||this;return t.decay=2,t.distance=0,t.renderTarget=new e.GlRenderTarget("PointLight",1024,1024,!0),t}return __extends(i,n),i.prototype.update=function(i,a){var o=this.gameObject.transform.getPosition();e.helpVector3A.set(o.x+t[a].x,o.y+t[a].y,o.z+t[a].z),i.near=this.shadowCameraNear,i.far=this.shadowCameraFar,i.size=this.shadowCameraSize,i.fov=.5*Math.PI,i.opvalue=1,i.gameObject.transform.setPosition(o),i.gameObject.transform.setRotation(this.gameObject.transform.getRotation()),i.gameObject.transform.lookAt(e.helpVector3A,r[a]),n.prototype.update.call(this,i,a)},__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],i.prototype,"decay",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],i.prototype,"distance",void 0),i}(e.BaseLight);e.PointLight=n,__reflect(n.prototype,"egret3d.PointLight")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.decay=2,t.distance=0,t.angle=Math.PI/3,t.penumbra=0,t}return __extends(t,e),t.prototype.update=function(t,r){t.near=this.shadowCameraNear,t.far=this.shadowCameraFar,t.size=this.shadowCameraSize,t.fov=this.angle,t.opvalue=1,t.gameObject.transform.getWorldMatrix().copy(this.gameObject.transform.getWorldMatrix()),e.prototype.update.call(this,t,r)},__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],t.prototype,"decay",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:0})],t.prototype,"distance",void 0),__decorate([paper.serializedField,paper.editor.property(2)],t.prototype,"angle",void 0),__decorate([paper.serializedField,paper.editor.property(2,{minimum:.01})],t.prototype,"penumbra",void 0),t}(e.BaseLight);e.SpotLight=t,__reflect(t.prototype,"egret3d.SpotLight")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e.Mesh="mesh"}(t=e.MeshFilterEventType||(e.MeshFilterEventType={}));var r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._mesh=null,t}return __extends(t,e),t.prototype.uninitialize=function(){e.prototype.uninitialize.call(this),this._mesh,this._mesh=null},Object.defineProperty(t.prototype,"mesh",{get:function(){return this._mesh},set:function(e){this._mesh!==e&&(this._mesh,this._mesh=e,paper.EventPool.dispatchEvent("mesh",this))},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],t.prototype,"_mesh",void 0),__decorate([paper.editor.property(18)],t.prototype,"mesh",null),t}(paper.BaseComponent);e.MeshFilter=r,__reflect(r.prototype,"egret3d.MeshFilter")}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(e){e[e.NONE=0]="NONE",e[e.FOG=1]="FOG",e[e.FOG_EXP2=2]="FOG_EXP2"}(t=e.FogMode||(e.FogMode={}));var r=function(t){function r(r){var n=t.call(this)||this;return n.lightmapIntensity=1,n.name="",n.ambientColor=egret3d.Color.create(.2,.2,.25,1),n.lightmaps=[],n.fogMode=0,n.fogColor=egret3d.Color.create(.5,.5,.5,1),n.fogDensity=.01,n.fogNear=.001,n.fogFar=100,n.extras=2===e.Application.playerMode?{}:void 0,n._gameObjects=[],n.name=r,n}return __extends(r,t),r.createEmpty=function(t,n){void 0===t&&(t="NoName"),void 0===n&&(n=!0);var i=new r(t);return e.Application.sceneManager._addScene(i,n),i},r.create=function(t,r){void 0===r&&(r=!0);var n=e.Application.sceneManager.getScene(t);if(n)return console.warn("The scene with the same name already exists."),n;var i=e.Asset.find(t);if(i&&i instanceof e.RawScene){var a=i.createInstance();if(a)return r&&2!==e.Application.playerMode&&egret3d.combine(a.gameObjects),a}else console.warn("The scene don't exists.",t);return null},Object.defineProperty(r,"globalScene",{get:function(){return e.Application.sceneManager.globalScene},enumerable:!0,configurable:!0}),Object.defineProperty(r,"editorScene",{get:function(){return e.Application.sceneManager.editorScene},enumerable:!0,configurable:!0}),Object.defineProperty(r,"activeScene",{get:function(){return e.Application.sceneManager.activeScene},set:function(t){e.Application.sceneManager.activeScene=t},enumerable:!0,configurable:!0}),r.prototype._addGameObject=function(e){this._gameObjects.indexOf(e)>=0&&console.warn("Add game object error.",e.path),this._gameObjects.push(e)},r.prototype._removeGameObject=function(e){var t=this._gameObjects.indexOf(e);0>t&&console.warn("Remove game object error.",e.path),this._gameObjects.splice(t,1)},r.prototype.uninitialize=function(){this.lightmapIntensity=1,this.ambientColor.set(.2,.2,.25,1),this.lightmaps.length=0},r.prototype.destroy=function(){if(!e.Application.sceneManager._removeScene(this))return!1;for(var t=this._gameObjects.length;t--;){var r=this._gameObjects[t];r&&!r.transform.parent&&r.destroy()}return this._gameObjects.length=0,e.GameObject.globalGameObject.getOrAddComponent(e.DisposeCollecter).scenes.push(this),!0},r.prototype.find=function(e){var t=e.indexOf("/");if(t>0)for(var r=e.slice(0,t),n=0,i=this._gameObjects;n<i.length;n++){var a=i[n];if(a.name===r){var o=a.transform.find(e.slice(t+1));return o?o.gameObject:null}}else for(var s=0,c=this._gameObjects;s<c.length;s++){var a=c[s];if(a.name===e)return a}return null},r.prototype.findWithTag=function(e){for(var t=0,r=this._gameObjects;t<r.length;t++){var n=r[t];if(n.tag===e)return n}return null},r.prototype.findGameObjectsWithTag=function(e){for(var t=[],r=0,n=this._gameObjects;r<n.length;r++){var i=n[r];i.tag===e&&t.push(i)}return t},r.prototype.getRootGameObjects=function(){for(var e=[],t=0,r=this._gameObjects;t<r.length;t++){var n=r[t];n.transform.parent||e.push(n)}return e},Object.defineProperty(r.prototype,"gameObjectCount",{get:function(){return this._gameObjects.length},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"gameObjects",{get:function(){return this._gameObjects},enumerable:!0,configurable:!0}),__decorate([e.serializedField,e.editor.property(2,{minimum:0})],r.prototype,"lightmapIntensity",void 0),__decorate([e.serializedField],r.prototype,"name",void 0),__decorate([e.serializedField,e.editor.property(9)],r.prototype,"ambientColor",void 0),__decorate([e.serializedField],r.prototype,"lightmaps",void 0),__decorate([e.serializedField,e.editor.property(10,{listItems:e.editor.getItemsFromEnum(e.FogMode)})],r.prototype,"fogMode",void 0),__decorate([e.serializedField,e.editor.property(9)],r.prototype,"fogColor",void 0),__decorate([e.serializedField,e.editor.property(2,{minimum:0})],r.prototype,"fogDensity",void 0),__decorate([e.serializedField,e.editor.property(2,{minimum:.001,step:1})],r.prototype,"fogNear",void 0),__decorate([e.serializedField,e.editor.property(2,{minimum:.001,step:1})],r.prototype,"fogFar",void 0),__decorate([e.serializedField],r.prototype,"extras",void 0),__decorate([e.serializedField,e.deserializedIgnore],r.prototype,"gameObjects",null),r}(e.BaseObject);e.Scene=r,__reflect(r.prototype,"paper.Scene")}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.MeshFilter,listeners:[{type:"mesh",listener:function(e){r._updateDrawCalls(e.gameObject),e.gameObject.renderer&&(e.gameObject.renderer._aabbDirty=!0)}}]},{componentClass:e.MeshRenderer,listeners:[{type:"materials",listener:function(e){r._updateDrawCalls(e.gameObject)}}]}],r._drawCalls=paper.GameObject.globalGameObject.getOrAddComponent(e.DrawCalls),r}return __extends(r,t),r.prototype._updateDrawCalls=function(t){if(this._enabled&&this._groups[0].hasGameObject(t)){var r=t.getComponent(e.MeshFilter),n=t.renderer,i=n.materials;if(this._drawCalls.removeDrawCalls(n),r.mesh&&0!==i.length){r.mesh._createBuffer(),this._drawCalls.renderers.push(n);for(var a=0,o=0,s=r.mesh.glTFMesh.primitives;o<s.length;o++){var c=s[o],l={renderer:n,subMeshIndex:a++,mesh:r.mesh,material:i[c.material]||e.DefaultMaterials.MISSING,zdist:-1};this._drawCalls.drawCalls.push(l)}}}},r.prototype.onEnable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._updateDrawCalls(r)}},r.prototype.onAddGameObject=function(e){this._updateDrawCalls(e)},r.prototype.onRemoveGameObject=function(e){this._drawCalls.removeDrawCalls(e.renderer)},r.prototype.onDisable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._drawCalls.removeDrawCalls(r.renderer)}},r}(paper.BaseSystem);e.MeshRendererSystem=t,__reflect(t.prototype,"egret3d.MeshRendererSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=e.Vector3.create(),r=(e.Vector3.create(),e.Vector3.create()),n=e.Matrix4.create(),i=function(i){function a(){var e=null!==i&&i.apply(this,arguments)||this;return e.forceCPUSkin=!1,e.boneMatrices=null,e._bones=[],e._rootBone=null,e._inverseBindMatrices=null,e._retargetBoneNames=null,e._mesh=null,e._rawVertices=null,e}return __extends(a,i),a.prototype._update=function(){for(var i=this._bones,a=this._inverseBindMatrices,o=this.boneMatrices,s=0,c=i.length;c>s;++s){var l=16*s,p=i[s],u=p?p.getWorldMatrix():e.Matrix4.IDENTITY;n.fromArray(a,l).premultiply(u).toArray(o,l)}if(this.forceCPUSkin){var d=t,h=t,f=r,_=n,m=this._mesh.getIndices(),v=this._mesh.getVertices(),g=this._mesh.getAttributes("JOINTS_0"),y=this._mesh.getAttributes("WEIGHTS_0");this._rawVertices||(this._rawVertices=new Float32Array(v.length),this._rawVertices.set(v));for(var b=0,E=m;b<E.length;b++){var x=E[b],T=3*x,S=4*x;d.fromArray(this._rawVertices,T),h.set(0,0,0).add(f.applyMatrix(_.fromArray(o,16*g[S+0]),d).multiplyScalar(y[S+0])).add(f.applyMatrix(_.fromArray(o,16*g[S+1]),d).multiplyScalar(y[S+1])).add(f.applyMatrix(_.fromArray(o,16*g[S+2]),d).multiplyScalar(y[S+2])).add(f.applyMatrix(_.fromArray(o,16*g[S+3]),d).multiplyScalar(y[S+3])).toArray(v,T)}this._mesh.uploadVertexBuffer()}},a.prototype.initialize=function(t){if(i.prototype.initialize.call(this,t),t&&(this._bones.length=0,this._rootBone=null,this.boneMatrices=null,this._inverseBindMatrices=null,this._mesh)){var r=this._mesh.config,n=r.skins[0],a=this.gameObject.transform.parent.getAllChildren({});if(void 0!==n.skeleton){var o=r.nodes[n.skeleton];if(o.name in a){var s=a[o.name];this._rootBone=Array.isArray(s)?s[0]:s}}for(var c=0,l=n.joints;c<l.length;c++){var p=l[c],u=r.nodes[p];if(u.name in a){var s=a[u.name];this._bones.push(Array.isArray(s)?s[0]:s)}else this._bones.push(null)}this._inverseBindMatrices=this._mesh.createTypeArrayFromAccessor(this._mesh.getAccessor(n.inverseBindMatrices)),this.boneMatrices=new Float32Array(16*this._bones.length),this._bones.length>e.SkinnedMeshRendererSystem.maxBoneCount&&(this.forceCPUSkin=!0,console.warn(""))}},a.prototype.uninitialize=function(){i.prototype.uninitialize.call(this),this._mesh,this._bones.length=0,this._rootBone=null,this.boneMatrices=null,this._inverseBindMatrices=null,this._retargetBoneNames=null,this._mesh=null},a.prototype.recalculateAABB=function(){if(this._mesh){this._aabb.clear();for(var t=this._mesh.getVertices(),r=e.helpVector3A,n=0,i=t.length;i>n;n+=3)r.set(t[n],t[n+1],t[n+2]),this._aabb.add(r)}},a.prototype.raycast=function(t,r,i){if(!this._mesh)return!1;var a=!1,o=void 0,s=this.gameObject.transform.worldMatrix,c=e.MeshRenderer._helpRay.applyMatrix(n.inverse(s),t),l=this.aabb;return r&&(r===!0?a=!0:(a=i||!1,o=r)),a?l.raycast(c)&&this._mesh.raycast(t,o,this.forceCPUSkin?null:this.boneMatrices):l.raycast(c,o)?(o&&(o.position.applyMatrix(s),o.distance=t.origin.getDistance(o.position)),!0):!1},Object.defineProperty(a.prototype,"bones",{get:function(){return this._bones},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"rootBone",{get:function(){return this._rootBone},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"mesh",{get:function(){return this._mesh},set:function(e){return!e||e.config.scenes||e.config.nodes||e.config.skins?void(this._mesh!==e&&(this._mesh,this._mesh=e,paper.EventPool.dispatchEvent("mesh",this))):void console.warn("Invalid skinned mesh.",e.name)},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],a.prototype,"_mesh",void 0),a}(e.MeshRenderer);e.SkinnedMeshRenderer=i,__reflect(i.prototype,"egret3d.SkinnedMeshRenderer")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.SkinnedMeshRenderer,listeners:[{type:"mesh",listener:function(e){r._updateDrawCalls(e.gameObject),e.gameObject.renderer&&(e.gameObject.renderer._aabbDirty=!0)}},{type:"materials",listener:function(e){r._updateDrawCalls(e.gameObject)}}]}],r._drawCalls=paper.GameObject.globalGameObject.getOrAddComponent(e.DrawCalls),r}return __extends(r,t),r.prototype._updateDrawCalls=function(t){if(this._enabled&&this._groups[0].hasGameObject(t)){var n=t.renderer;if(this._drawCalls.removeDrawCalls(n),n.mesh&&0!==n.materials.length){n.mesh._createBuffer(),this._drawCalls.renderers.push(n);for(var i=0,a=0,o=n.mesh.glTFMesh.primitives;a<o.length;a++){var s=o[a],c=n.materials[s.material],l={renderer:n,matrix:e.Matrix4.IDENTITY,subMeshIndex:i++,mesh:n.mesh,material:c||e.DefaultMaterials.MISSING,zdist:-1};n.forceCPUSkin||c.addDefine("USE_SKINNING").addDefine("MAX_BONES "+Math.min(r.maxBoneCount,n.bones.length)),this._drawCalls.drawCalls.push(l)}}}},r.prototype.onEnable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._updateDrawCalls(r)}},r.prototype.onAddGameObject=function(e){var t=e.renderer;t.mesh&&!t.boneMatrices&&t.initialize(!0),this._updateDrawCalls(e)},r.prototype.onRemoveGameObject=function(e){this._drawCalls.removeDrawCalls(e.renderer)},r.prototype.onUpdate=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];r.renderer._update()}},r.prototype.onDisable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._drawCalls.removeDrawCalls(r.renderer)}},r.maxBoneCount=36,r}(paper.BaseSystem);e.SkinnedMeshRendererSystem=t,__reflect(t.prototype,"egret3d.SkinnedMeshRendererSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=e.call(this)||this;return t.dirty=0,t.layer=0,t.leftWeight=0,t.layerWeight=0,t.blendWeight=0,t}return __extends(t,e),t.create=function(){if(this._instances.length>0){var e=this._instances.pop();return e._released=!1,e}return new t},t.prototype.clear=function(){this.dirty=0,this.layer=0,this.leftWeight=0,this.layerWeight=0,this.blendWeight=0},t.prototype.update=function(e){var t=e.layer,r=e._globalWeight;if(this.dirty>0){if(this.leftWeight>0){if(e.additive&&this.layer!==t){if(this.layerWeight>=this.leftWeight)return this.leftWeight=0,!1;this.layer=t,this.leftWeight-=this.layerWeight,this.layerWeight=r*this.leftWeight}return r*=this.leftWeight,this.dirty++,this.blendWeight=r,!0}return!1}this.dirty++,this.layer=t,this.leftWeight=1,this.layerWeight=r,this.blendWeight=r},t._instances=[],t}(paper.BaseRelease);__reflect(t.prototype,"BlendLayer");var r=function(e){function t(){var t=e.call(this)||this;return t.update=null,t}return __extends(t,e),t.create=function(){if(this._instances.length>0){var e=this._instances.pop();return e._released=!1,e}return new t},t._instances=[],t}(paper.BaseRelease);__reflect(r.prototype,"AnimationChannel");var n=[],i=function(){function e(){this.additive=!1,this.layer=0,this.weight=1,this.fadeTotalTime=1,this.parent=null,this._fadeState=-1,this._subFadeState=-1,this._globalWeight=0,this._fadeProgress=0,this._fadeTime=0}return e.prototype._onFadeStateChange=function(){},e.prototype._update=function(e){if(0!==this._fadeState||0!==this._subFadeState){var t=this._fadeState>0;this._subFadeState<0&&(this._subFadeState=0,this._onFadeStateChange()),0>e&&(e=-e),this._fadeTime+=e,this._fadeTime>=this.fadeTotalTime?(this._subFadeState=1,this._fadeProgress=t?0:1):this._fadeTime>0?this._fadeProgress=t?1-this._fadeTime/this.fadeTotalTime:this._fadeTime/this.fadeTotalTime:this._fadeProgress=t?1:0,this._subFadeState>0&&(t||(this._fadeState=0,this._onFadeStateChange()))}this._globalWeight=this.weight*this._fadeProgress,this.parent&&(this._globalWeight*=this.parent._globalWeight)},e.prototype.fadeOut=function(e){if((0>e||e!==e)&&(e=0),this._fadeState>0){if(e>this.fadeTotalTime-this._fadeTime)return}else this._fadeState=1,this._subFadeState=-1,(0>=e||this._fadeProgress<=0)&&(this._fadeProgress=1e-6);this.fadeTotalTime=this._fadeProgress>1e-6?e/this._fadeProgress:0,this._fadeTime=this.fadeTotalTime*(1-this._fadeProgress)},e}();e.BlendNode=i,__reflect(i.prototype,"egret3d.BlendNode");var a=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._blendNodes=[],t}return __extends(t,e),t}(i);e.BlendTree=a,__reflect(a.prototype,"egret3d.BlendTree");var o=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.layer=0,t.playTimes=0,t.currentPlayTimes=0,t.timeScale=1,t.animationAsset=null,t.animation=null,t.animationClip=null,t._isPlaying=!0,t._playState=-1,t._time=0,t._currentTime=0,t._channels=[],t._animationComponent=null,t}return __extends(t,e),t.prototype._onUpdateTranslation=function(e,t){var r=!1,n=0,i=e.inputBuffer,a=e.outputBuffer;if(t._currentTime<=i[0]);else if(t._currentTime>=i[i.length-1])n=i.length-1;else{r="STEP"!==e.glTFSampler.interpolation;for(var o=0,s=i.length;s>o&&!(t._currentTime<i[o]);++o)n=o}var c=Array.isArray(e.components),l=3*n,p=a[l++],u=a[l++],d=a[l++];if(r){var h=(t._currentTime-i[n])/(i[n+1]-i[n]);p+=(a[l++]-p)*h,u+=(a[l++]-u)*h,d+=(a[l++]-d)*h}if(c)for(var f=0,_=e.components;f<_.length;f++){var m=_[f];m.setLocalPosition(p,u,d)}else e.components.setLocalPosition(p,u,d)},t.prototype._onUpdateRotation=function(e,t){var r=!1,n=0,i=e.inputBuffer,a=e.outputBuffer;if(t._currentTime<=i[0]);else if(t._currentTime>=i[i.length-1])n=i.length-1;else{r="STEP"!==e.glTFSampler.interpolation;for(var o=0,s=i.length;s>o&&!(t._currentTime<i[o]);++o)n=o}var c=Array.isArray(e.components),l=4*n,p=a[l++],u=a[l++],d=a[l++],h=a[l++];if(r){var f=(t._currentTime-i[n])/(i[n+1]-i[n]);p+=(a[l++]-p)*f,u+=(a[l++]-u)*f,d+=(a[l++]-d)*f,h+=(a[l++]-h)*f}if(c)for(var _=0,m=e.components;_<m.length;_++){var v=m[_];v.setLocalRotation(p,u,d,h)}else e.components.setLocalRotation(p,u,d,h)},t.prototype._onUpdateScale=function(e,t){var r=!1,n=0,i=e.inputBuffer,a=e.outputBuffer;if(t._currentTime<=i[0]);else if(t._currentTime>=i[i.length-1])n=i.length-1;else{r="STEP"!==e.glTFSampler.interpolation;for(var o=0,s=i.length;s>o&&!(t._currentTime<i[o]);++o)n=o}var c=Array.isArray(e.components),l=3*n,p=a[l++],u=a[l++],d=a[l++];if(r){var h=(t._currentTime-i[n])/(i[n+1]-i[n]);p+=(a[l++]-p)*h,u+=(a[l++]-u)*h,d+=(a[l++]-d)*h}if(c)for(var f=0,_=e.components;f<_.length;f++){var m=_[f];m.setLocalScale(p,u,d)}else e.components.setLocalScale(p,u,d)},t.prototype._onUpdateActive=function(e,t){var r=0,n=e.inputBuffer,i=e.outputBuffer;if(t._currentTime<=n[0]);else if(t._currentTime>=n[n.length-1])r=n.length-1;else for(var a=0,o=n.length;o>a&&!(t._currentTime<n[a]);++a)r=a;var s=Array.isArray(e.components),c=0!==i[r];if(s)for(var l=0,p=e.components;l<p.length;l++){var u=p[l];u.gameObject.activeSelf=c}else e.components.gameObject.activeSelf=c},t.prototype.initialize=function(e,t,i){var a=t.config;if(this.animationAsset=t,this.animationClip=i,this.animation=a.animations[0],this._fadeTime=0,this._time=0,this._animationComponent=e,this.animation.channels){var o=this._animationComponent.gameObject,s=o.transform.getAllChildren({});s.__root__=o.transform;for(var c=0,l=this.animation.channels;c<l.length;c++){var p=l[c],u=this.animationAsset.getNode(p.target.node||0);if(u.name in s){var d=s[u.name],h=n.length>0?n.pop():r.create(),f=p.target.path;switch(h.glTFChannel=p,h.glTFSampler=this.animation.samplers[p.sampler],h.components=d,h.inputBuffer=this.animationAsset.createTypeArrayFromAccessor(this.animationAsset.getAccessor(h.glTFSampler.input)),h.outputBuffer=this.animationAsset.createTypeArrayFromAccessor(this.animationAsset.getAccessor(h.glTFSampler.output)),f){case"translation":h.blendLayer=this._animationComponent._getBlendlayer(f,u.name),h.update=this._onUpdateTranslation;break;case"rotation":h.blendLayer=this._animationComponent._getBlendlayer(f,u.name),h.update=this._onUpdateRotation;break;case"scale":h.blendLayer=this._animationComponent._getBlendlayer(f,u.name),h.update=this._onUpdateScale;break;case"weights":break;case"custom":switch(h.glTFChannel.extensions.paper.type){case"paper.GameObject":switch(h.glTFChannel.extensions.paper.property){case"activeSelf":h.update=this._onUpdateActive}}break;default:console.warn("Unknown animation channel.",h.glTFChannel.target.path)}this._channels.push(h)}}}},t.prototype._update=function(t){e.prototype._update.call(this,t),this._isPlaying&&(t*=this.timeScale*this._animationComponent.timeScale,this._time+=t);var r=this._playState,n=this.animationClip.duration,i=this.playTimes*n;if(this.playTimes>0&&(this._time>=i||this._time<=-i)?(this._playState<=0&&this._isPlaying&&(this._playState=1),this.currentPlayTimes=this.playTimes,this._time>=i?this._currentTime=n:this._currentTime=0):(0!==this._playState&&this._isPlaying&&(this._playState=0),this._time<0?(this._time=-this._time,this.currentPlayTimes=Math.floor(this._time/n),this._currentTime=n-this._time%n):(this.currentPlayTimes=Math.floor(this._time/n),this._currentTime=this._time%n)),this._currentTime+=this.animationClip.position,0!==this.weight)for(var a=0,o=this._channels;a<o.length;a++){var s=o[a];s.update&&s.update(s,this)}if(r!==this._playState&&1===this._playState){this._animationComponent._dispatchEvent("complete",this);var c=this._animationComponent._animationNames;if(c.length>0){var l=c.shift();this._animationComponent.play(l)}}},t.prototype.play=function(){this._isPlaying=!0},t.prototype.stop=function(){this._isPlaying=!1},t.prototype.fateOut=function(){this._fadeState=1,this._subFadeState=-1},Object.defineProperty(t.prototype,"isPlaying",{get:function(){return this._isPlaying&&1!==this._playState},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isCompleted",{get:function(){return 1!==this._playState},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"totalTime",{get:function(){return this.animationClip.duration},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentTime",{get:function(){return this._currentTime},enumerable:!0,configurable:!0}),t}(i);e.AnimationState=o,__reflect(o.prototype,"egret3d.AnimationState");var s=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t.autoPlay=!1,t.timeScale=1,t._animations=[],t._blendNodes=[],t._animationNames=[],t._blendLayers={},t._lastAnimationState=null,t}return __extends(r,e),r.prototype._dispatchEvent=function(e,t,r){for(var n=0,i=this.gameObject.getComponents(paper.Behaviour,!0);n<i.length;n++){var a=i[n];a.onAnimationEvent&&a.onAnimationEvent(e,t,r)}},r.prototype._getBlendlayer=function(e,r){e in this._blendLayers||(this._blendLayers[e]={});var n=this._blendLayers[e];return r in n||(n[r]=t.create()),n[r]},r.prototype._update=function(e){var t=this._blendNodes,r=t.length;if(1===r){var n=t[0];n._fadeState>0&&n._subFadeState>0?(t.length=0,this._lastAnimationState===n&&(this._lastAnimationState=null)):n._update(e)}else if(r>1)for(var i=0,a=0;r>i;++i){var n=t[i];if(n._fadeState>0&&n._subFadeState>0?(a++,this._lastAnimationState===n&&(this._lastAnimationState=null)):(a>0&&(t[i-a]=n),n._update(e)),i===r-1&&a>0&&(t.length-=a,null===this._lastAnimationState&&t.length>0)){var s=t[t.length-1];s instanceof o&&(this._lastAnimationState=s)}}},r.prototype.uninitialize=function(){e.prototype.uninitialize.call(this)},r.prototype.fadeIn=function(e,t,r,n,i){void 0===e&&(e=null),void 0===r&&(r=-1),void 0===n&&(n=0),void 0===i&&(i=!1);for(var a=null,s=null,c=0,l=this._animations;c<l.length;c++){var p=l[c];if(a=p,!e){s=p.getAnimationClip("");break}if(s=p.getAnimationClip(e),null!==s)break}if(!a||!s)return null;for(var u=0,d=this._blendNodes;u<d.length;u++){var h=d[u];h.parent||h.layer!==n||h.fadeOut(t)}var f=new o;return f.initialize(this,a,s),f.additive=i,f.fadeTotalTime=t,f.playTimes=0>r?s.playTimes||0:r,this._blendNodes.push(f),this._lastAnimationState=f,f},r.prototype.play=function(e,t){if(void 0===e&&(e=null),void 0===t&&(t=-1),this._animationNames.length=0,Array.isArray(e)){if(e.length>0){for(var r=0,n=e;r<n.length;r++){var i=n[r];this._animationNames.push(i)}return this.fadeIn(this._animationNames.shift(),0,t)}return this.fadeIn(null,0,t)}return this.fadeIn(e,0,t)},r.prototype.stop=function(){for(var e=0,t=this._blendNodes;e<t.length;e++){var r=t[e];!r.parent&&r instanceof o&&r.stop()}},Object.defineProperty(r.prototype,"lastAnimationnName",{get:function(){return this._lastAnimationState?this._lastAnimationState.animationClip.name:""},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"animations",{get:function(){return this._animations},set:function(e){for(var t=0,r=e.length;r>t;t++)this._animations[t]=e[t]},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"lastAnimationState",{get:function(){return this._lastAnimationState},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"autoPlay",void 0),__decorate([paper.editor.property(2)],r.prototype,"timeScale",void 0),__decorate([paper.serializedField],r.prototype,"_animations",void 0),r=__decorate([paper.allowMultiple],r)}(paper.BaseComponent);e.Animation=s,__reflect(s.prototype,"egret3d.Animation")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Animation}],r}return __extends(r,t),r.prototype.onAddComponent=function(e){!e.autoPlay||e.lastAnimationState&&e.lastAnimationState.isPlaying||e.play()},r.prototype.onUpdate=function(t){for(var r=0,n=this._groups[0].gameObjects;r<n.length;r++)for(var i=n[r],a=0,o=i.getComponents(e.Animation);a<o.length;a++){var s=o[a];s._update(t)}},r}(paper.BaseSystem);e.AnimationSystem=t,__reflect(t.prototype,"egret3d.AnimationSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){function r(t,r){var n=[],i={};if(4===t._renderMode){for(var a=t.mesh,o=a.getIndices(),s=o.length,c=0,l=_;c<l.length;c++){var p=l[c];n.push(p.key),i[p.key]=p.type}for(var u=a.vertexCount*r,d=s*r,h=new e.Mesh(u,d,n,i,35048),f=0,v=a.getAttributes("POSITION"),g=a.getAttributes("TEXCOORD_0"),y=a.getAttributes("COLOR_0"),b=h.getAttributes("POSITION"),E=h.getAttributes("COLOR_0"),x=h.getAttributes("TEXCOORD_0"),T=0;u>T;T++){var S=2*T,M=3*T,C=4*T,O=T%a.vertexCount;b[M]=v[3*O],b[M+1]=v[3*O+1],b[M+2]=v[3*O+2],g&&(x[S]=g[2*O],x[S+1]=g[2*O+1]),y?(E[C]=y[4*O],E[C+1]=y[4*O+1],E[C+2]=y[4*O+2],E[C+3]=y[4*O+3]):(E[C]=1,E[C+1]=1,E[C+2]=1,E[C+3]=1)}for(var A=h.getIndices(),T=0;r>T;T++)for(var R=T*a.vertexCount,P=0;s>P;P++)A[f++]=o[P]+R;return h}for(var o=[0,2,1,0,3,2],s=o.length,L=0,I=m;L<I.length;L++){var p=I[L];n.push(p.key),i[p.key]=p.type}for(var w=4,u=w*r,d=s*r,h=new e.Mesh(u,d,n,i,35048),D=h.getAttributes("_CORNER"),x=h.getAttributes("TEXCOORD_0"),T=0;u>T;T++){var O=T%w,S=2*T;switch(O){case 0:D[S]=-.5,D[S+1]=-.5,x[S]=0,x[S+1]=1;break;case 1:D[S]=.5,D[S+1]=-.5,x[S]=1,x[S+1]=1;break;case 2:D[S]=.5,D[S+1]=.5,x[S]=1,x[S+1]=0;break;case 3:D[S]=-.5,D[S+1]=.5,x[S]=0,x[S+1]=0}}for(var A=h.getIndices(),T=0;r>T;T++){var R=6*T,z=T*w,N=z+2;A[R+0]=z,A[R+1]=N,A[R+2]=z+1,A[R+3]=z,A[R+4]=z+3,A[R+5]=N}return h}function n(e,t,r){if(!r.enable)return e.x=e.y=e.z=0,t.x=t.y=0,void(t.z=1);switch(r.shapeType){case 4:case 7:p(r,e,t);break;case 8:case 9:u(r,e,t);break;case 5:d(r,e,t);break;case 0:case 1:h(r,e,t);
break;case 10:f(r,e,t);break;default:e.x=e.y=e.z=0,t.x=t.y=0,t.z=1}}function i(e){var t=Math.random()*Math.PI*2;e.x=Math.cos(t),e.y=Math.sin(t)}function a(e){i(e);var t=Math.pow(Math.random(),.5);e.x=e.x*t,e.y=e.y*t}function o(e,t){var r=Math.random()*e;t.x=Math.cos(r),t.y=Math.sin(r)}function s(e,t){o(e,t);var r=Math.pow(Math.random(),.5);t.x=t.x*r,t.y=t.y*r}function c(e){var t=2*Math.random()-1,r=Math.random()*Math.PI*2,n=Math.sqrt(1-t*t);e.x=Math.cos(r)*n,e.y=Math.sin(r)*n,e.z=t}function l(e){c(e);var t=Math.pow(Math.random(),1/3);e.x=e.x*t,e.y=e.y*t,e.z=e.z*t}function p(t,r,n){var o=new e.Vector3;4===t.shapeType?a(o):i(o),r.x=o.x*t.radius,r.y=o.y*t.radius,r.z=o.z*t.radius;var s=t.angle*Math.PI/180,c=Math.sin(s),l=Math.cos(s);t.randomDirection?(a(n),n.x=n.x*c,n.y=n.y*c,n.z=l):(n.x=o.x*c,n.y=o.y*c,n.z=l)}function u(t,r,n){var o=new e.Vector3;8===t.shapeType?a(o):i(o),r.x=o.x*t.radius,r.y=o.y*t.radius,r.z=0;var s=t.angle*Math.PI/180,l=Math.sin(s),p=Math.cos(s);n.x=o.x*l,n.y=o.y*l,n.z=p,e.Vector3.normalize(n);var u=Math.random()*t.length;n.x=n.x*u,n.y=n.y*u,n.z=n.z*u,r.x+=n.x,r.y+=n.y,r.z+=n.z,t.randomDirection&&c(n)}function d(e,t,r){t.x=e.box.x*(Math.random()-.5),t.y=e.box.y*(Math.random()-.5),t.z=e.box.z*(Math.random()-.5),e.randomDirection?(r.x=0,r.y=0,r.z=1):(r.x=0,r.y=0,r.z=1)}function h(t,r,n){new e.Vector3;t.spherizeDirection||(0===t.shapeType?l(r):c(r)),r.x=r.x*t.radius,r.y=r.y*t.radius,r.z=r.z*t.radius,t.randomDirection||t.spherizeDirection?c(n):(n.x=r.x,n.y=r.y,n.z=r.z)}function f(t,r,n){var i=new e.Vector3;10===t.shapeType?s(t.radiusSpread,i):o(t.radiusSpread,i),r.x=-i.x*t.radius,r.y=i.y*t.radius,r.z=0,t.randomDirection?c(n):(n.x=r.x,n.y=r.y,n.z=r.z)}var _=[{key:"POSITION",type:"VEC3"},{key:"COLOR_0",type:"VEC4"},{key:"TEXCOORD_0",type:"VEC2"},{key:"_START_POSITION",type:"VEC3"},{key:"_START_VELOCITY",type:"VEC3"},{key:"_START_COLOR",type:"VEC4"},{key:"_START_SIZE",type:"VEC3"},{key:"_START_ROTATION",type:"VEC3"},{key:"_TIME",type:"VEC2"},{key:"_RANDOM0",type:"VEC4"},{key:"_RANDOM1",type:"VEC4"},{key:"_WORLD_POSITION",type:"VEC3"},{key:"_WORLD_ROTATION",type:"VEC4"}],m=[{key:"_CORNER",type:"VEC2"},{key:"TEXCOORD_0",type:"VEC2"},{key:"_START_POSITION",type:"VEC3"},{key:"_START_VELOCITY",type:"VEC3"},{key:"_START_COLOR",type:"VEC4"},{key:"_START_SIZE",type:"VEC3"},{key:"_START_ROTATION",type:"VEC3"},{key:"_TIME",type:"VEC2"},{key:"_RANDOM0",type:"VEC4"},{key:"_RANDOM1",type:"VEC4"},{key:"_WORLD_POSITION",type:"VEC3"},{key:"_WORLD_ROTATION",type:"VEC4"}];t.createBatchMesh=r,t.generatePositionAndDirection=n}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r,n=e.Color.create(),i=e.Color.create();!function(e){e[e.Constant=0]="Constant",e[e.Curve=1]="Curve",e[e.TwoCurves=2]="TwoCurves",e[e.TwoConstants=3]="TwoConstants"}(r=t.CurveMode||(t.CurveMode={}));var a;!function(e){e[e.Color=0]="Color",e[e.Gradient=1]="Gradient",e[e.TwoColors=2]="TwoColors",e[e.TwoGradients=3]="TwoGradients",e[e.RandomColor=4]="RandomColor"}(a=t.ColorGradientMode||(t.ColorGradientMode={}));var o;!function(e){e[e.Local=0]="Local",e[e.World=1]="World",e[e.Custom=2]="Custom"}(o=t.SimulationSpace||(t.SimulationSpace={}));var s;!function(e){e[e.Hierarchy=0]="Hierarchy",e[e.Local=1]="Local",e[e.Shape=2]="Shape"}(s=t.ScalingMode||(t.ScalingMode={}));var c;!function(e){e[e.None=-1]="None",e[e.Sphere=0]="Sphere",e[e.SphereShell=1]="SphereShell",e[e.Hemisphere=2]="Hemisphere",e[e.HemisphereShell=3]="HemisphereShell",e[e.Cone=4]="Cone",e[e.Box=5]="Box",e[e.Mesh=6]="Mesh",e[e.ConeShell=7]="ConeShell",e[e.ConeVolume=8]="ConeVolume",e[e.ConeVolumeShell=9]="ConeVolumeShell",e[e.Circle=10]="Circle",e[e.CircleEdge=11]="CircleEdge",e[e.SingleSidedEdge=12]="SingleSidedEdge",e[e.MeshRenderer=13]="MeshRenderer",e[e.SkinnedMeshRenderer=14]="SkinnedMeshRenderer",e[e.BoxShell=15]="BoxShell",e[e.BoxEdge=16]="BoxEdge"}(c=t.ShapeType||(t.ShapeType={}));var l;!function(e){e[e.Random=0]="Random",e[e.Loop=1]="Loop",e[e.PingPong=2]="PingPong",e[e.BurstSpread=3]="BurstSpread"}(l=t.ShapeMultiModeValue||(t.ShapeMultiModeValue={}));var p;!function(e){e[e.WholeSheet=0]="WholeSheet",e[e.SingleRow=1]="SingleRow"}(p=t.AnimationType||(t.AnimationType={}));var u;!function(e){e[e.UV0=1]="UV0",e[e.UV1=2]="UV1",e[e.UV2=4]="UV2",e[e.UV3=8]="UV3"}(u=t.UVChannelFlags||(t.UVChannelFlags={}));var d;!function(e){e[e.Blend=0]="Blend",e[e.Fixed=1]="Fixed"}(d=t.GradientMode||(t.GradientMode={}));var h=function(){function e(){}return e.prototype.serialize=function(){return[this.time,this.value]},e.prototype.deserialize=function(e){return this.time=e[0],this.value=e[1],this},e.prototype.clone=function(e){this.time=e.time,this.value=e.value},e}();t.Keyframe=h,__reflect(h.prototype,"egret3d.particle.Keyframe",["paper.ISerializable"]);var f=function(){function t(){this._keys=new Array,this._floatValues=new Float32Array(8)}return t.prototype.serialize=function(){return this._keys.map(function(e){return e.serialize()})},t.prototype.deserialize=function(e){this._keys.length=0;for(var t=0,r=e.length;r>t;t++){var n=new h;n.deserialize(e[t]),this._keys.push(n)}return this},t.prototype.evaluate=function(t){void 0===t&&(t=0);for(var r=0,n=this._keys.length;n>r;r++){var i=this._keys[r];if(!(i.time<t)){var a=0===r?0:r-1,o=this._keys[a],s=(t-o.time)/(i.time-o.time);return e.numberLerp(o.value,i.value,s)}}throw"AnimationCurve: invalid t or keys.length is 0"},Object.defineProperty(t.prototype,"floatValues",{get:function(){for(var e=this._floatValues,t=0,r=0,n=this._keys;r<n.length;r++){var i=n[r];e[t++]=i.time,e[t++]=i.value}return e},enumerable:!0,configurable:!0}),t.prototype.clone=function(e){this._keys.length=0;for(var t=e._keys,r=0,n=t.length;n>r;r++){var i=new h;i.time=t[r].time,i.value=t[r].value,this._keys.push(i)}},t}();t.AnimationCurve=f,__reflect(f.prototype,"egret3d.particle.AnimationCurve",["paper.ISerializable"]);var _=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.color=e.Color.create(),r}return __extends(r,t),r.prototype.deserialize=function(e){return this.color.deserialize(e.color),this.time=e.time,this},__decorate([paper.serializedField],r.prototype,"time",void 0),__decorate([paper.serializedField],r.prototype,"color",void 0),r}(paper.BaseObject);t.GradientColorKey=_,__reflect(_.prototype,"egret3d.particle.GradientColorKey");var m=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.deserialize=function(e){return this.alpha=e.alpha,this.time=e.time,this},__decorate([paper.serializedField],t.prototype,"alpha",void 0),__decorate([paper.serializedField],t.prototype,"time",void 0),t}(paper.BaseObject);t.GradientAlphaKey=m,__reflect(m.prototype,"egret3d.particle.GradientAlphaKey");var v=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.mode=0,e.alphaKeys=new Array,e.colorKeys=new Array,e._alphaValue=new Float32Array(8),e._colorValue=new Float32Array(16),e}return __extends(r,t),r.prototype.deserialize=function(e){this.colorKeys.length=0;for(var t=0,r=e.colorKeys.length;r>t;t++){var n=new _;n.deserialize(e.colorKeys[t]),this.colorKeys.push(n)}this.alphaKeys.length=0;for(var t=0,r=e.alphaKeys.length;r>t;t++){var i=new m;i.deserialize(e.alphaKeys[t]),this.alphaKeys.push(i)}return this},r.prototype.evaluate=function(t,r){void 0===t&&(t=0);for(var n=0,i=this.alphaKeys.length;i>n;n++){var a=this.alphaKeys[n];if(a.time>t){var o=0===n?0:n-1,s=this.alphaKeys[o],c=(t-s.time)/(a.time-s.time);r.a=e.numberLerp(s.alpha,a.alpha,c);break}}for(var n=0,i=this.colorKeys.length;i>n;n++){var l=this.colorKeys[n];if(l.time>t){var o=0===n?0:n-1,s=this.colorKeys[o],c=(t-s.time)/(l.time-s.time);r.r=e.numberLerp(s.color.r,l.color.r,c),r.g=e.numberLerp(s.color.g,l.color.g,c),r.b=e.numberLerp(s.color.b,l.color.b,c);break}}return r},Object.defineProperty(r.prototype,"alphaValues",{get:function(){for(var e=this._alphaValue,t=0,r=0,n=this.alphaKeys;r<n.length;r++){var i=n[r];e[t++]=i.time,e[t++]=i.alpha}return e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"colorValues",{get:function(){for(var e=this._colorValue,t=0,r=0,n=this.colorKeys;r<n.length;r++){var i=n[r];e[t++]=i.time,e[t++]=i.color.r,e[t++]=i.color.g,e[t++]=i.color.b}return e},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"mode",void 0),__decorate([paper.serializedField],r.prototype,"alphaKeys",void 0),__decorate([paper.serializedField],r.prototype,"colorKeys",void 0),r}(paper.BaseObject);t.Gradient=v,__reflect(v.prototype,"egret3d.particle.Gradient");var g=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mode=0,t.curve=new f,t.curveMin=new f,t.curveMax=new f,t}return __extends(t,e),t.prototype.deserialize=function(e){return this.mode=e.mode,this.constant=e.constant||0,this.constantMin=e.constantMin||0,this.constantMax=e.constantMax||0,e.curve&&this.curve.deserialize(e.curve),e.curveMin&&this.curveMin.deserialize(e.curveMin),e.curveMax&&this.curveMax.deserialize(e.curveMax),this},t.prototype.evaluate=function(e){if(void 0===e&&(e=0),0===this.mode)return this.constant;if(3===this.mode)return Math.random()*(this.constantMax-this.constantMin)+this.constantMin;if(1===this.mode)return this.curve.evaluate(e);var t=this.curveMin.evaluate(e),r=this.curveMax.evaluate(e);return Math.random()*(t-r)+t},t.prototype.clone=function(e){this.mode=e.mode,this.constant=e.constant,this.constantMin=e.constantMin,this.constantMax=e.constantMax,this.curve.clone(e.curve),this.curveMin.clone(e.curveMin),this.curveMax.clone(e.curveMax)},__decorate([paper.serializedField],t.prototype,"mode",void 0),__decorate([paper.serializedField],t.prototype,"constant",void 0),__decorate([paper.serializedField],t.prototype,"constantMin",void 0),__decorate([paper.serializedField],t.prototype,"constantMax",void 0),__decorate([paper.serializedField],t.prototype,"curve",void 0),__decorate([paper.serializedField],t.prototype,"curveMin",void 0),__decorate([paper.serializedField],t.prototype,"curveMax",void 0),t}(paper.BaseObject);t.MinMaxCurve=g,__reflect(g.prototype,"egret3d.particle.MinMaxCurve");var y=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.mode=1,r.color=e.Color.create(),r.colorMin=e.Color.create(),r.colorMax=e.Color.create(),r.gradient=new v,r.gradientMin=new v,r.gradientMax=new v,r}return __extends(r,t),r.prototype.deserialize=function(e){return this.mode=e.mode,e.color&&this.color.deserialize(e.color),e.colorMin&&this.colorMin.deserialize(e.colorMin),e.colorMax&&this.colorMax.deserialize(e.colorMax),e.gradient&&this.gradient.deserialize(e.gradient),e.gradientMin&&this.gradientMin.deserialize(e.gradientMin),e.gradientMax&&this.gradientMax.deserialize(e.gradientMax),this},r.prototype.evaluate=function(e,t){if(void 0===e&&(e=0),0===this.mode)t.r=this.color.r,t.g=this.color.g,t.b=this.color.b,t.a=this.color.a;else if(2===this.mode)t.r=Math.random()*(this.colorMax.r-this.colorMin.r)+this.colorMin.r,t.g=Math.random()*(this.colorMax.g-this.colorMin.g)+this.colorMin.g,t.b=Math.random()*(this.colorMax.b-this.colorMin.b)+this.colorMin.b,t.a=Math.random()*(this.colorMax.a-this.colorMin.a)+this.colorMin.a;else{if(1===this.mode)return this.gradient.evaluate(e,t);3===this.mode?(this.gradientMin.evaluate(e,n),this.gradientMax.evaluate(e,i),t.r=Math.random()*(n.r-i.r)+n.r,t.g=Math.random()*(n.g-i.g)+n.g,t.b=Math.random()*(n.b-i.b)+n.b,t.a=Math.random()*(n.a-i.a)+n.a):(t.r=Math.random(),t.g=Math.random(),t.b=Math.random(),t.a=Math.random())}return t},__decorate([paper.serializedField],r.prototype,"mode",void 0),__decorate([paper.serializedField],r.prototype,"color",void 0),__decorate([paper.serializedField],r.prototype,"colorMin",void 0),__decorate([paper.serializedField],r.prototype,"colorMax",void 0),__decorate([paper.serializedField],r.prototype,"gradient",void 0),__decorate([paper.serializedField],r.prototype,"gradientMin",void 0),__decorate([paper.serializedField],r.prototype,"gradientMax",void 0),r}(paper.BaseObject);t.MinMaxGradient=y,__reflect(y.prototype,"egret3d.particle.MinMaxGradient");var b=function(){function e(){}return e.prototype.serialize=function(){return[this.time,this.minCount,this.maxCount,this.cycleCount,this.repeatInterval]},e.prototype.deserialize=function(e){return this.time=e[0],this.minCount=e[1],this.maxCount=e[2],this.cycleCount=e[3],this.repeatInterval=e[4],this},e}();t.Burst=b,__reflect(b.prototype,"egret3d.particle.Burst",["paper.ISerializable"]);var E=function(e){function t(t){var r=e.call(this)||this;return r.enable=!1,r._comp=t,r}return __extends(t,e),t.prototype.initialize=function(){},t.prototype.deserialize=function(e){return this.enable=!0,this},__decorate([paper.serializedField],t.prototype,"enable",void 0),t}(paper.BaseObject);t.ParticleSystemModule=E,__reflect(E.prototype,"egret3d.particle.ParticleSystemModule");var x=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.duration=0,t.loop=!1,t.startDelay=new g,t.startLifetime=new g,t.startSpeed=new g,t.startSizeX=new g,t.startSizeY=new g,t.startSizeZ=new g,t._startRotation3D=!1,t.startRotationX=new g,t.startRotationY=new g,t.startRotationZ=new g,t.startColor=new y,t.gravityModifier=new g,t._simulationSpace=0,t._scaleMode=0,t.playOnAwake=!1,t._maxParticles=0,t}return __extends(t,e),t.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this.duration=t.duration,this.loop=t.loop||t.looping,this.startDelay.deserialize(t.startDelay),this.startLifetime.deserialize(t.startLifetime),this.startSpeed.deserialize(t.startSpeed),this.startSizeX.deserialize(t.startSizeX),this.startSizeY.deserialize(t.startSizeY),this.startSizeZ.deserialize(t.startSizeZ),this._startRotation3D=t._startRotation3D||t.startRotation3D||!1,this.startRotationX.deserialize(t.startRotationX),this.startRotationY.deserialize(t.startRotationY),this.startRotationZ.deserialize(t.startRotationZ),this.startColor.deserialize(t.startColor),this.gravityModifier.deserialize(t.gravityModifier),this._simulationSpace=t._simulationSpace||t.simulationSpace||0,this._scaleMode=t._scaleMode||t.scaleMode||0,this.playOnAwake=t.playOnAwake,this._maxParticles=t._maxParticles||t.maxParticles||0,this},Object.defineProperty(t.prototype,"startRotation3D",{get:function(){return this._startRotation3D},set:function(e){this._startRotation3D!==e&&(this._startRotation3D=e,paper.EventPool.dispatchEvent("rotation3DChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"simulationSpace",{get:function(){return this._simulationSpace},set:function(e){this._simulationSpace!==e&&(this._simulationSpace=e,paper.EventPool.dispatchEvent("simulationSpace",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"scaleMode",{get:function(){return this._scaleMode},set:function(e){this._scaleMode!==e&&(this._scaleMode=e,paper.EventPool.dispatchEvent("scaleMode",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxParticles",{get:function(){return this._maxParticles},set:function(e){this._maxParticles!==e&&(this._maxParticles=e,paper.EventPool.dispatchEvent("maxParticles",this._comp))},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],t.prototype,"duration",void 0),__decorate([paper.serializedField],t.prototype,"loop",void 0),__decorate([paper.serializedField],t.prototype,"startDelay",void 0),__decorate([paper.serializedField],t.prototype,"startLifetime",void 0),__decorate([paper.serializedField],t.prototype,"startSpeed",void 0),__decorate([paper.serializedField],t.prototype,"startSizeX",void 0),__decorate([paper.serializedField],t.prototype,"startSizeY",void 0),__decorate([paper.serializedField],t.prototype,"startSizeZ",void 0),__decorate([paper.serializedField],t.prototype,"_startRotation3D",void 0),__decorate([paper.serializedField],t.prototype,"startRotationX",void 0),__decorate([paper.serializedField],t.prototype,"startRotationY",void 0),__decorate([paper.serializedField],t.prototype,"startRotationZ",void 0),__decorate([paper.serializedField],t.prototype,"startColor",void 0),__decorate([paper.serializedField],t.prototype,"gravityModifier",void 0),__decorate([paper.serializedField],t.prototype,"_simulationSpace",void 0),__decorate([paper.serializedField],t.prototype,"_scaleMode",void 0),__decorate([paper.serializedField],t.prototype,"playOnAwake",void 0),__decorate([paper.serializedField],t.prototype,"_maxParticles",void 0),t}(E);t.MainModule=x,__reflect(x.prototype,"egret3d.particle.MainModule");var T=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.rateOverTime=new g,t.bursts=new Array,t}return __extends(t,e),t.prototype.deserialize=function(t){if(e.prototype.deserialize.call(this,t),this.rateOverTime.deserialize(t.rateOverTime),t.bursts){this.bursts.length=0;for(var r=0,n=t.bursts.length;n>r;r++){var i=new b;i.deserialize(t.bursts[r]),this.bursts.push(i)}}return this},__decorate([paper.serializedField],t.prototype,"rateOverTime",void 0),__decorate([paper.serializedField],t.prototype,"bursts",void 0),t}(E);t.EmissionModule=T,__reflect(T.prototype,"egret3d.particle.EmissionModule");var S=function(r){function n(){var t=null!==r&&r.apply(this,arguments)||this;return t.shapeType=0,t.radius=0,t.angle=0,t.length=0,t.arcSpeed=new g,t.arcMode=0,t.radiusMode=0,t.box=new e.Vector3,t.randomDirection=!1,t.spherizeDirection=!1,t}return __extends(n,r),n.prototype.deserialize=function(e){return r.prototype.deserialize.call(this,e),this.shapeType=e.shapeType,this.radius=e.radius,this.angle=e.angle,this.length=e.length,this.arcSpeed.deserialize(e.arcSpeed),this.arcMode=e.arcMode,this.radiusSpread=e.radiusSpread,this.radiusMode=e.radiusMode,this.box.deserialize(e.box),this.randomDirection=e.randomDirection,this.spherizeDirection=e.spherizeDirection,this},n.prototype.invalidUpdate=function(){paper.EventPool.dispatchEvent("shapeChanged",this._comp)},n.prototype.generatePositionAndDirection=function(e,r){t.generatePositionAndDirection(e,r,this)},__decorate([paper.serializedField],n.prototype,"shapeType",void 0),__decorate([paper.serializedField],n.prototype,"radius",void 0),__decorate([paper.serializedField],n.prototype,"angle",void 0),__decorate([paper.serializedField],n.prototype,"length",void 0),__decorate([paper.serializedField],n.prototype,"arcSpeed",void 0),__decorate([paper.serializedField],n.prototype,"arcMode",void 0),__decorate([paper.serializedField],n.prototype,"radiusSpread",void 0),__decorate([paper.serializedField],n.prototype,"radiusMode",void 0),__decorate([paper.serializedField],n.prototype,"box",void 0),__decorate([paper.serializedField],n.prototype,"randomDirection",void 0),__decorate([paper.serializedField],n.prototype,"spherizeDirection",void 0),n}(E);t.ShapeModule=S,__reflect(S.prototype,"egret3d.particle.ShapeModule");var M=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._mode=0,t._space=0,t._x=new g,t._y=new g,t._z=new g,t}return __extends(t,e),t.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._mode=t._mode||t.mode||0,this._space=t._space||t.space||0,this._x.deserialize(t._x||t.x),this._y.deserialize(t._y||t.y),this._z.deserialize(t._z||t.z),this},Object.defineProperty(t.prototype,"mode",{get:function(){return this._mode},set:function(e){this._mode!==e&&(this._mode=e,paper.EventPool.dispatchEvent("velocityChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"space",{get:function(){return this._space},set:function(e){this._space!==e&&(this._space=e,paper.EventPool.dispatchEvent("velocityChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(e){this._x!==e&&(this._x.clone(e),paper.EventPool.dispatchEvent("velocityChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(e){this._y!==e&&(this._y.clone(e),paper.EventPool.dispatchEvent("velocityChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this._z},set:function(e){this._z!==e&&(this._z.clone(e),paper.EventPool.dispatchEvent("velocityChanged",this._comp))},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],t.prototype,"_mode",void 0),__decorate([paper.serializedField],t.prototype,"_space",void 0),__decorate([paper.serializedField],t.prototype,"_x",void 0),__decorate([paper.serializedField],t.prototype,"_y",void 0),__decorate([paper.serializedField],t.prototype,"_z",void 0),t}(E);t.VelocityOverLifetimeModule=M,__reflect(M.prototype,"egret3d.particle.VelocityOverLifetimeModule");var C=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._color=new y,t}return __extends(t,e),t.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._color.deserialize(t._color||t.color),this},Object.defineProperty(t.prototype,"color",{get:function(){return this._color},set:function(e){this._color!==e&&(this._color=e,paper.EventPool.dispatchEvent("colorChanged",this._comp))},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],t.prototype,"_color",void 0),t}(E);t.ColorOverLifetimeModule=C,__reflect(C.prototype,"egret3d.particle.ColorOverLifetimeModule");var O=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._separateAxes=!1,t._size=new g,t._x=new g,t._y=new g,t._z=new g,t}return __extends(t,e),t.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._separateAxes=t._separateAxes||t.separateAxes||!1,this._size.deserialize(t._size||t.size),this._x.deserialize(t._x||t.x),this._y.deserialize(t._y||t.y),this._z.deserialize(t._z||t.z),this},Object.defineProperty(t.prototype,"separateAxes",{get:function(){return this._separateAxes},set:function(e){this._separateAxes!==e&&(this._separateAxes=e,paper.EventPool.dispatchEvent("sizeChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this._size},set:function(e){this._size!==e&&(this._size.clone(e),paper.EventPool.dispatchEvent("sizeChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(e){this._x!==e&&(this._x.clone(e),paper.EventPool.dispatchEvent("sizeChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(e){this._y!==e&&(this._y.clone(e),paper.EventPool.dispatchEvent("sizeChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this._z},set:function(e){this._z!==e&&(this._z.clone(e),paper.EventPool.dispatchEvent("sizeChanged",this._comp))},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],t.prototype,"_separateAxes",void 0),__decorate([paper.serializedField],t.prototype,"_size",void 0),__decorate([paper.serializedField],t.prototype,"_x",void 0),__decorate([paper.serializedField],t.prototype,"_y",void 0),__decorate([paper.serializedField],t.prototype,"_z",void 0),t}(E);t.SizeOverLifetimeModule=O,__reflect(O.prototype,"egret3d.particle.SizeOverLifetimeModule");var A=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._x=new g,t._y=new g,t._z=new g,t}return __extends(t,e),t.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._separateAxes=t._separateAxes||t.separateAxes||!1,this._x.deserialize(t._x||t.x),this._y.deserialize(t._y||t.y),this._z.deserialize(t._z||t.z),this},Object.defineProperty(t.prototype,"separateAxes",{get:function(){return this._separateAxes},set:function(e){this._separateAxes!==e&&(this._separateAxes=e,paper.EventPool.dispatchEvent("rotationChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(e){this._x!==e&&(this._x.clone(e),paper.EventPool.dispatchEvent("rotationChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(e){this._y!==e&&(this._y.clone(e),paper.EventPool.dispatchEvent("rotationChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this._z},set:function(e){this._z!==e&&(this._z.clone(e),paper.EventPool.dispatchEvent("rotationChanged",this._comp))},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],t.prototype,"_separateAxes",void 0),__decorate([paper.serializedField],t.prototype,"_x",void 0),__decorate([paper.serializedField],t.prototype,"_y",void 0),__decorate([paper.serializedField],t.prototype,"_z",void 0),t}(E);t.RotationOverLifetimeModule=A,__reflect(A.prototype,"egret3d.particle.RotationOverLifetimeModule");var R=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._animation=0,t._frameOverTime=new g,t._startFrame=new g,t._floatValues=new Float32Array(4),t}return __extends(t,e),t.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._numTilesX=t._numTilesX||t.numTilesX||0,this._numTilesY=t._numTilesY||t.numTilesY||0,this._animation=t._animation||t.animation||0,this._useRandomRow=t._useRandomRow||t.useRandomRow||!1,this._frameOverTime.deserialize(t._frameOverTime||t.frameOverTime),this._startFrame.deserialize(t._startFrame||t.startFrame),this._cycleCount=t._cycleCount||t.cycleCount||0,this._rowIndex=t._rowIndex||t.rowIndex||0,this},Object.defineProperty(t.prototype,"numTilesX",{get:function(){return this._numTilesX},set:function(e){this._numTilesX!==e&&(this._numTilesX=e,paper.EventPool.dispatchEvent("textureSheetChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"numTilesY",{get:function(){return this._numTilesY},set:function(e){this._numTilesY!==e&&(this._numTilesY=e,paper.EventPool.dispatchEvent("textureSheetChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"animation",{get:function(){return this._animation},set:function(e){this._animation!==e&&(this._animation=e,paper.EventPool.dispatchEvent("textureSheetChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"useRandomRow",{get:function(){return this._useRandomRow},set:function(e){this._useRandomRow!==e&&(this._useRandomRow=e,paper.EventPool.dispatchEvent("textureSheetChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"frameOverTime",{get:function(){return this._frameOverTime},set:function(e){this._frameOverTime!==e&&(this._frameOverTime.clone(e),paper.EventPool.dispatchEvent("textureSheetChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startFrame",{get:function(){return this._startFrame},set:function(e){this._startFrame!==e&&(this._startFrame.clone(e),paper.EventPool.dispatchEvent("textureSheetChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"cycleCount",{get:function(){return this._cycleCount},set:function(e){this._cycleCount!==e&&(this._cycleCount=e,paper.EventPool.dispatchEvent("textureSheetChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rowIndex",{get:function(){return this._rowIndex},set:function(e){this._rowIndex!==e&&(this._rowIndex=e,paper.EventPool.dispatchEvent("textureSheetChanged",this._comp))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"floatValues",{get:function(){var e=this._floatValues;if(this.enable){var t=1/this._numTilesX,r=1/this._numTilesY,n=Math.floor(this._startFrame.constant),i=0;switch(this._animation){case 1:i=this._useRandomRow?Math.floor(Math.random()*this._numTilesY):this._rowIndex;break;case 0:i=Math.floor(n/this._numTilesX)}var a=Math.floor(n%this._numTilesX);e[0]=t,e[1]=r,e[2]=a*t,e[3]=i*r}else e[0]=1,e[1]=1,e[2]=0,e[3]=0;return e},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],t.prototype,"_numTilesX",void 0),__decorate([paper.serializedField],t.prototype,"_numTilesY",void 0),__decorate([paper.serializedField],t.prototype,"_animation",void 0),__decorate([paper.serializedField],t.prototype,"_useRandomRow",void 0),__decorate([paper.serializedField],t.prototype,"_frameOverTime",void 0),__decorate([paper.serializedField],t.prototype,"_startFrame",void 0),__decorate([paper.serializedField],t.prototype,"_cycleCount",void 0),__decorate([paper.serializedField],t.prototype,"_rowIndex",void 0),t}(E);t.TextureSheetAnimationModule=R,__reflect(R.prototype,"egret3d.particle.TextureSheetAnimationModule")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r=new e.Vector3,n=new e.Vector3,i=new e.Vector3,a=e.Color.create(),o=new e.Vector3,s=new e.Vector3(0,-9.81,0),c=function(){function c(){this._dirty=!1,this._time=0,this._emittsionTime=0,this._frameRateTime=0,this._firstAliveCursor=0,this._lastFrameFirstCursor=0,this._lastAliveCursor=0,this._forceUpdate=!1,this._vertexStride=0,this._burstIndex=0,this._readEmitCount=0,this._finalGravity=new e.Vector3}return c.prototype._getBurstCount=function(e,t){for(var r=0,n=this._comp.emission.bursts,i=n.length;this._burstIndex<i;this._burstIndex++){var a=n[this._burstIndex];if(!(a.time>=e&&a.time<t))break;r+=a.maxCount}return r},c.prototype._isParticleExpired=function(e){var t=e*this._vertexStride*2;return this._time-this._startTimeBuffer[t+1]+1e-4>this._startTimeBuffer[t]},c.prototype._addParticles=function(e,t,c,l){for(var p=this._comp,u=p.main,d=p.velocityOverLifetime,h=p.colorOverLifetime,f=p.sizeOverLifetime,_=p.rotationOverLifetime,m=p.textureSheetAnimation,v=d.enable&&(3===d._mode||2===d._mode),g=h.enable&&3===h._color.mode,y=f.enable&&(3===f._size.mode||2===f._size.mode),b=_.enable&&(3===_._x.mode||2===_._x.mode),E=m.enable&&(3===m._startFrame.mode||2===m._startFrame.mode),x=g||y||b||E,T=this._worldPostionCache,S=this._worldRotationCache,M=1===u._simulationSpace,C=this._startPositionBuffer,O=this._startVelocityBuffer,A=this._startColorBuffer,R=this._startSizeBuffer,P=this._startRotationBuffer,L=this._startTimeBuffer,I=this._random0Buffer,w=this._random1Buffer,D=this._worldPostionBuffer,z=this._worldRoationBuffer,N=Math.min(l/u.duration,1),U=this._vertexStride,V=0,G=0,F=0,H=0,B=0,j=0,k=0,W=0,X=0,Y=0,q=0,Z=0,K=0,J=0,Q=0;V!==c;){for(p.shape.generatePositionAndDirection(r,n),u.startColor.evaluate(N,a),H=u.startLifetime.evaluate(N),B=u.startSpeed.evaluate(N),n.x*=B,n.y*=B,n.z*=B,i.x=u.startSizeX.evaluate(N),i.y=u.startSizeY.evaluate(N),i.z=u.startSizeZ.evaluate(N),o.x=u.startRotationX.evaluate(N),o.y=u.startRotationY.evaluate(N),o.z=u.startRotationZ.evaluate(N),j=v?Math.random():0,k=v?Math.random():0,W=v?Math.random():0,X=g?Math.random():0,Y=y?Math.random():0,q=b?Math.random():0,Z=E?Math.random():0,G=t*U,F=G+U;F>G;G++)K=2*G,J=3*G,Q=4*G,C[J]=r.x,C[J+1]=r.y,C[J+2]=r.z,O[J]=n.x,O[J+1]=n.y,O[J+2]=n.z,A[Q]=a.r,A[Q+1]=a.g,A[Q+2]=a.b,A[Q+3]=a.a,R[J]=i.x,R[J+1]=i.y,R[J+2]=i.z,P[J]=o.x,P[J+1]=o.y,P[J+2]=o.z,L[K]=H,L[K+1]=e,x&&(I[Q]=X,I[Q+1]=Y,I[Q+2]=q,I[Q+3]=Z),v&&(w[Q]=j,w[Q+1]=k,w[Q+2]=W,w[Q+3]=0),M&&(D[J]=T.x,D[J+1]=T.y,D[J+2]=T.z,z[Q]=S.x,z[Q+1]=S.y,z[Q+2]=S.z,z[Q+3]=S.w);t++,t>=u._maxParticles&&(t=0),V++}var $=u.gravityModifier.constant;this._finalGravity.x=s.x*$,this._finalGravity.y=s.y*$,this._finalGravity.z=s.z*$},c.prototype._tryEmit=function(){if(!this._isParticleExpired(this._firstAliveCursor))return!1;var e=this._comp.main._maxParticles,t=this._firstAliveCursor+1>=e?0:this._firstAliveCursor+1;return t===this._lastAliveCursor&&(this._forceUpdate=!0),this._firstAliveCursor=t,!0},c.prototype.clean=function(){this._time=0,this._dirty=!1,this._emittsionTime=0,this._frameRateTime=0,this._firstAliveCursor=0,this._lastFrameFirstCursor=0,this._lastAliveCursor=0,this._forceUpdate=!1,this._vertexStride=0,this._vertexAttributes=null,this._burstIndex=0,this._readEmitCount=0,this._startPositionBuffer=null,this._startVelocityBuffer=null,this._startColorBuffer=null,this._startSizeBuffer=null,this._startRotationBuffer=null,this._startTimeBuffer=null,this._random0Buffer=null,this._random1Buffer=null,this._worldPostionBuffer=null,this._worldRoationBuffer=null,this._worldPostionCache=null,this._worldRotationCache=null,this._comp=null,this._renderer=null
},c.prototype.resetTime=function(){this._burstIndex=0,this._emittsionTime=0,this._readEmitCount=0},c.prototype.init=function(e,r){this._comp=e,this._renderer=r;var n=t.createBatchMesh(r,e.main._maxParticles);this._vertexStride=4===r._renderMode?r.mesh.vertexCount:4,this._startPositionBuffer=n.getAttributes("_START_POSITION"),this._startVelocityBuffer=n.getAttributes("_START_VELOCITY"),this._startColorBuffer=n.getAttributes("_START_COLOR"),this._startSizeBuffer=n.getAttributes("_START_SIZE"),this._startRotationBuffer=n.getAttributes("_START_ROTATION"),this._startTimeBuffer=n.getAttributes("_TIME"),this._random0Buffer=n.getAttributes("_RANDOM0"),this._random1Buffer=n.getAttributes("_RANDOM1"),this._worldPostionBuffer=n.getAttributes("_WORLD_POSITION"),this._worldRoationBuffer=n.getAttributes("_WORLD_ROTATION");var i=n.glTFMesh.primitives[0];this._vertexAttributes=[];for(var a in i.attributes)this._vertexAttributes.push(a);r.batchMesh=n,r.batchMaterial=r.materials[0].clone(),n.uploadSubIndexBuffer()},c.prototype.update=function(e){if(this._comp&&!this._comp.isPaused){this._time+=e;for(var t=this._comp,r=t.main;(this._lastAliveCursor!==this._firstAliveCursor||this._forceUpdate)&&this._isParticleExpired(this._lastAliveCursor);)this._forceUpdate=!1,this._lastAliveCursor++,this._lastAliveCursor>=r._maxParticles&&(this._lastAliveCursor=0);var n=t.gameObject.transform;this._worldPostionCache=n.getPosition(),this._worldRotationCache=n.getRotation(),t._isPlaying&&this._time>=r.startDelay.constant&&t.emission.enable&&this._updateEmission(e),this._updateRender()}},c.prototype._updateEmission=function(e){var t=this._comp,r=t.main,n=this._emittsionTime;this._emittsionTime+=e;var i=this._emittsionTime>r.duration,a=this.aliveParticleCount,o=0;i?r.loop?(this._readEmitCount=0,this._readEmitCount+=this._getBurstCount(n,this._emittsionTime),this._emittsionTime-=r.duration,this._burstIndex=0,this._readEmitCount+=this._getBurstCount(0,this._emittsionTime)):t.stop(!1):t.emission.bursts.length>0&&(this._readEmitCount+=this._getBurstCount(n,this._emittsionTime));for(var s=0;s<this._readEmitCount;s++)this._tryEmit()&&(o++,this._readEmitCount--);var c=t.emission.rateOverTime.constant;if(c>0){var l=1/c;for(this._frameRateTime+=e;this._frameRateTime>l&&this._tryEmit();)o++,this._frameRateTime-=l}o=Math.min(r._maxParticles-a,o),o>0&&(this._addParticles(this._time,this._lastFrameFirstCursor,o,n),this._dirty=!0)},c.prototype._updateRender=function(){var t=this._renderer,r=this._comp,n=r.main;this._dirty&&(t.batchMesh.uploadVertexBuffer(this._vertexAttributes),this._lastFrameFirstCursor=this._firstAliveCursor,this._dirty=!1);var i=r.gameObject.transform,a=t.batchMaterial;switch(0===n._simulationSpace&&(a.setVector3("u_worldPosition",this._worldPostionCache),a.setVector4("u_worldRotation",this._worldRotationCache)),n._scaleMode){case 1:var o=i.getLocalScale();a.setVector3("u_positionScale",o),a.setVector3("u_sizeScale",o);break;case 2:var o=i.getScale();a.setVector3("u_positionScale",o),a.setVector3("u_sizeScale",e.Vector3.ONE);break;case 0:var o=i.getScale();a.setVector3("u_positionScale",o),a.setVector3("u_sizeScale",o)}a.setFloat("u_currentTime",this._time),a.setVector3("u_gravity",this._finalGravity)},Object.defineProperty(c.prototype,"aliveParticleCount",{get:function(){return this._firstAliveCursor>=this._lastAliveCursor?this._firstAliveCursor-this._lastAliveCursor:this._comp.main._maxParticles-this._lastAliveCursor+this._firstAliveCursor},enumerable:!0,configurable:!0}),c}();t.ParticleBatcher=c,__reflect(c.prototype,"egret3d.particle.ParticleBatcher")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){var t;!function(e){e.MainChanged="mainChanged",e.ColorChanged="colorChanged",e.VelocityChanged="velocityChanged",e.SizeChanged="sizeChanged",e.RotationChanged="rotationChanged",e.TextureSheetChanged="textureSheetChanged",e.ShapeChanged="shapeChanged",e.StartRotation3DChanged="rotation3DChanged",e.SimulationSpaceChanged="simulationSpace",e.ScaleModeChanged="scaleMode",e.MaxParticlesChanged="maxParticles"}(t=e.ParticleCompEventType||(e.ParticleCompEventType={}));var r=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.main=new e.MainModule(r),r.emission=new e.EmissionModule(r),r.shape=new e.ShapeModule(r),r.velocityOverLifetime=new e.VelocityOverLifetimeModule(r),r.rotationOverLifetime=new e.RotationOverLifetimeModule(r),r.sizeOverLifetime=new e.SizeOverLifetimeModule(r),r.colorOverLifetime=new e.ColorOverLifetimeModule(r),r.textureSheetAnimation=new e.TextureSheetAnimationModule(r),r._isPlaying=!1,r._isPaused=!1,r._batcher=new e.ParticleBatcher,r}return __extends(r,t),r.prototype._clean=function(){this._batcher.clean(),this._isPlaying=!1,this._isPaused=!1},r.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),this._clean()},r.prototype.initialize=function(){t.prototype.initialize.call(this),this._clean()},r.prototype.initBatcher=function(){this._clean(),this._batcher.init(this,this.gameObject.getComponent(e.ParticleRenderer))},r.prototype.update=function(e){this._batcher.update(e)},r.prototype.play=function(e){if(void 0===e&&(e=!0),this._isPaused?this._isPaused=!1:(this._isPlaying=!0,this._isPaused=!1,this._batcher.resetTime()),e)for(var t=this.gameObject.transform.children,n=0,i=t;n<i.length;n++){var a=i[n],o=a.gameObject.getComponent(r);o&&o.isActiveAndEnabled&&o.play(e)}},r.prototype.pause=function(e){if(void 0===e&&(e=!0),this._isPaused=!0,e)for(var t=this.gameObject.transform.children,n=0,i=t;n<i.length;n++){var a=i[n],o=a.gameObject.getComponent(r);o&&o.isActiveAndEnabled&&o.pause(e)}},r.prototype.stop=function(e){if(void 0===e&&(e=!0),this._isPlaying=!1,this._batcher.resetTime(),e)for(var t=this.gameObject.transform.children,n=0,i=t;n<i.length;n++){var a=i[n],o=a.gameObject.getComponent(r);o&&o.isActiveAndEnabled&&o.stop(e)}},r.prototype.clear=function(e){if(void 0===e&&(e=!0),e)for(var t=this.gameObject.transform.children,n=0,i=t;n<i.length;n++){var a=i[n],o=a.gameObject.getComponent(r);o&&o.isActiveAndEnabled&&o.stop(e)}},Object.defineProperty(r.prototype,"loop",{get:function(){return this.main.loop},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isPlaying",{get:function(){return this._isPlaying},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isPaused",{get:function(){return this._isPaused},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isAlive",{get:function(){return this._batcher.aliveParticleCount>0||this._isPlaying},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"main",void 0),__decorate([paper.serializedField],r.prototype,"emission",void 0),__decorate([paper.serializedField],r.prototype,"shape",void 0),__decorate([paper.serializedField],r.prototype,"velocityOverLifetime",void 0),__decorate([paper.serializedField],r.prototype,"rotationOverLifetime",void 0),__decorate([paper.serializedField],r.prototype,"sizeOverLifetime",void 0),__decorate([paper.serializedField],r.prototype,"colorOverLifetime",void 0),__decorate([paper.serializedField],r.prototype,"textureSheetAnimation",void 0),r}(paper.BaseComponent);e.ParticleComponent=r,__reflect(r.prototype,"egret3d.particle.ParticleComponent")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r,n=e.Matrix4.create();!function(e){e.Mesh="mesh",e.Materials="materials",e.RenderMode="renderMode",e.LengthScaleChanged="lengthScale",e.VelocityScaleChanged="velocityScale"}(r=t.ParticleRendererEventType||(t.ParticleRendererEventType={}));var i;!function(e){e[e.Billboard=0]="Billboard",e[e.Stretch=1]="Stretch",e[e.HorizontalBillboard=2]="HorizontalBillboard",e[e.VerticalBillboard=3]="VerticalBillboard",e[e.Mesh=4]="Mesh",e[e.None=5]="None"}(i=t.ParticleRenderMode||(t.ParticleRenderMode={}));var a;!function(e){e.WORLD_POSITION="u_worldPosition",e.WORLD_ROTATION="u_worldRotation",e.POSITION_SCALE="u_positionScale",e.SIZE_SCALE="u_sizeScale",e.SCALING_MODE="u_scalingMode",e.GRAVIT="u_gravity",e.START_ROTATION3D="u_startRotation3D",e.SIMULATION_SPACE="u_simulationSpace",e.CURRENTTIME="u_currentTime",e.ALPHAS_GRADIENT="u_alphaGradient[0]",e.COLOR_GRADIENT="u_colorGradient[0]",e.ALPHA_GRADIENT_MAX="u_alphaGradientMax[0]",e.COLOR_GRADIENT_MAX="u_colorGradientMax[0]",e.VELOCITY_CONST="u_velocityConst",e.VELOCITY_CURVE_X="u_velocityCurveX[0]",e.VELOCITY_CURVE_Y="u_velocityCurveY[0]",e.VELOCITY_CURVE_Z="u_velocityCurveZ[0]",e.VELOCITY_CONST_MAX="u_velocityConstMax",e.VELOCITY_CURVE_MAX_X="u_velocityCurveMaxX[0]",e.VELOCITY_CURVE_MAX_Y="u_velocityCurveMaxY[0]",e.VELOCITY_CURVE_MAX_Z="u_velocityCurveMaxZ[0]",e.SPACE_TYPE="u_spaceType",e.SIZE_CURVE="u_sizeCurve[0]",e.SIZE_CURVE_X="u_sizeCurveX[0]",e.SIZE_CURVE_Y="u_sizeCurveY[0]",e.SIZE_CURVE_Z="u_sizeCurveZ[0]",e.SIZE_CURVE_MAX="u_sizeCurveMax[0]",e.SIZE_CURVE_MAX_X="u_sizeCurveMaxX[0]",e.SIZE_CURVE_MAX_Y="u_sizeCurveMaxY[0]",e.SIZE_CURVE_MAX_Z="u_sizeCurveMaxZ[0]",e.ROTATION_CONST="u_rotationConst",e.ROTATION_CONST_SEPRARATE="u_rotationConstSeprarate",e.ROTATION_CURVE="u_rotationCurve[0]",e.ROTATE_CURVE_X="u_rotationCurveX[0]",e.ROTATE_CURVE_y="u_rotationCurveY[0]",e.ROTATE_CURVE_Z="u_rotationCurveZ[0]",e.ROTATE_CURVE_W="u_rotationCurveW[0]",e.ROTATION_CONST_MAX="u_rotationConstMax",e.ROTATION_CONST_MAX_SEPRARATE="u_rotationConstMaxSeprarate",e.ROTATION_CURVE_MAX="u_rotationCurveMax[0]",e.ROTATION_CURVE_MAX_X="u_rotationCurveMaxX[0]",e.ROTATION_CURVE_MAX_Y="u_rotationCurveMaxY[0]",e.ROTATION_CURVE_MAX_Z="u_rotationCurveMaxZ[0]",e.ROTATION_CURVE_MAX_W="u_rotationCurveMaxW[0]",e.CYCLES="u_cycles",e.SUB_UV="u_subUV",e.UV_CURVE="u_uvCurve[0]",e.UV_CURVE_MAX="u_uvCurveMax[0]",e.LENGTH_SCALE="u_lengthScale",e.SPEED_SCALE="u_speeaScale"}(a=t.ParticleMaterialUniform||(t.ParticleMaterialUniform={}));var o;!function(e){e.SPHERHBILLBOARD="SPHERHBILLBOARD",e.STRETCHEDBILLBOARD="STRETCHEDBILLBOARD",e.HORIZONTALBILLBOARD="HORIZONTALBILLBOARD",e.VERTICALBILLBOARD="VERTICALBILLBOARD",e.ROTATIONOVERLIFETIME="ROTATIONOVERLIFETIME",e.ROTATIONCONSTANT="ROTATIONCONSTANT",e.ROTATIONTWOCONSTANTS="ROTATIONTWOCONSTANTS",e.ROTATIONSEPERATE="ROTATIONSEPERATE",e.ROTATIONCURVE="ROTATIONCURVE",e.ROTATIONTWOCURVES="ROTATIONTWOCURVES",e.TEXTURESHEETANIMATIONCURVE="TEXTURESHEETANIMATIONCURVE",e.TEXTURESHEETANIMATIONTWOCURVE="TEXTURESHEETANIMATIONTWOCURVE",e.VELOCITYCONSTANT="VELOCITYCONSTANT",e.VELOCITYCURVE="VELOCITYCURVE",e.VELOCITYTWOCONSTANT="VELOCITYTWOCONSTANT",e.VELOCITYTWOCURVE="VELOCITYTWOCURVE",e.COLOROGRADIENT="COLOROGRADIENT",e.COLORTWOGRADIENTS="COLORTWOGRADIENTS",e.SIZECURVE="SIZECURVE",e.SIZETWOCURVES="SIZETWOCURVES",e.SIZECURVESEPERATE="SIZECURVESEPERATE",e.SIZETWOCURVESSEPERATE="SIZETWOCURVESSEPERATE",e.RENDERMESH="RENDERMESH",e.SHAPE="SHAPE"}(o=t.ParticleMaterialDefine||(t.ParticleMaterialDefine={}));var s=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.frustumCulled=!1,e._materials=[],e._renderMode=0,e}return __extends(r,t),r.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),this._mesh=null,this._materials.length=0,this._renderMode=0,this.velocityScale=1,this.lengthScale=1},r.prototype.recalculateAABB=function(){this._aabb.copy(e.AABB.ONE)},r.prototype.raycast=function(t,r,i){var a=!1,o=void 0,s=this.gameObject.transform.worldMatrix,c=e.helpRay.applyMatrix(n.inverse(s),t),l=this.aabb;return r&&(r===!0?a=!0:(a=i||!1,o=r)),l.raycast(c,o)?(o&&(o.position.applyMatrix(s),o.distance=t.origin.getDistance(o.position)),!0):!1},Object.defineProperty(r.prototype,"renderMode",{get:function(){return this._renderMode},set:function(e){this._renderMode!==e&&(this._renderMode=e,paper.EventPool.dispatchEvent("renderMode",this))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"mesh",{get:function(){return this._mesh},set:function(e){this._mesh!==e&&(this._mesh=e,paper.EventPool.dispatchEvent("mesh",this))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"materials",{get:function(){return this._materials},set:function(e){if(e!==this._materials){this._materials.length=0;for(var t=0,r=e;t<r.length;t++){var n=r[t];this._materials.push(n)}paper.EventPool.dispatchEvent("materials",this)}},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"_mesh",void 0),__decorate([paper.serializedField],r.prototype,"_materials",void 0),__decorate([paper.serializedField],r.prototype,"velocityScale",void 0),__decorate([paper.serializedField],r.prototype,"_renderMode",void 0),__decorate([paper.serializedField],r.prototype,"lengthScale",void 0),__decorate([paper.editor.property(18)],r.prototype,"mesh",null),__decorate([paper.editor.property(20)],r.prototype,"materials",null),r}(paper.BaseRenderer);t.ParticleRenderer=s,__reflect(s.prototype,"egret3d.particle.ParticleRenderer")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var paper;!function(e){var t=function(e){function t(){var r=null!==e&&e.apply(this,arguments)||this;return r.scenes=[],r.gameObjects=[],r.components=[],r.releases=t._releases,r}return __extends(t,e),t.prototype.clear=function(){this.scenes.length=0,this.gameObjects.length=0,this.components.length=0,this.releases.length=0},t._releases=[],t}(e.SingletonComponent);e.DisposeCollecter=t,__reflect(t.prototype,"paper.DisposeCollecter")}(paper||(paper={}));var egret3d;!function(e){var t=function(){function t(){this.screenViewport={x:0,y:0,w:0,h:0},this.absolutePosition={x:0,y:0,w:0,h:0},this._resizeDirty=!0}return t.prototype.init=function(e,t){var r=this;this._canvas=e,window.addEventListener("resize",function(){return r._resizeDirty=!0},!1),this.isLandscape=t.contentWidth>t.contentHeight,this.contentWidth=t.contentWidth,this.contentHeight=t.contentHeight},t.prototype.update=function(){this._resizeDirty&&(this._resize(),this._resizeDirty=!1)},t.prototype._resize=function(){var t=window.innerWidth,r=window.innerHeight,n=this.absolutePosition;n.w=t,n.h=r;var i=this.screenViewport,a=this.isLandscape&&window.innerHeight>window.innerWidth||!this.isLandscape&&window.innerWidth>window.innerHeight;if(a){i.w=this.contentWidth;var o=Math.ceil(i.w/r*t);i.h=o}else{i.w=this.contentWidth;var o=Math.ceil(i.w/t*r);i.h=o}var s=this._canvas;s.width=i.w,s.height=i.h;var c=n.x,l=n.y,p=n.w,u=n.h;if(s.style.top=l+"px",s.style.position="absolute",s.style[egret.web.getPrefixStyleName("transformOrigin")]="0% 0% 0px",a){s.style.left=window.innerWidth+"px";var d="matrix(0,"+u/s.width+","+-p/s.height+",0,0,0)";s.style[egret.web.getPrefixStyleName("transform")]=d}else{s.style.left=c+"px";var d="matrix("+p/s.width+",0,0,"+u/s.height+",0,0)";s.style[egret.web.getPrefixStyleName("transform")]=d}var h,f;a?(h=e.stage.screenViewport.w/u,f=e.stage.screenViewport.h/p):(h=e.stage.screenViewport.w/p,f=e.stage.screenViewport.h/u),e.InputManager.touch.updateOffsetAndScale(c,l,h,f,a),e.InputManager.mouse.updateOffsetAndScale(c,l,h,f,a);var _=paper.Application.systemManager.getSystem(e.Egret2DRendererSystem).webInput;_&&_.$updateSize()},t}();e.Stage3D=t,__reflect(t.prototype,"egret3d.Stage3D"),e.stage=new t}(egret3d||(egret3d={}));var egret3d;!function(e){function t(e,t){for(var r=0,n=u;r<n.length;r++){var i=n[r],a=e.getExtension(i+t);if(a)return a}return null}function r(e,t){if(void 0===t&&(t="highp"),"highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}function n(e){var t="precision "+e+" float; \n";return t+="precision "+e+" int; \n"}function i(t,r){if(!(r in e.ShaderChunk))throw new Error("Can not resolve #include <"+r+">");return a(e.ShaderChunk[r])}function a(e){return e.replace(p,i)}function o(e,t,r,n){var i=t.createShader(e);t.shaderSource(i,n+a(r.uri)),t.compileShader(i);var o=t.getShaderParameter(i,t.COMPILE_STATUS);return o?i:(confirm("Shader compile:"+r.name+" error! ->"+t.getShaderInfoLog(i)+"\n. did you want see the code?")&&alert(r.uri),t.deleteShader(i),null)}function s(e,t){for(var r=t.program,n=t.attributes,i=e.getProgramParameter(r,e.ACTIVE_ATTRIBUTES),a=0;i>a;a++){var o=e.getActiveAttrib(r,a),s=e.getAttribLocation(r,o.name);n.push({name:o.name,type:o.type,size:o.size,location:s})}}function c(e,t,r){for(var n=t.program,i=t.contextUniforms,a=t.uniforms,o=e.getProgramParameter(n,e.ACTIVE_UNIFORMS),s=0;o>s;s++){var c=e.getActiveUniform(n,s),l=r.uniforms[c.name],p=e.getUniformLocation(n,c.name);l||console.error("缺少Uniform定义："+c.name),l.semantic?i.push({name:c.name,type:c.type,size:c.size,location:p}):a.push({name:c.name,type:c.type,size:c.size,location:p})}}function l(e){for(var t=e.contextUniforms.concat(e.uniforms),r=[],n=[],i=0,a=t;i<a.length;i++){var o=a[i],s=o.name;(35678===o.type||35680===o.type)&&(s.indexOf("[")>-1?r.push(s):n.push(s))}for(var c=0,l=n.concat(r),p=0,u=t;p<u.length;p++){var o=u[p];if(!(l.indexOf(o.name)<0)){o.textureUnits||(o.textureUnits=[]),o.textureUnits.length=o.size;for(var d=0;d<o.size;d++)o.textureUnits[d]=c++}}}var p=/#include +<([\w\d.]+)>/g,u=["","MOZ_","OP_","WEBKIT_"],d=function(i){function a(){var e=null!==i&&i.apply(this,arguments)||this;return e.precision="highp",e}return __extends(a,i),a.prototype.initialize=function(){i.prototype.initialize.call(this);var o=a.webgl;o&&(this.version=parseFloat(/^WebGL\ ([0-9])/.exec(o.getParameter(o.VERSION))[1]),this.maxPrecision=r(o,this.precision),this.maxTextures=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=o.getParameter(o.MAX_TEXTURE_SIZE),this.maxCubemapSize=o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxVertexUniformVectors=o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS),this.floatTextures=!!t(o,"OES_texture_float"),this.anisotropyExt=t(o,"EXT_texture_filter_anisotropic"),this.shaderTextureLOD=t(o,"EXT_shader_texture_lod"),this.maxAnisotropy=null!==this.anisotropyExt?o.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,t(o,"OES_standard_derivatives"),t(o,"GL_OES_standard_derivatives"),a.commonDefines=n(this.maxPrecision),e.SkinnedMeshRendererSystem.maxBoneCount=Math.floor((this.maxVertexUniformVectors-20)/4),console.info("WebGL version:",this.version),console.info("Maximum shader precision:",this.maxPrecision),console.info("Maximum texture count:",this.maxTextures),console.info("Maximum vertex texture count:",this.maxVertexTextures),console.info("Maximum texture size:",this.maxTextureSize),console.info("Maximum cube map texture size:",this.maxCubemapSize),console.info("Maximum vertex uniform vectors:",this.maxVertexUniformVectors),console.info("Maximum GPU skinned bone count:",e.SkinnedMeshRendererSystem.maxBoneCount))},a.canvas=null,a.webgl=null,a.commonDefines="",a}(paper.SingletonComponent);e.WebGLCapabilities=d,__reflect(d.prototype,"egret3d.WebGLCapabilities");var h=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e._stateEnables=[3042,2884,2929],e._programs={},e._vsShaders={},e._fsShaders={},e._cacheStateEnable={},e._cacheProgram=null,e._cacheState=null,e}return __extends(r,t),r.prototype._getWebGLProgram=function(t,r,n){var i=d.webgl,a=i.createProgram(),s=t.name+n,c=this._vsShaders[s];c||(c=o(i.VERTEX_SHADER,i,t,d.commonDefines+n+e.ShaderChunk.common_vert_def),this._vsShaders[s]=c),s=r.name+n;var l=this._fsShaders[s];l||(l=o(i.FRAGMENT_SHADER,i,r,d.commonDefines+n+e.ShaderChunk.common_frag_def),this._fsShaders[s]=l),i.attachShader(a,c),i.attachShader(a,l),i.linkProgram(a);var p=i.getProgramParameter(a,i.LINK_STATUS);return p?a:(alert("program compile: "+t.name+"_"+r.name+" error! ->"+i.getProgramInfoLog(a)),i.deleteProgram(a),null)},r.prototype.clearState=function(){for(var e in this._cacheStateEnable)delete this._cacheStateEnable[e];this._cacheProgram=null,this._cacheState=null},r.prototype.updateState=function(e){if(this._cacheState!==e){this._cacheState=e;for(var t=d.webgl,r=this._stateEnables,n=this._cacheStateEnable,i=0,a=r;i<a.length;i++){var o=a[i],s=e?e.enable&&e.enable.indexOf(o)>=0:!1;n[o]!==s&&(n[o]=s,s?t.enable(o):t.disable(o))}if(e){var c=e.functions;if(c)for(var l in c)t[l].apply(t,c[l])}}},r.prototype.useProgram=function(e){return this._cacheProgram!==e?(this._cacheProgram=e,d.webgl.useProgram(e.program),!0):!1},r.prototype.getProgram=function(t,r,n){var i=t._shader,a=i.config.extensions.KHR_techniques_webgl,o=a.shaders[0],p=a.shaders[1],u=o.name+"_"+p.name+"_"+n,h=d.webgl,f=this._programs[u];if(!f){var _=this._getWebGLProgram(o,p,n);_&&(f=new e.GlProgram(_),this._programs[u]=f,s(h,f),c(h,f,r),l(f))}return r.program!==f.id&&(r.program=f.id),f},r.prototype.targetAndViewport=function(t,r){var n,i,a=d.webgl;r?(n=r.width,i=r.height,r.use()):(n=e.stage.screenViewport.w,i=e.stage.screenViewport.h,a.bindFramebuffer(a.FRAMEBUFFER,null)),a.viewport(n*t.x,i*t.y,n*t.w,i*t.h),a.depthRange(0,1)},r.prototype.clear=function(e,t,r){var n=d.webgl;e&&t?(n.depthMask(!0),n.clearColor(r.r,r.g,r.b,r.a),n.clearDepth(1),n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT)):t?(n.depthMask(!0),n.clearDepth(1),n.clear(n.DEPTH_BUFFER_BIT)):e&&(n.clearColor(r.r,r.g,r.b,r.a),n.clear(n.COLOR_BUFFER_BIT))},r}(paper.SingletonComponent);e.WebGLRenderState=h,__reflect(h.prototype,"egret3d.WebGLRenderState")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function t(e,t){this.beizerPoints=e,this.bezierPointNum=t}return t.createLinearBezier=function(r,n,i){i=i>2?i:3;var a=new Array,o=function(e,t,r){var n=(1-e)*t+e*r;return n};a.push(r);for(var s=1;i>=s;s++)a.push(new e.Vector3(o(s/i,r.x,n.x),o(s/i,r.y,r.y),o(s/i,r.z,r.z)));return new t(a,i)},t.createQuadraticBezier=function(r,n,i,a){a=a>2?a:3;for(var o=new Array,s=function(e,t,r,n){var i=(1-e)*(1-e)*t+2*e*(1-e)*r+e*e*n;return i},c=1;a>=c;c++)o.push(new e.Vector3(s(c/a,r.x,n.x,i.x),s(c/a,r.y,n.y,i.y),s(c/a,r.z,n.z,i.z)));return new t(o,a)},t.createCubicBezier=function(r,n,i,a,o){o=o>3?o:4;for(var s=new Array,c=function(e,t,r,n,i){var a=(1-e)*(1-e)*(1-e)*t+3*e*(1-e)*(1-e)*r+3*e*e*(1-e)*n+e*e*e*i;return a},l=1;o>=l;l++)s.push(new e.Vector3(c(l/o,r.x,n.x,i.x,a.x),c(l/o,r.y,n.y,i.y,a.y),c(l/o,r.z,n.z,i.z,a.z)));return new t(s,o)},t}();e.Curve3=t,__reflect(t.prototype,"egret3d.Curve3")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=[e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create()],r=function(r){function n(){var t=r.call(this)||this;return t._dirtyRadius=!0,t._dirtyCenter=!0,t._dirtySize=!0,t._boundingSphereRadius=0,t._minimum=e.Vector3.create(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t._maximum=e.Vector3.create(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),t._center=e.Vector3.create(),t._size=e.Vector3.create(),t}return __extends(n,r),n.create=function(e,t){if(void 0===e&&(e=null),void 0===t&&(t=null),this._instances.length>0){var r=this._instances.pop().set(e,t);return r._released=!1,r}return(new n).set(e,t)},n.prototype.serialize=function(){return[this._minimum.x,this._minimum.y,this._minimum.z,this._maximum.x,this._maximum.y,this._maximum.z]},n.prototype.deserialize=function(e){return this.fromArray(e)},n.prototype.clone=function(){return n.create(this.minimum,this.maximum)},n.prototype.copy=function(e){return this.set(e.minimum,e.maximum)},n.prototype.clear=function(){return this._minimum.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._maximum.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this._dirtyCenter=!0,this._dirtyRadius=!0,this._dirtySize=!0,this},n.prototype.set=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=null),e&&e!==this._minimum&&this._minimum.copy(e),t&&t!==this._maximum&&this._maximum.copy(t),this._dirtyCenter=!0,this._dirtyRadius=!0,this._dirtySize=!0,this},n.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this._minimum.fromArray(e,t),this._maximum.fromArray(e,t+3),this._dirtyCenter=!0,this._dirtyRadius=!0,this._dirtySize=!0,this},n.prototype.fromPoints=function(e){this.clear();for(var t=0,r=e;t<r.length;t++){var n=r[t];this.add(n)}return this},n.prototype.applyMatrix=function(e,r){if(r||(r=this),r.isEmpty)return r!==this&&this.copy(r),this;var n=r.minimum,i=r.maximum;return t[0].set(n.x,n.y,n.z).applyMatrix(e),t[1].set(n.x,n.y,i.z).applyMatrix(e),t[2].set(n.x,i.y,n.z).applyMatrix(e),t[3].set(n.x,i.y,i.z).applyMatrix(e),t[4].set(i.x,n.y,n.z).applyMatrix(e),t[5].set(i.x,n.y,i.z).applyMatrix(e),t[6].set(i.x,i.y,n.z).applyMatrix(e),t[7].set(i.x,i.y,i.z).applyMatrix(e),this.fromPoints(t),this},n.prototype.add=function(e,t){t||(t=this);var r=t.minimum,i=t.maximum;return e instanceof n?(this._minimum.min(e._minimum,r),this._maximum.max(e._maximum,i)):(this._minimum.min(e,r),this._maximum.max(e,i)),this._dirtyRadius=!0,this._dirtyCenter=!0,this._dirtySize=!0,this},n.prototype.expand=function(e,t){t||(t=this);var r=t.minimum,n=t.maximum;return"number"==typeof e?(this._minimum.addScalar(-e,r),this._maximum.addScalar(e,n)):(this._minimum.subtract(e,r),this._maximum.add(e,n)),this._dirtyRadius=!0,this._dirtyCenter=!0,this._dirtySize=!0,this},n.prototype.offset=function(e,t){t||(t=this);var r=t.minimum,n=t.maximum;return"number"==typeof e?(this._minimum.addScalar(e,r),this._maximum.addScalar(e,n)):(this._minimum.add(e,r),this._maximum.add(e,n)),this._dirtyRadius=!0,this._dirtyCenter=!0,this._dirtySize=!0,this},n.prototype.contains=function(e){var t=this._minimum,r=this._maximum;if(e instanceof n){var i=e.minimum,a=e.maximum;return t.x<=i.x&&a.x<=r.x&&t.y<=i.y&&a.y<=r.y&&t.z<=i.z&&a.z<=r.z}return e.x>t.x&&e.x<r.x&&e.y>t.y&&e.x<r.y&&e.z>t.z&&e.z<r.z},n.prototype.getDistance=function(t){return e.helpVector3A.clamp(this._minimum,this._maximum,t).subtract(t).length},n.prototype.clampPoints=function(e,t){return t.clamp(this._minimum,this._maximum,e)},n.prototype.raycast=function(e,t){var r,n,i,a,o,s,c=1/e.direction.x,l=1/e.direction.y,p=1/e.direction.z,u=e.origin;return c>=0?(r=(this.minimum.x-u.x)*c,n=(this.maximum.x-u.x)*c):(r=(this.maximum.x-u.x)*c,n=(this.minimum.x-u.x)*c),l>=0?(i=(this.minimum.y-u.y)*l,a=(this.maximum.y-u.y)*l):(i=(this.maximum.y-u.y)*l,a=(this.minimum.y-u.y)*l),r>a||i>n?!1:((i>r||r!==r)&&(r=i),(n>a||n!==n)&&(n=a),p>=0?(o=(this.minimum.z-u.z)*p,s=(this.maximum.z-u.z)*p):(o=(this.maximum.z-u.z)*p,s=(this.minimum.z-u.z)*p),r>s||o>n?!1:((o>r||r!==r)&&(r=o),(n>s||n!==n)&&(n=s),0>n?!1:(t&&e.at(t.distance=r>=0?r:n,t.position),!0)))},Object.defineProperty(n.prototype,"isEmpty",{get:function(){return this._maximum.x<this._minimum.x||this._maximum.y<this._minimum.y||this._maximum.z<this._minimum.z},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"boundingSphereRadius",{get:function(){return this._dirtyRadius&&(e.helpVector3A.subtract(this._maximum,this._minimum).multiplyScalar(.5),this._boundingSphereRadius=e.helpVector3A.length,this._dirtyRadius=!1),this._boundingSphereRadius},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"minimum",{get:function(){return this._minimum},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"maximum",{get:function(){return this._maximum},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"center",{get:function(){return this._dirtyCenter&&(this._center.add(this._maximum,this._minimum).multiplyScalar(.5),this._dirtyCenter=!1),this._center},set:function(t){var r=this.size,n=this._center.copy(t),i=e.helpVector3A.copy(r).multiplyScalar(.5);this._minimum.copy(n).subtract(i),this._maximum.copy(n).add(i)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"size",{get:function(){return this._dirtySize&&(this._size.subtract(this._maximum,this._minimum),this._dirtySize=!1),this._size},set:function(t){var r=this.center,n=this._size.copy(t),i=e.helpVector3A.copy(n).multiplyScalar(.5);this._minimum.copy(r).subtract(i),this._maximum.copy(r).add(i),this._dirtyRadius=!0},enumerable:!0,configurable:!0}),n.ONE=(new n).set(e.Vector3.MINUS_ONE.clone().multiplyScalar(.5).release(),e.Vector3.ONE.clone().multiplyScalar(.5).release()),n._instances=[],n}(paper.BaseRelease);e.AABB=r,__reflect(r.prototype,"egret3d.AABB",["paper.ICCS","paper.ISerializable","egret3d.IRaycast"]),e.helpAABBA=r.create()}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=t.call(this)||this;return e.radius=1,e.phi=0,e.theta=0,e}return __extends(r,t),r.create=function(e,t,n){if(void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),this._instances.length>0){var i=this._instances.pop().set(e,t,n);return i._released=!1,i}return(new r).set(e,t,n)},r.prototype.serialize=function(){return[this.radius,this.phi,this.theta]},r.prototype.deserialize=function(e){return this.radius=e[0],this.phi=e[1],this.theta=e[2],this},r.prototype.clone=function(){return r.create(this.radius,this.phi,this.theta)},r.prototype.copy=function(e){return this.set(e.radius,e.phi,e.theta)},r.prototype.set=function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},r.prototype.fromCartesianCoords=function(t,r,n){return t.hasOwnProperty("x")&&(n=t.z,r=t.y,t=t.z),this.radius=Math.sqrt(t*t+r*r+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(e.floatClamp(r/this.radius,-1,1))),this},r.prototype.makeSafe=function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this},r._instances=[],r}(paper.BaseRelease);e.Spherical=t,__reflect(t.prototype,"egret3d.Spherical",["paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=t.call(this)||this;return r.radius=0,r.center=e.Vector3.create(),r}return __extends(r,t),r.create=function(t,n){if(void 0===t&&(t=e.Vector3.ZERO),void 0===n&&(n=0),this._instances.length>0){var i=this._instances.pop().set(t,n);return i._released=!1,i}return(new r).set(t,n)},r.prototype.serialize=function(){return[this.center.x,this.center.y,this.center.z,this.radius]},r.prototype.deserialize=function(e){return this.radius=e[3],this.center.fromArray(e),this},r.prototype.clone=function(){return r.create(this.center,this.radius)},r.prototype.copy=function(e){return this.set(e.center,e.radius)},r.prototype.set=function(e,t){return this.radius=t,this.center.copy(e),this},r.prototype.fromPoints=function(t,r){r?this.center.copy(r):this.center.copy(e.helpAABBA.fromPoints(t).center);for(var n=0,i=0,a=t.length;a>i;i++)n=Math.max(n,this.center.getDistance(t[i]));return this.radius=Math.sqrt(n),this},r.prototype.applyMatrix=function(e){return this.center.applyMatrix(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},r.prototype.contains=function(e){if(e instanceof r){var t=this.radius-e.radius;return t>=0&&this.center.getSquaredDistance(e.center)<=t*t,!1}return this.center.getSquaredDistance(e)<=this.radius*this.radius},r.prototype.getDistance=function(e){return this.center.getDistance(e)-this.radius},r.prototype.clampPoint=function(e,t){var r=this.center.getSquaredDistance(e);return r>this.radius*this.radius?(t.subtract(this.center,e).normalize(),t.multiplyScalar(this.radius).add(this.center)):t.copy(e),t},r.prototype.raycast=function(t,r){var n=e.helpVector3A.subtract(this.center,t.origin),i=n.dot(t.direction),a=n.dot(n)-i*i,o=this.radius*this.radius;if(a>o)return!1;var s=Math.sqrt(o-a),c=i-s,l=i+s;return 0>c&&0>l?!1:(r&&t.at(r.distance=0>c?l:c,r.position),!0)},r._instances=[],r}(paper.BaseRelease);e.Sphere=t,__reflect(t.prototype,"egret3d.Sphere",["paper.ICCS","paper.ISerializable","egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e.USE_COLOR="USE_COLOR",e.USE_MAP="USE_MAP",e.USE_SKINNING="USE_SKINNING",e.USE_LIGHTMAP="USE_LIGHTMAP",e.USE_SHADOWMAP="USE_SHADOWMAP",e.USE_SIZEATTENUATION="USE_SIZEATTENUATION",e.MAX_BONES="MAX_BONES",e.FLIP_V="FLIP_V",e.NUM_POINT_LIGHTS="NUM_POINT_LIGHTS",e.NUM_SPOT_LIGHTS="NUM_SPOT_LIGHTS",e.SHADOWMAP_TYPE_PCF="SHADOWMAP_TYPE_PCF",e.SHADOWMAP_TYPE_PCF_SOFT="SHADOWMAP_TYPE_PCF_SOFT",e.DEPTH_PACKING_3200="DEPTH_PACKING 3200",e.DEPTH_PACKING_3201="DEPTH_PACKING 3201",e.USE_FOG="USE_FOG",e.FOG_EXP2="FOG_EXP2"
}(t=e.ShaderDefine||(e.ShaderDefine={}));var r;!function(e){e.Diffuse="diffuse",e.Opacity="opacity",e.Size="size",e.Map="map",e.Specular="specular",e.Shininess="shininess",e.UVTransform="uvTransform"}(r=e.ShaderUniformName||(e.ShaderUniformName={}));var n=function(e){function t(t,r){var n=e.call(this,r)||this;return n.config=t,n}return __extends(t,e),t}(e.GLTFAsset);e.Shader=n,__reflect(n.prototype,"egret3d.Shader")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=0,r=function(r){function n(n,i){var a=r.call(this,i)||this;if(a.renderQueue=2e3,a._id=t++,a._version=0,a._cacheDefines="",a._defines=[],a._textures=[],a._shader=null,a._glTFTechnique=null,n)if("string"==typeof n){var o=paper.Asset.find(n);o||console.error("Cannot find shader.",n),a._reset(o||e.DefaultShaders.MESH_BASIC)}else a._reset(n);else a._reset(e.DefaultShaders.MESH_BASIC);return a}return __extends(n,r),n.create=function(e,t){return new n(e,t)},n.prototype._reset=function(t){var r;if(t instanceof e.Shader)this.config=e.GLTFAsset.createGLTFExtensionsConfig(),r=this.config.materials[0]={extensions:{KHR_techniques_webgl:{technique:t.name,values:{}},paper:{renderQueue:t._renderQueue||this.renderQueue}}},this._shader=t;else{this.config=t,r=this.config.materials[0];var n=r.extensions.KHR_techniques_webgl.technique,i=paper.Asset.find(n);i||console.error("Cannot find shader.",n),this._shader=i||e.DefaultShaders.MESH_BASIC}this.renderQueue=r.extensions.paper.renderQueue,this._glTFTechnique=e.GLTFAsset.createTechnique(this._shader.config.extensions.KHR_techniques_webgl.techniques[0]);var a=r.extensions.KHR_techniques_webgl.values,o=this._glTFTechnique.uniforms;for(var s in a)if(s in o){var c=a[s];Array.isArray(c)?o[s].value=c.concat():o[s].value=c}r.extensions.paper.states?this._glTFTechnique.states=r.extensions.paper.states:this._shader._states&&(this._glTFTechnique.states=e.GLTFAsset.copyTechniqueStates(this._shader._states));var l=r.extensions.paper.defines;if(l&&l.length>0)for(var p=0,u=l;p<u.length;p++){var d=u[p];this.addDefine(d)}else if(this._shader._defines)for(var h=0,f=this._shader._defines;h<f.length;h++){var d=f[h];this.addDefine(d)}},n.prototype.dispose=function(e){if(!r.prototype.dispose.call(this))return!1;if(e)for(var t=0,n=this._textures;t<n.length;t++){var i=n[t];i.dispose()}return this._version++,this._cacheDefines="",this._defines.length=0,this._textures.length=0,this._glTFTechnique=null,this._shader=null,!0},n.prototype.copy=function(e){this.renderQueue=e.renderQueue;var t=e._glTFTechnique.uniforms,r=this._glTFTechnique.uniforms;for(var n in t){var i=t[n],a=Array.isArray(i.value)?i.value.concat():i.value;r[n]={type:i.type,semantic:i.semantic,value:a}}var o=e._glTFTechnique.states,s=this._glTFTechnique.states;if(o.enable&&(s.enable=o.enable.concat()),o.functions){s.functions||(s.functions={});for(var n in o.functions)Array.isArray(o.functions[n])?s.functions[n]=o.functions[n].concat():s.functions[n]=o.functions[n]}for(var c=0,l=e._defines;c<l.length;c++){var p=l[c];this.addDefine(p)}return this},n.prototype.clone=function(){return new n(this._shader).copy(this)},n.prototype.addDefine=function(e){return this._defines.indexOf(e)<0&&(this._defines.push(e),this._defines.sort(),this._version++),this},n.prototype.removeDefine=function(e){var t=this._defines.indexOf(e);return t>=0&&(this._defines.splice(t,1),this._version++),this},n.prototype.setBoolean=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?r.value!==t&&(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setInt=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?r.value!==t&&(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setIntv=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setFloat=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?r.value!==t&&(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setFloatv=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector2=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value[0]!==t.x||r.value[1]!==t.y)&&(r.value[0]=t.x,r.value[1]=t.y,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector2v=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector3=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value[0]!==t.x||r.value[1]!==t.y||r.value[2]!==t.z)&&(r.value[0]=t.x,r.value[1]=t.y,r.value[2]=t.z,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector3v=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector4=function(e,t){if("_MainTex_ST"===e&&this._glTFTechnique.uniforms.uvTransform)return e="uvTransform",console.warn("已废弃的键值_MainTex_ST，建议改为:uvTransform-Matrix3"),void(this._glTFTechnique.uniforms[e].value=[t.x,0,0,0,t.y,0,t.z,t.w,1]);if(("_MainColor"===e||"_Color"===e)&&this._glTFTechnique.uniforms.diffuse)return e="diffuse",console.warn("已废弃的键值_MainColor、_Color，建议改为:diffuse-Vector3"),void(this._glTFTechnique.uniforms[e].value=[t.x,t.y,t.z]);var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value[0]!==t.x||r.value[1]!==t.y||r.value[2]!==t.z||r.value[3]!==t.w)&&(r.value[0]=t.x,r.value[1]=t.y,r.value[2]=t.z,r.value[3]=t.w,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector4v=function(e,t){if("_MainTex_ST"===e&&this._glTFTechnique.uniforms.uvTransform)return e="uvTransform",console.warn("已废弃的键值_MainTex_ST，建议改为:uvTransform-Matrix3"),void(this._glTFTechnique.uniforms[e].value=[t[0],0,0,0,t[1],0,t[2],t[3],1]);if(("_MainColor"===e||"_Color"===e)&&this._glTFTechnique.uniforms.diffuse)return e="diffuse",console.warn("已废弃的键值_MainColor、_Color，建议改为:diffuse-Vector3"),void(this._glTFTechnique.uniforms[e].value=[t[0],t[1],t[2]]);var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setMatrix=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t.rawData,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setMatrixv=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.getTexture=function(e){e||(e="map");var t=this._glTFTechnique.uniforms[e];return t?t.value||null:null},n.prototype.setTexture=function(t,r){var n;null===t||t instanceof e.Texture?(n="map",r=t):n=t,r||(r=e.DefaultTextures.WHITE),"_MainTex"===n&&this._glTFTechnique.uniforms.map&&(n="map",console.warn("已废弃的键值_MainTex，建议改为:map"));var i=this._glTFTechnique.uniforms[n];if(void 0!==i){if(i.value){var a=this._textures.indexOf(i.value);a>-1&&this._textures.splice(a,1)}i.value!==r&&(i.value=r,this._version++)}else console.warn("尝试设置不存在的Uniform值:"+n);return r instanceof e.BaseRenderTarget&&this.addDefine("FLIP_V"),r&&this._textures.push(r),this},n.prototype.setColor=function(t,r){var n;return t.hasOwnProperty("r")?(n="diffuse",r=t):n=t,this.setVector3(n,e.Vector3.create(r.r,r.g,r.b).release()),this},n.prototype.setBlend=function(e){this._glTFTechnique.states||(this._glTFTechnique.states={enable:[],functions:{}});var t=this._glTFTechnique.states.enable,r=this._glTFTechnique.states.functions;switch(e){case 3:r.blendEquationSeparate=[32774,32774],r.blendFuncSeparate=[770,1,770,1];break;case 4:r.blendEquationSeparate=[32774,32774],r.blendFuncSeparate=[1,1,1,1];break;case 1:r.blendEquationSeparate=[32774,32774],r.blendFuncSeparate=[770,771,1,771];break;case 2:r.blendEquationSeparate=[32774,32774],r.blendFuncSeparate=[1,32772,1,32772];break;default:delete r.blendEquationSeparate,delete r.blendFuncSeparate}var n=t.indexOf(3042);return 0===e?n>=0&&t.splice(n,1):0>n&&t.push(3042),this},n.prototype.setCullFace=function(e,t,r){this._glTFTechnique.states||(this._glTFTechnique.states={enable:[],functions:{}});var n=this._glTFTechnique.states.enable,i=this._glTFTechnique.states.functions,a=n.indexOf(2884);return e&&t&&r?(i.frontFace=[t],i.cullFace=[r],0>a&&n.push(2884)):(delete i.frontFace,delete i.cullFace,a>=0&&n.splice(a,1)),this},n.prototype.setDepth=function(e,t){this._glTFTechnique.states||(this._glTFTechnique.states={enable:[],functions:{}});var r=this._glTFTechnique.states.enable,n=this._glTFTechnique.states.functions,i=r.indexOf(2929);return e?(0>i&&r.push(2929),n.depthFunc=[515]):i>=0&&r.splice(i,1),t?n.depthMask=[!0]:n.depthMask=[!1],this},n.prototype.setRenderQueue=function(e){return this.renderQueue=e,this},n.prototype.setOpacity=function(e){return this.setFloat("opacity",e)},n.prototype.setShader=function(t){return t||(console.warn("Set shader error."),t=e.DefaultShaders.MESH_BASIC),this._shader!==t?(this._reset(t),this):void 0},n.prototype.clearStates=function(){return this._glTFTechnique.states&&delete this._glTFTechnique.states,this},Object.defineProperty(n.prototype,"shaderDefine",{get:function(){this._cacheDefines="";for(var e=0,t=this._defines;e<t.length;e++){var r=t[e];this._cacheDefines+="#define "+r+" \n"}return this._cacheDefines},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"opacity",{get:function(){var e=this._glTFTechnique.uniforms.opacity;return e&&e.value===e.value?e.value:1},set:function(e){this.setFloat("opacity",e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"shader",{get:function(){return this._shader},set:function(t){t||(console.warn("Set shader error."),t=e.DefaultShaders.MESH_BASIC),this._shader!==t&&this._reset(t)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"glTFTechnique",{get:function(){return this._glTFTechnique},enumerable:!0,configurable:!0}),n}(e.GLTFAsset);e.Material=r,__reflect(r.prototype,"egret3d.Material")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e.cube={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"cube_vert",type:35633,uri:"varying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n	vWorldPosition = transformDirection( position, modelMatrix );\r\n\r\n	#include <begin_vertex>\r\n	#include <project_vertex>\r\n\r\n	gl_Position.z = gl_Position.w; // set z to camera.far\r\n\r\n}\r\n"},{name:"cube_frag",type:35632,uri:"uniform samplerCube tCube;\r\nuniform float tFlip;\r\nuniform float opacity;\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\nvoid main() {\r\n\r\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\r\n	gl_FragColor.a *= opacity;\r\n\r\n}\r\n"}],techniques:[{name:"cube",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},tCube:{type:35680},tFlip:{type:5126},opacity:{type:5126,value:1}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.depth={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"depth_vert",type:35633,uri:"#include <common>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n\r\n	#include <skinbase_vertex>\r\n\r\n	#ifdef USE_DISPLACEMENTMAP\r\n\r\n		#include <beginnormal_vertex>\r\n		#include <morphnormal_vertex>\r\n		#include <skinnormal_vertex>\r\n\r\n	#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n}\r\n"},{name:"depth_frag",type:35632,uri:"#if DEPTH_PACKING == 3200\r\n\r\n	uniform float opacity;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( 1.0 );\r\n\r\n	#if DEPTH_PACKING == 3200\r\n\r\n		diffuseColor.a = opacity;\r\n\r\n	#endif\r\n\r\n	#include <map_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n\r\n	#include <logdepthbuf_fragment>\r\n\r\n	#if DEPTH_PACKING == 3200\r\n\r\n		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\r\n\r\n	#elif DEPTH_PACKING == 3201\r\n\r\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\r\n\r\n	#endif\r\n\r\n}\r\n"}],techniques:[{name:"depth",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},"boneMatrices[0]":{type:35676,semantic:"JOINTMATRIX"},logDepthBufFC:{type:5126},opacity:{type:5126,value:1},map:{type:35678},alphaMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.distanceRGBA={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"distanceRGBA_vert",type:35633,uri:"#define DISTANCE\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n\r\n	#include <skinbase_vertex>\r\n\r\n	#ifdef USE_DISPLACEMENTMAP\r\n\r\n		#include <beginnormal_vertex>\r\n		#include <morphnormal_vertex>\r\n		#include <skinnormal_vertex>\r\n\r\n	#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <worldpos_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n	vWorldPosition = worldPosition.xyz;\r\n\r\n}\r\n"},{name:"distanceRGBA_frag",type:35632,uri:"#define DISTANCE\r\n\r\nuniform vec3 referencePosition;\r\nuniform float nearDistance;\r\nuniform float farDistance;\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main () {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( 1.0 );\r\n\r\n	#include <map_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n\r\n	float dist = length( vWorldPosition - referencePosition );\r\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\r\n	dist = saturate( dist ); // clamp to [ 0, 1 ]\r\n\r\n	gl_FragColor = packDepthToRGBA( dist );\r\n\r\n}\r\n"}],techniques:[{name:"distanceRGBA",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},"boneMatrices[0]":{type:35676,semantic:"JOINTMATRIX"},referencePosition:{type:35665,semantic:"_REFERENCEPOSITION"},nearDistance:{type:5126,semantic:"_NEARDICTANCE"},farDistance:{type:5126,semantic:"_FARDISTANCE"},map:{type:35678},alphaMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.equirect={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"equirect_vert",type:35633,uri:"varying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n	vWorldPosition = transformDirection( position, modelMatrix );\r\n\r\n	#include <begin_vertex>\r\n	#include <project_vertex>\r\n\r\n}\r\n"},{name:"equirect_frag",type:35632,uri:"uniform sampler2D tEquirect;\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n	vec3 direction = normalize( vWorldPosition );\r\n\r\n	vec2 sampleUV;\r\n\r\n	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\r\n\r\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\r\n\r\n	gl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n}\r\n"}],techniques:[{name:"equirect",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},tEquirect:{type:35678}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.linebasic={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"linebasic_vert",type:35633,uri:"#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\nuniform float linewidth;\r\nuniform vec2 resolution;\r\nattribute vec3 instanceStart;\r\nattribute vec3 instanceEnd;\r\nattribute vec3 instanceColorStart;\r\nattribute vec3 instanceColorEnd;\r\nvarying vec2 vUv;\r\n#ifdef USE_DASH\r\n	uniform float dashScale;\r\n	attribute float instanceDistanceStart;\r\n	attribute float instanceDistanceEnd;\r\n	varying float vLineDistance;\r\n#endif\r\nvoid trimSegment( const in vec4 start, inout vec4 end ) {\r\n	// trim end segment so it terminates between the camera plane and the near plane\r\n	// conservative estimate of the near plane\r\n	float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\r\n	float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\r\n	float nearEstimate = - 0.5 * b / a;\r\n	float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\r\n	end.xyz = mix( start.xyz, end.xyz, alpha );\r\n}\r\nvoid main() {\r\n	#ifdef USE_COLOR\r\n		vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\r\n	#endif\r\n	#ifdef USE_DASH\r\n		vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\r\n	#endif\r\n	float aspect = resolution.x / resolution.y;\r\n	vUv = uv;\r\n	// camera space\r\n	vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\r\n	vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\r\n	// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\r\n	// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\r\n	// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\r\n	// perhaps there is a more elegant solution -- WestLangley\r\n	bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\r\n	if ( perspective ) {\r\n		if ( start.z < 0.0 && end.z >= 0.0 ) {\r\n			trimSegment( start, end );\r\n		} else if ( end.z < 0.0 && start.z >= 0.0 ) {\r\n			trimSegment( end, start );\r\n		}\r\n	}\r\n	// clip space\r\n	vec4 clipStart = projectionMatrix * start;\r\n	vec4 clipEnd = projectionMatrix * end;\r\n	// ndc space\r\n	vec2 ndcStart = clipStart.xy / clipStart.w;\r\n	vec2 ndcEnd = clipEnd.xy / clipEnd.w;\r\n	// direction\r\n	vec2 dir = ndcEnd - ndcStart;\r\n	// account for clip-space aspect ratio\r\n	dir.x *= aspect;\r\n	dir = normalize( dir );\r\n	// perpendicular to dir\r\n	vec2 offset = vec2( dir.y, - dir.x );\r\n	// undo aspect ratio adjustment\r\n	dir.x /= aspect;\r\n	offset.x /= aspect;\r\n	// sign flip\r\n	if ( position.x < 0.0 ) offset *= - 1.0;\r\n	// endcaps\r\n	if ( position.y < 0.0 ) {\r\n		offset += - dir;\r\n	} else if ( position.y > 1.0 ) {\r\n		offset += dir;\r\n	}\r\n	// adjust for linewidth\r\n	offset *= linewidth;\r\n	// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\r\n	offset /= resolution.y;\r\n	// select end\r\n	vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\r\n	// back to clip space\r\n	offset *= clip.w;\r\n	clip.xy += offset;\r\n	gl_Position = clip;\r\n	vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <fog_vertex>\r\n}"},{name:"linebasic_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#ifdef USE_DASH\r\n\r\n	uniform float dashSize;\r\n	uniform float gapSize;\r\n\r\n#endif\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	#ifdef USE_DASH\r\n\r\n		if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\r\n\r\n		if ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\r\n\r\n	#endif\r\n\r\n	if ( abs( vUv.y ) > 1.0 ) {\r\n\r\n		float a = vUv.x;\r\n		float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\r\n		float len2 = a * a + b * b;\r\n\r\n		if ( len2 > 1.0 ) discard;\r\n\r\n	}\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <color_fragment>\r\n\r\n	gl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\r\n\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}"}],techniques:[{name:"linebasic",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"},instanceStart:{semantic:"_INSTANCE_START"},instanceEnd:{semantic:"_INSTANCE_END"},instanceColorStart:{semantic:"_INSTANCE_COLOR_START"},instanceColorEnd:{semantic:"_INSTANCE_COLOR_END"},instanceDistanceStart:{semantic:"_INSTANCE_DISTANCE_START"},instanceDistanceEnd:{semantic:"_INSTANCE_DISTANCE_END"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},logDepthBufFC:{type:5126},linewidth:{type:5126,value:1},resolution:{type:35664,semantic:"_RESOLUTION"},dashScale:{type:5126,value:1},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},dashSize:{type:5126,value:1},gapSize:{type:5126,value:1},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.linedashed={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"linedashed_vert",type:35633,uri:"uniform float scale;\r\nattribute float lineDistance;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <color_vertex>\r\n\r\n	vLineDistance = scale * lineDistance;\r\n\r\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n	gl_Position = projectionMatrix * mvPosition;\r\n\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"linedashed_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform float dashSize;\r\nuniform float totalSize;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\r\n\r\n		discard;\r\n\r\n	}\r\n\r\n	vec3 outgoingLight = vec3( 0.0 );\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <color_fragment>\r\n\r\n	outgoingLight = diffuseColor.rgb; // simple shader\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"linedashed",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"},lineDistance:{semantic:"_INSTANCE_DISTANCE"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},scale:{type:5126,value:1},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},dashSize:{type:5126,value:1},totalSize:{type:5126,value:1},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.meshbasic={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"meshbasic_vert",type:35633,uri:"#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n	#include <uv2_vertex>\r\n	#include <color_vertex>\r\n	#include <skinbase_vertex>\r\n\r\n	#ifdef USE_ENVMAP\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n	#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n\r\n	#include <worldpos_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <envmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"meshbasic_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <color_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n	#include <specularmap_fragment>\r\n\r\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\r\n	// accumulation (baked indirect lighting only)\r\n	#ifdef USE_LIGHTMAP\r\n		   lowp vec4 lightmapTex = texture2D(lightMap, vUv2);\r\n		   highp float power =pow( 2.0 ,lightmapTex.a * 255.0 - 128.0);\r\n		   reflectedLight.indirectDiffuse +=lightmapTex.rgb * power * lightMapIntensity * 1.2;//EGRET\r\n		// reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\r\n\r\n	#else\r\n\r\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\r\n\r\n	#endif\r\n\r\n	// modulation\r\n	#include <aomap_fragment>\r\n\r\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\r\n\r\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\r\n\r\n	#include <envmap_fragment>\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <tonemapping_fragment>\r\n	// #include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"meshbasic",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"},uv2:{semantic:"TEXCOORD_1"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},refractionRatio:{type:5126,value:[]},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},"boneMatrices[0]":{type:35676,semantic:"JOINTMATRIX"},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},map:{type:35678},alphaMap:{type:35678},aoMap:{type:35678},aoMapIntensity:{type:5126,value:1},lightMap:{type:35678,semantic:"_LIGHTMAPTEX"},lightMapIntensity:{type:5126,semantic:"_LIGHTMAPINTENSITY"},reflectivity:{type:5126,value:[]},envMapIntensity:{type:5126,value:1},envMap:{type:35678},flipEnvMap:{type:5126,value:1},maxMipLevel:{type:5124,value:[]},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},specularMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.meshlambert={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"meshlambert_vert",type:35633,uri:"#define LAMBERT\r\nvarying vec3 vLightFront;\r\n\r\n#ifdef DOUBLE_SIDED\r\n\r\n	varying vec3 vLightBack;\r\n\r\n#endif\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n	#include <uv2_vertex>\r\n	#include <color_vertex>\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinbase_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n	#include <worldpos_vertex>\r\n	#include <envmap_vertex>\r\n	#include <lights_lambert_vertex>\r\n	#include <shadowmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"meshlambert_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float opacity;\r\n\r\nvarying vec3 vLightFront;\r\n\r\n#ifdef DOUBLE_SIDED\r\n\r\n	varying vec3 vLightBack;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <fog_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n	vec3 totalEmissiveRadiance = emissive;\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <color_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n	#include <specularmap_fragment>\r\n	#include <emissivemap_fragment>\r\n\r\n	// accumulation\r\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\r\n\r\n	#include <lightmap_fragment>\r\n\r\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\r\n\r\n	#ifdef DOUBLE_SIDED\r\n\r\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\r\n\r\n	#else\r\n\r\n		reflectedLight.directDiffuse = vLightFront;\r\n\r\n	#endif\r\n\r\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\r\n\r\n	// modulation\r\n	#include <aomap_fragment>\r\n\r\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\r\n\r\n	#include <envmap_fragment>\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <tonemapping_fragment>\r\n	// #include <encodings_fragment>\r\n	#include <fog_fragment>\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <dithering_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"meshlambert",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"},uv2:{semantic:"TEXCOORD_1"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},refractionRatio:{type:5126,value:[]},ambientLightColor:{type:35665,semantic:"_AMBIENTLIGHTCOLOR"},"directionalLights[0]":{type:5126,semantic:"_DIRECTLIGHTS"},"pointLights[0]":{type:5126,semantic:"_POINTLIGHTS"},"spotLights[0]":{type:5126,semantic:"_SPOTLIGHTS"},ltc_1:{type:35678,semantic:"Unknown"},ltc_2:{type:35678,semantic:"Unknown"},"rectAreaLights[0]":{type:-1,semantic:"Unknown"},"hemisphereLights[0]":{type:-1,semantic:"Unknown"},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},"boneMatrices[0]":{type:35676,semantic:"JOINTMATRIX"},"directionalShadowMatrix[0]":{type:35676,semantic:"_DIRECTIONSHADOWMAT"},"spotShadowMatrix[0]":{type:35676,semantic:"_SPOTSHADOWMAT"},"pointShadowMatrix[0]":{type:35676,semantic:"_POINTSHADOWMAT"},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},emissive:{type:35665,value:[0,0,0]},opacity:{type:5126,value:1},map:{type:35678},alphaMap:{type:35678},aoMap:{type:35678},aoMapIntensity:{type:5126,value:1},lightMap:{type:35678,semantic:"_LIGHTMAPTEX"},lightMapIntensity:{type:5126,semantic:"_LIGHTMAPINTENSITY"},emissiveMap:{type:35678},reflectivity:{type:5126,value:[]},envMapIntensity:{type:5126,value:1},envMap:{type:35678},flipEnvMap:{type:5126,value:1},maxMipLevel:{type:5124,value:[]},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},"directionalShadowMap[0]":{type:35678,semantic:"_DIRECTIONSHADOWMAP"},"spotShadowMap[0]":{type:35678,semantic:"_SPOTSHADOWMAP"},"pointShadowMap[0]":{type:35678,semantic:"_POINTSHADOWMAT"},specularMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.meshphong={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"meshphong_vert",type:35633,uri:"#define PHONG\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n	#include <uv2_vertex>\r\n	#include <color_vertex>\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinbase_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n	vNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n	vViewPosition = - mvPosition.xyz;\r\n\r\n	#include <worldpos_vertex>\r\n	#include <envmap_vertex>\r\n	#include <shadowmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"meshphong_frag",type:35632,uri:"#define PHONG\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <gradientmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n	vec3 totalEmissiveRadiance = emissive;\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <color_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n	#include <specularmap_fragment>\r\n	#include <normal_fragment_begin>\r\n	#include <normal_fragment_maps>\r\n	#include <emissivemap_fragment>\r\n\r\n	// accumulation\r\n	#include <lights_phong_fragment>\r\n	#include <lights_fragment_begin>\r\n	#include <lights_fragment_maps>\r\n	#include <lights_fragment_end>\r\n\r\n	// modulation\r\n	#include <aomap_fragment>\r\n\r\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n	#include <envmap_fragment>\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <dithering_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"meshphong",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"},uv2:{semantic:"TEXCOORD_1"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},refractionRatio:{type:5126,value:[]},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},"boneMatrices[0]":{type:35676,semantic:"JOINTMATRIX"},"directionalShadowMatrix[0]":{type:35676,semantic:"_DIRECTIONSHADOWMAT"},"spotShadowMatrix[0]":{type:35676,semantic:"_SPOTSHADOWMAT"},"pointShadowMatrix[0]":{type:35676,semantic:"_POINTSHADOWMAT"},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},emissive:{type:35665,value:[0,0,0]},specular:{type:35665,value:[1,1,1]},shininess:{type:5126,value:1},opacity:{type:5126,value:1},map:{type:35678},alphaMap:{type:35678},aoMap:{type:35678},aoMapIntensity:{type:5126,value:1},lightMap:{type:35678,semantic:"_LIGHTMAPTEX"},lightMapIntensity:{type:5126,semantic:"_LIGHTMAPINTENSITY"},emissiveMap:{type:35678},reflectivity:{type:5126,value:[]},envMapIntensity:{type:5126,value:1},envMap:{type:35678},flipEnvMap:{type:5126,value:1},maxMipLevel:{type:5124,value:[]},gradientMap:{type:35678},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},ambientLightColor:{type:35665,semantic:"_AMBIENTLIGHTCOLOR"},"directionalLights[0]":{type:5126,semantic:"_DIRECTLIGHTS"},"pointLights[0]":{type:5126,semantic:"_POINTLIGHTS"},"spotLights[0]":{type:5126,semantic:"_SPOTLIGHTS"},ltc_1:{type:35678,semantic:"Unknown"},ltc_2:{type:35678,semantic:"Unknown"},"rectAreaLights[0]":{type:-1,semantic:"Unknown"},"hemisphereLights[0]":{type:-1,semantic:"Unknown"},"directionalShadowMap[0]":{type:35678,semantic:"_DIRECTIONSHADOWMAP"},"spotShadowMap[0]":{type:35678,semantic:"_SPOTSHADOWMAP"},"pointShadowMap[0]":{type:35678,semantic:"_POINTSHADOWMAT"},bumpMap:{type:35678},bumpScale:{type:5126},normalMap:{type:35678},normalScale:{type:35664},specularMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.meshphysical={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"meshphysical_vert",type:35633,uri:"#define PHYSICAL\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n	#include <uv2_vertex>\r\n	#include <color_vertex>\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinbase_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n	vNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n	vViewPosition = - mvPosition.xyz;\r\n\r\n	#include <worldpos_vertex>\r\n	#include <shadowmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"meshphysical_frag",type:35632,uri:"#define PHYSICAL\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float roughness;\r\nuniform float metalness;\r\nuniform float opacity;\r\n\r\n#ifndef STANDARD\r\n	uniform float clearCoat;\r\n	uniform float clearCoatRoughness;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <bsdfs>\r\n#include <cube_uv_reflection_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <envmap_physical_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <lights_pars_begin>\r\n#include <lights_physical_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <roughnessmap_pars_fragment>\r\n#include <metalnessmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n	vec3 totalEmissiveRadiance = emissive;\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <color_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n	#include <roughnessmap_fragment>\r\n	#include <metalnessmap_fragment>\r\n	#include <normal_fragment_begin>\r\n	#include <normal_fragment_maps>\r\n	#include <emissivemap_fragment>\r\n\r\n	// accumulation\r\n	#include <lights_physical_fragment>\r\n	#include <lights_fragment_begin>\r\n	#include <lights_fragment_maps>\r\n	#include <lights_fragment_end>\r\n\r\n	// modulation\r\n	#include <aomap_fragment>\r\n\r\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <dithering_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"meshphysical",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"},uv2:{semantic:"TEXCOORD_1"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},"boneMatrices[0]":{type:35676,semantic:"JOINTMATRIX"},"directionalShadowMatrix[0]":{type:35676,semantic:"_DIRECTIONSHADOWMAT"},"spotShadowMatrix[0]":{type:35676,semantic:"_SPOTSHADOWMAT"},"pointShadowMatrix[0]":{type:35676,semantic:"_POINTSHADOWMAT"},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},emissive:{type:35665,value:[0,0,0]},roughness:{type:5126},metalness:{type:5126},opacity:{type:5126,value:1},clearCoat:{type:5126},clearCoatRoughness:{type:5126},map:{type:35678},alphaMap:{type:35678},aoMap:{type:35678},aoMapIntensity:{type:5126,value:1},lightMap:{type:35678,semantic:"_LIGHTMAPTEX"},lightMapIntensity:{type:5126,semantic:"_LIGHTMAPINTENSITY"},emissiveMap:{type:35678},reflectivity:{type:5126,value:[]},envMapIntensity:{type:5126,value:1},envMap:{type:35678},flipEnvMap:{type:5126,value:1},maxMipLevel:{type:5124,value:[]},refractionRatio:{type:5126,value:[]},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},ambientLightColor:{type:35665,semantic:"_AMBIENTLIGHTCOLOR"},"directionalLights[0]":{type:5126,semantic:"_DIRECTLIGHTS"},"pointLights[0]":{type:5126,semantic:"_POINTLIGHTS"},"spotLights[0]":{type:5126,semantic:"_SPOTLIGHTS"},ltc_1:{type:35678,semantic:"Unknown"},ltc_2:{type:35678,semantic:"Unknown"},"rectAreaLights[0]":{type:-1,semantic:"Unknown"},"hemisphereLights[0]":{type:-1,semantic:"Unknown"},"directionalShadowMap[0]":{type:35678,semantic:"_DIRECTIONSHADOWMAP"},"spotShadowMap[0]":{type:35678,semantic:"_SPOTSHADOWMAP"},"pointShadowMap[0]":{type:35678,semantic:"_POINTSHADOWMAT"},bumpMap:{type:35678},bumpScale:{type:5126},normalMap:{type:35678},normalScale:{type:35664},roughnessMap:{type:35678},metalnessMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.normal={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"normal_vert",type:35633,uri:"#define NORMAL\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n	varying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinbase_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n	vNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n	vViewPosition = - mvPosition.xyz;\r\n\r\n#endif\r\n\r\n}\r\n"},{name:"normal_frag",type:35632,uri:"#define NORMAL\r\n\r\nuniform float opacity;\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n	varying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <normal_fragment_begin>\r\n	#include <normal_fragment_maps>\r\n\r\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\r\n\r\n}\r\n"}],techniques:[{name:"normal",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},"boneMatrices[0]":{type:35676,semantic:"JOINTMATRIX"},logDepthBufFC:{type:5126},opacity:{type:5126,value:1},bumpMap:{type:35678},bumpScale:{type:5126},normalMap:{type:35678},normalScale:{type:35664}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.particle={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"particle_vert",type:35633,uri:"//inspired by layaair:https://github.com/layabox/layaair/blob/master/src/d3/src/laya/d3/shader/files/ParticleShuriKen.vs\r\n#include <common>\r\n#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\r\n	attribute vec2 corner;\r\n#endif\r\nattribute vec3 startPosition;\r\nattribute vec3 startVelocity;\r\nattribute vec4 startColor;\r\nattribute vec3 startSize;\r\nattribute vec3 startRotation;\r\nattribute vec2 time;\r\n#if defined(COLOROGRADIENT)||defined(COLORTWOGRADIENTS)||defined(SIZETWOCURVES)||defined(SIZETWOCURVESSEPERATE)||defined(ROTATIONTWOCONSTANTS)||defined(ROTATIONTWOCURVES)\r\n  attribute vec4 random0;\r\n#endif\r\n#if defined(TEXTURESHEETANIMATIONTWOCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\r\n  attribute vec4 random1;\r\n#endif\r\nattribute vec3 startWorldPosition;\r\nattribute vec4 startWorldRotation;\r\n\r\n#include <particle_common>\r\n\r\nvoid main()\r\n{\r\n	float age = u_currentTime - time.y;\r\n	float t = age/time.x;\r\n	if(t>1.0){ 			\r\n			v_discard=1.0;\r\n			return;\r\n  }\r\n	  \r\n	#include <particle_affector>\r\n	gl_Position=viewProjectionMatrix*vec4(center,1.0);\r\n	v_color = computeColor(startColor, t);\r\n	v_texcoord =computeUV(uv, t);\r\n	v_discard=0.0;\r\n}\r\n\r\n"},{name:"particle_frag",type:35632,uri:"//inspired by layaair:https://github.com/layabox/layaair/blob/master/src/d3/src/laya/d3/shader/files/ParticleShuriKen.ps\r\n#include <common>\r\nuniform sampler2D map;\r\nuniform vec3 diffuse;\r\nuniform float opacity;\r\nvarying float v_discard;\r\nvarying vec4 v_color;\r\nvarying vec2 v_texcoord;\r\n\r\n#ifdef RENDERMODE_MESH\r\n	varying vec4 v_mesh_color;\r\n#endif\r\n\r\nvoid main()\r\n{	\r\n	#ifdef RENDERMODE_MESH\r\n		gl_FragColor=v_mesh_color;\r\n	#else\r\n		gl_FragColor=vec4(1.0);	\r\n	#endif\r\n\r\n	if(v_discard!=0.0)\r\n		discard;\r\n	gl_FragColor*=texture2D(map,v_texcoord)*vec4(diffuse, opacity)*v_color*2.0;\r\n}"}],techniques:[{name:"particle",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"},corner:{semantic:"_CORNER"},startPosition:{semantic:"_START_POSITION"},startVelocity:{semantic:"_START_VELOCITY"},startColor:{semantic:"_START_COLOR"},startSize:{semantic:"_START_SIZE"},startRotation:{semantic:"_START_ROTATION"},time:{semantic:"_TIME"},random0:{semantic:"_RANDOM0"},random1:{semantic:"_RANDOM1"},startWorldPosition:{semantic:"_WORLD_POSITION"},startWorldRotation:{semantic:"_WORLD_ROTATION"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},u_currentTime:{type:5126},u_gravity:{type:35665},u_worldPosition:{type:35665,value:[0,0,0]},u_worldRotation:{type:35666,value:[0,0,0,1]},u_startRotation3D:{type:35670},u_scalingMode:{type:5124},u_positionScale:{type:35665},u_sizeScale:{type:35665},viewProjectionMatrix:{type:35676,semantic:"_VIEWPROJECTION"},cameraForward:{type:35665,semantic:"_CAMERA_FORWARD"},cameraUp:{type:35665,semantic:"CAMERA_UP"},u_lengthScale:{type:5126},u_speeaScale:{type:5126},u_simulationSpace:{type:5124},u_spaceType:{type:5124},u_velocityConst:{type:35665},"u_velocityCurveX[0]":{type:35664},"u_velocityCurveY[0]":{type:35664},"u_velocityCurveZ[0]":{type:35664},u_velocityConstMax:{type:35665},"u_velocityCurveMaxX[0]":{type:35664},"u_velocityCurveMaxY[0]":{type:35664},"u_velocityCurveMaxZ[0]":{type:35664},"u_colorGradient[0]":{type:35666},"u_alphaGradient[0]":{type:35664},"u_colorGradientMax[0]":{type:35666},"u_alphaGradientMax[0]":{type:35664},"u_sizeCurve[0]":{type:35664},"u_sizeCurveMax[0]":{type:35664},"u_sizeCurveX[0]":{type:35664},"u_sizeCurveY[0]":{type:35664},"u_sizeCurveZ[0]":{type:35664},"u_sizeCurveMaxX[0]":{type:35664},"u_sizeCurveMaxY[0]":{type:35664},"u_sizeCurveMaxZ[0]":{type:35664},u_rotationConst:{type:5126},u_rotationConstMax:{type:5126},"u_rotationCurve[0]":{type:35664},"u_rotationCurveMax[0]":{type:35664},u_rotationConstSeprarate:{type:35665},u_rotationConstMaxSeprarate:{type:35665},"u_rotationCurveX[0]":{type:35664},"u_rotationCurveY[0]":{type:35664},"u_rotationCurveZ[0]":{type:35664},"u_rotationCurveW[0]":{type:35664},"u_rotationCurveMaxX[0]":{type:35664},"u_rotationCurveMaxY[0]":{type:35664},"u_rotationCurveMaxZ[0]":{type:35664},"u_rotationCurveMaxW[0]":{type:35664},u_cycles:{type:5126},u_subUV:{type:35666},"u_uvCurve[0]":{type:35664},"u_uvCurveMax[0]":{type:35664},map:{type:35678},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.points={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"points_vert",type:35633,uri:"uniform float size;\r\nuniform float scale;\r\n\r\n#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <color_vertex>\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <project_vertex>\r\n\r\n	gl_PointSize = size;\r\n\r\n	#ifdef USE_SIZEATTENUATION\r\n\r\n		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\r\n\r\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\r\n\r\n	#endif\r\n\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <worldpos_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"points_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <map_particle_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec3 outgoingLight = vec3( 0.0 );\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_particle_fragment>\r\n	#include <color_fragment>\r\n	#include <alphatest_fragment>\r\n\r\n	outgoingLight = diffuseColor.rgb;\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"points",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},size:{type:5126},scale:{type:5126,value:1},"morphTargetInfluences[0]":{type:5126},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},map:{type:35678},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.shadow={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"shadow_vert",type:35633,uri:"\r\n#include <fog_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <begin_vertex>\r\n	#include <project_vertex>\r\n	#include <worldpos_vertex>\r\n	#include <shadowmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"shadow_frag",type:35632,uri:"uniform vec3 color;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\r\n\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"shadow",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},"directionalShadowMatrix[0]":{type:35676,semantic:"_DIRECTIONSHADOWMAT"},"spotShadowMatrix[0]":{type:35676,semantic:"_SPOTSHADOWMAT"},"pointShadowMatrix[0]":{type:35676,semantic:"_POINTSHADOWMAT"},color:{type:35665},opacity:{type:5126,value:1},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},ambientLightColor:{type:35665,semantic:"_AMBIENTLIGHTCOLOR"},"directionalLights[0]":{type:5126,semantic:"_DIRECTLIGHTS"},"pointLights[0]":{type:5126,semantic:"_POINTLIGHTS"},"spotLights[0]":{type:5126,semantic:"_SPOTLIGHTS"},ltc_1:{type:35678,semantic:"Unknown"},ltc_2:{type:35678,semantic:"Unknown"},"rectAreaLights[0]":{type:-1,semantic:"Unknown"},"hemisphereLights[0]":{type:-1,semantic:"Unknown"},"directionalShadowMap[0]":{type:35678,semantic:"_DIRECTIONSHADOWMAP"},"spotShadowMap[0]":{type:35678,semantic:"_SPOTSHADOWMAP"},"pointShadowMap[0]":{type:35678,semantic:"_POINTSHADOWMAT"}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.sprite={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"sprite_vert",type:35633,uri:"uniform float rotation;\r\nuniform vec2 center;\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n\r\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\r\n	vec2 scale;\r\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\r\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\r\n\r\n	#ifndef USE_SIZEATTENUATION\r\n\r\n		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\r\n\r\n		if ( isPerspective ) scale *= - mvPosition.z;\r\n\r\n	#endif\r\n\r\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\r\n\r\n	vec2 rotatedPosition;\r\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\r\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\r\n\r\n	mvPosition.xy += rotatedPosition;\r\n\r\n	gl_Position = projectionMatrix * mvPosition;\r\n\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"sprite_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec3 outgoingLight = vec3( 0.0 );\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <alphatest_fragment>\r\n\r\n	outgoingLight = diffuseColor.rgb;\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"sprite",attributes:{position:{semantic:"POSITION"},normal:{semantic:"NORMAL"},uv:{semantic:"TEXCOORD_0"},color:{semantic:"COLOR_0"},morphTarget0:{semantic:"WEIGHTS_0"},morphTarget1:{semantic:"WEIGHTS_1"},morphTarget2:{semantic:"WEIGHTS_2"},morphTarget3:{semantic:"WEIGHTS_3"},morphNormal0:{semantic:"MORPHNORMAL_0"},morphNormal1:{semantic:"MORPHNORMAL_1"},morphNormal2:{semantic:"MORPHNORMAL_2"},morphNormal3:{semantic:"MORPHNORMAL_3"},morphTarget4:{semantic:"WEIGHTS_4"},morphTarget5:{semantic:"WEIGHTS_5"},morphTarget6:{semantic:"WEIGHTS_6"},morphTarget7:{semantic:"WEIGHTS_7"},skinIndex:{semantic:"JOINTS_0"},skinWeight:{semantic:"WEIGHTS_0"}},uniforms:{modelMatrix:{type:35676,semantic:"MODEL"},modelViewMatrix:{type:35676,semantic:"MODELVIEW"},projectionMatrix:{type:35676,semantic:"PROJECTION"},viewMatrix:{type:35676,semantic:"VIEW"},normalMatrix:{type:35675,semantic:"MODELVIEWINVERSE"},cameraPosition:{type:35665,semantic:"_CAMERA_POS"},rotation:{type:5126},center:{type:35664},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},map:{type:35678},fogColor:{type:35665,semantic:"_FOG_COLOR"},fogDensity:{type:5126,semantic:"_FOG_DENSITY"},fogNear:{type:5126,semantic:"_FOG_NEAR"},fogFar:{type:5126,semantic:"_FOG_FAR"},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]}
}(t=e.ShaderLib||(e.ShaderLib={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",e.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n uniform sampler2D alphaMap;\n\n#endif\n",e.alphatest_fragment="#ifdef ALPHATEST\n\n if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",e.aomap_fragment="#ifdef USE_AOMAP\n\n // reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n reflectedLight.indirectDiffuse *= ambientOcclusion;\n\n #if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n  float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n  reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n #endif\n\n#endif\n",e.aomap_pars_fragment="#ifdef USE_AOMAP\n\n uniform sampler2D aoMap;\n uniform float aoMapIntensity;\n\n#endif",e.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",e.begin_vertex="\nvec3 transformed = vec3( position );\n",e.bsdfs='float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n if( decayExponent > 0.0 ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n  // based upon Frostbite 3 Moving to Physically-based Rendering\n  // page 32, equation 26: E[window1]\n  // https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n  // this is intended to be used on spot and point lights who are represented as luminous intensity\n  // but who must be converted to luminous irradiance for surface lighting calculation\n  float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n  float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n  return distanceFalloff * maxDistanceCutoffFactor;\n\n#else\n\n  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n#endif\n\n }\n\n return 1.0;\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n return RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n // Original approximation by Christophe Schlick \'94\n // float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n // Optimized variant (presented by Epic at SIGGRAPH \'13)\n // https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n return ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n // geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n // also see #12151\n\n float a2 = pow2( alpha );\n\n float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n return 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n float a2 = pow2( alpha );\n\n // dotNL and dotNV are explicitly swapped. This is not a mistake.\n float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n return 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n float a2 = pow2( alpha );\n\n float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n return RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n float alpha = pow2( roughness ); // UE4\'s roughness\n\n vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n float dotNH = saturate( dot( geometry.normal, halfDir ) );\n float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n vec3 F = F_Schlick( specularColor, dotLH );\n\n float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n float D = D_GGX( alpha, dotNH );\n\n return F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n const float LUT_SIZE  = 64.0;\n const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n const float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n float dotNV = saturate( dot( N, V ) );\n\n // texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n uv = uv * LUT_SCALE + LUT_BIAS;\n\n return uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n // Real-Time Area Lighting: a Journey from Research to Production (p.102)\n // An approximation of the form factor of a horizon-clipped rectangle.\n\n float l = length( f );\n\n return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n float x = dot( v1, v2 );\n\n float y = abs( x );\n\n // rational polynomial approximation to theta / sin( theta ) / 2PI\n float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n float b = 3.4175940 + ( 4.1616724 + y ) * y;\n float v = a / b;\n\n float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n return cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n // bail if point is on back side of plane of light\n // assumes ccw winding order of light vertices\n vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n vec3 lightNormal = cross( v1, v2 );\n\n if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n // construct orthonormal basis around N\n vec3 T1, T2;\n T1 = normalize( V - N * dot( V, N ) );\n T2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n // compute transform\n mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n // transform rect\n vec3 coords[ 4 ];\n coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n // project rect onto sphere\n coords[ 0 ] = normalize( coords[ 0 ] );\n coords[ 1 ] = normalize( coords[ 1 ] );\n coords[ 2 ] = normalize( coords[ 2 ] );\n coords[ 3 ] = normalize( coords[ 3 ] );\n\n // calculate vector form factor\n vec3 vectorFormFactor = vec3( 0.0 );\n vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n // adjust for horizon clipping\n float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n // alternate method of adjusting for horizon clipping (see referece)\n // refactoring required\n float len = length( vectorFormFactor );\n float z = vectorFormFactor.z / len;\n\n const float LUT_SIZE  = 64.0;\n const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n const float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n // tabulated horizon-clipped sphere, apparently...\n vec2 uv = vec2( z * 0.5 + 0.5, len );\n uv = uv * LUT_SCALE + LUT_BIAS;\n\n float scale = texture2D( ltc_2, uv ).w;\n\n float result = len * scale;\n*/\n\n return vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n vec4 r = roughness * c0 + c1;\n\n float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n return specularColor * AB.x + AB.y;\n\n} // validated\n\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n // geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n return 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n //float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n //float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n float dotNH = saturate( dot( geometry.normal, halfDir ) );\n float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n vec3 F = F_Schlick( specularColor, dotLH );\n\n float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n float D = D_BlinnPhong( shininess, dotNH );\n\n return F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n',e.bumpMap_pars_frag="#ifdef USE_BUMPMAP\n\n uniform sampler2D bumpMap;\n uniform float bumpScale;\n\n // Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n // http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n vec2 dHdxy_fwd(vec2 uv) {\n\n  vec2 dSTdx = dFdx( uv );\n  vec2 dSTdy = dFdy( uv );\n\n  float Hll = bumpScale * texture2D( bumpMap, uv ).x;\n  float dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\n  float dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\n\n  return vec2( dBx, dBy );\n\n }\n\n vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\n\n  vec3 vSigmaX = dFdx( surf_pos );\n  vec3 vSigmaY = dFdy( surf_pos );\n  vec3 vN = surf_norm;  // normalized\n\n  vec3 R1 = cross( vSigmaY, vN );\n  vec3 R2 = cross( vN, vSigmaX );\n\n  float fDet = dot( vSigmaX, R1 );\n\n  vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n  return normalize( abs( fDet ) * surf_norm - vGrad );\n\n }\n\n#endif\n",e.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n uniform sampler2D bumpMap;\n uniform float bumpScale;\n\n // Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n // http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n vec2 dHdxy_fwd() {\n\n  vec2 dSTdx = dFdx( vUv );\n  vec2 dSTdy = dFdy( vUv );\n\n  float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n  float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n  float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n  return vec2( dBx, dBy );\n\n }\n\n vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n  // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n  vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n  vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n  vec3 vN = surf_norm;  // normalized\n\n  vec3 R1 = cross( vSigmaY, vN );\n  vec3 R2 = cross( vN, vSigmaX );\n\n  float fDet = dot( vSigmaX, R1 );\n\n  fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n  vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n  return normalize( abs( fDet ) * surf_norm - vGrad );\n\n }\n\n#endif\n",e.clipping_planes_fragment="#if defined(NUM_CLIPPING_PLANES) && NUM_CLIPPING_PLANES > 0\n\n vec4 plane;\n\n // #pragma unroll_loop\n for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n  plane = clippingPlanes[ i ];\n  if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\n }\n\n #if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n  bool clipped = true;\n\n  // #pragma unroll_loop\n  for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n   plane = clippingPlanes[ i ];\n   clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\n  }\n\n  if ( clipped ) discard;\n\n #endif\n\n#endif\n",e.clipping_planes_pars_fragment="#if defined(NUM_CLIPPING_PLANES) && NUM_CLIPPING_PLANES > 0\n\n #if ! defined( PHYSICAL ) && ! defined( PHONG )\n  varying vec3 vViewPosition;\n #endif\n\n uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n",e.clipping_planes_pars_vertex="#if defined(NUM_CLIPPING_PLANES) && NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n varying vec3 vViewPosition;\n#endif\n",e.clipping_planes_vertex="#if defined(NUM_CLIPPING_PLANES) && NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n vViewPosition = - mvPosition.xyz;\n#endif\n\n",e.color_fragment="#ifdef USE_COLOR\n\n diffuseColor.rgb *= vColor;\n\n#endif",e.color_pars_fragment="#ifdef USE_COLOR\n\n varying vec3 vColor;\n\n#endif\n",e.color_pars_vertex="#ifdef USE_COLOR\n\n varying vec3 vColor;\n\n#endif",e.color_vertex="#ifdef USE_COLOR\n\n vColor.xyz = color.xyz;\n\n#endif",e.common="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n return fract(sin(sn) * c);\n}\n\nstruct IncidentLight {\n vec3 color;\n vec3 direction;\n bool visible;\n};\n\nstruct ReflectedLight {\n vec3 directDiffuse;\n vec3 directSpecular;\n vec3 indirectDiffuse;\n vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n vec3 position;\n vec3 normal;\n vec3 viewDir;\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n float distance = dot( planeNormal, point - pointOnPlane );\n\n return - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n return sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n mat3 tmp;\n\n tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n return tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n return dot( weights, color.rgb );\n\n}\n",e.common_frag_def="//------------------------------------------------\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n//------------------------------------------------\n",e.common_vert_def="\n//------------------------------------------------\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\n#ifdef USE_COLOR\n\n attribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n attribute vec3 morphTarget0;\n attribute vec3 morphTarget1;\n attribute vec3 morphTarget2;\n attribute vec3 morphTarget3;\n #ifdef USE_MORPHNORMALS\n  attribute vec3 morphNormal0;\n  attribute vec3 morphNormal1;\n  attribute vec3 morphNormal2;\n  attribute vec3 morphNormal3;\n #else\n  attribute vec3 morphTarget4;\n  attribute vec3 morphTarget5;\n  attribute vec3 morphTarget6;\n  attribute vec3 morphTarget7;\n #endif\n#endif\n#ifdef USE_SKINNING\n attribute vec4 skinIndex;\n attribute vec4 skinWeight;\n#endif\n//------------------------------------------------\n",e.cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n\n#define cubeUV_textureSize (1024.0)\n\nint getFaceFromDirection(vec3 direction) {\n vec3 absDirection = abs(direction);\n int face = -1;\n if( absDirection.x > absDirection.z ) {\n  if(absDirection.x > absDirection.y )\n   face = direction.x > 0.0 ? 0 : 3;\n  else\n   face = direction.y > 0.0 ? 1 : 4;\n }\n else {\n  if(absDirection.z > absDirection.y )\n   face = direction.z > 0.0 ? 2 : 5;\n  else\n   face = direction.y > 0.0 ? 1 : 4;\n }\n return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\n\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n float dxRoughness = dFdx(roughness);\n float dyRoughness = dFdy(roughness);\n vec3 dx = dFdx( vec * scale * dxRoughness );\n vec3 dy = dFdy( vec * scale * dyRoughness );\n float d = max( dot( dx, dx ), dot( dy, dy ) );\n // Clamp the value to the max mip level counts. hard coded to 6 mips\n d = clamp(d, 1.0, cubeUV_rangeClamp);\n float mipLevel = 0.5 * log2(d);\n return vec2(floor(mipLevel), fract(mipLevel));\n}\n\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\n\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n float a = 16.0 * cubeUV_rcpTextureSize;\n\n vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n // float powScale = exp2(roughnessLevel + mipLevel);\n float powScale = exp2_packed.x * exp2_packed.y;\n // float scale =  1.0 / exp2(roughnessLevel + 2.0 + mipLevel);\n float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n // float mipOffset = 0.75*(1.0 - 1.0/exp2(mipLevel))/exp2(roughnessLevel);\n float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\n bool bRes = mipLevel == 0.0;\n scale =  bRes && (scale < a) ? a : scale;\n\n vec3 r;\n vec2 offset;\n int face = getFaceFromDirection(direction);\n\n float rcpPowScale = 1.0 / powScale;\n\n if( face == 0) {\n  r = vec3(direction.x, -direction.z, direction.y);\n  offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n }\n else if( face == 1) {\n  r = vec3(direction.y, direction.x, direction.z);\n  offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n }\n else if( face == 2) {\n  r = vec3(direction.z, direction.x, direction.y);\n  offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n }\n else if( face == 3) {\n  r = vec3(direction.x, direction.z, direction.y);\n  offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n }\n else if( face == 4) {\n  r = vec3(direction.y, direction.x, -direction.z);\n  offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n }\n else {\n  r = vec3(direction.z, -direction.x, direction.y);\n  offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n }\n r = normalize(r);\n float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n vec2 base = offset + vec2( texelOffset );\n return base + s * ( scale - 2.0 * texelOffset );\n}\n\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\n\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n float roughnessVal = roughness* cubeUV_maxLods3;\n float r1 = floor(roughnessVal);\n float r2 = r1 + 1.0;\n float t = fract(roughnessVal);\n vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n float s = mipInfo.y;\n float level0 = mipInfo.x;\n float level1 = level0 + 1.0;\n level1 = level1 > 5.0 ? 5.0 : level1;\n\n // round to nearest mipmap if we are not interpolating.\n level0 += min( floor( s + 0.5 ), 5.0 );\n\n // Tri linear interpolation.\n vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\n vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\n vec4 result = mix(color10, color20, t);\n\n return vec4(result.rgb, 1.0);\n}\n\n#endif\n",e.defaultnormal_vertex="vec3 transformedNormal = normalMatrix * objectNormal;\n\n#ifdef FLIP_SIDED\n\n transformedNormal = - transformedNormal;\n\n#endif\n",e.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n uniform sampler2D displacementMap;\n uniform float displacementScale;\n uniform float displacementBias;\n\n#endif\n",e.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",e.dithering_fragment="#if defined( DITHERING )\n\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n",e.dithering_pars_fragment="#if defined( DITHERING )\n\n // based on https://www.shadertoy.com/view/MslGR8\n vec3 dithering( vec3 color ) {\n  //Calculate grid position\n  float grid_position = rand( gl_FragCoord.xy );\n\n  //Shift the individual colors differently, thus making it even harder to see the dithering pattern\n  vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n  //modify shift acording to grid position.\n  dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n  //shift the color by dither_shift\n  return color + dither_shift_RGB;\n }\n\n#endif\n",e.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n vec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n totalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n",e.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n uniform sampler2D emissiveMap;\n\n#endif\n",e.encodings_fragment="  // gl_FragColor = linearToOutputTexel( gl_FragColor );\n",e.encodings_pars_fragment="// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n return value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n float maxComponent = max( max( value.r, value.g ), value.b );\n float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n float maxRGB = max( value.x, max( value.g, value.b ) );\n float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n M            = ceil( M * 255.0 ) / 255.0;\n return vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n float maxRGB = max( value.x, max( value.g, value.b ) );\n float D      = max( maxRange / maxRGB, 1.0 );\n D            = min( floor( D ) / 255.0, 1.0 );\n return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n vec4 vResult;\n vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n vResult.w = fract(Le);\n vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n return vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n float Le = value.z * 255.0 + value.w;\n vec3 Xp_Y_XYZp;\n Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n return vec4( max(vRGB, 0.0), 1.0 );\n}\n",e.envmap_fragment="#ifdef USE_ENVMAP\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n  vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n  // Transforming Normal Vectors with the Inverse Transformation\n  vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n  #else\n\n   vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n  #endif\n\n #else\n\n  vec3 reflectVec = vReflect;\n\n #endif\n\n #ifdef ENVMAP_TYPE_CUBE\n\n  vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n #elif defined( ENVMAP_TYPE_EQUIREC )\n\n  vec2 sampleUV;\n\n  reflectVec = normalize( reflectVec );\n\n  sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n  sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n  vec4 envColor = texture2D( envMap, sampleUV );\n\n #elif defined( ENVMAP_TYPE_SPHERE )\n\n  reflectVec = normalize( reflectVec );\n\n  vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\n  vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\n #else\n\n  vec4 envColor = vec4( 0.0 );\n\n #endif\n\n envColor = envMapTexelToLinear( envColor );\n\n #ifdef ENVMAP_BLENDING_MULTIPLY\n\n  outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n #elif defined( ENVMAP_BLENDING_MIX )\n\n  outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n #elif defined( ENVMAP_BLENDING_ADD )\n\n  outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n #endif\n\n#endif\n",e.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n uniform float reflectivity;\n uniform float envMapIntensity;\n#endif\n\n#ifdef USE_ENVMAP\n\n #if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n  varying vec3 vWorldPosition;\n #endif\n\n #ifdef ENVMAP_TYPE_CUBE\n  uniform samplerCube envMap;\n #else\n  uniform sampler2D envMap;\n #endif\n uniform float flipEnvMap;\n uniform int maxMipLevel;\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n  uniform float refractionRatio;\n #else\n  varying vec3 vReflect;\n #endif\n\n#endif\n",e.envmap_pars_vertex="#ifdef USE_ENVMAP\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n  varying vec3 vWorldPosition;\n\n #else\n\n  varying vec3 vReflect;\n  uniform float refractionRatio;\n\n #endif\n\n#endif\n",e.envmap_physical_pars_fragment="#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n vec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n  vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n  #ifdef ENVMAP_TYPE_CUBE\n\n   vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n   // TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n   // of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n   #else\n\n    // force the bias high to get the last LOD level as it is the most blurred.\n    vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_CUBE_UV )\n\n   vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n   vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\n  #else\n\n   vec4 envMapColor = vec4( 0.0 );\n\n  #endif\n\n  return PI * envMapColor.rgb * envMapIntensity;\n\n }\n\n // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n  //float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n  //float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n  float maxMIPLevelScalar = float( maxMIPLevel );\n  float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n  // clamp to allowable LOD ranges.\n  return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n }\n\n vec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n  #else\n\n   vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n  #endif\n\n  reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n  float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n  #ifdef ENVMAP_TYPE_CUBE\n\n   vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_CUBE_UV )\n\n   vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n   vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\n  #elif defined( ENVMAP_TYPE_EQUIREC )\n\n   vec2 sampleUV;\n   sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n   sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_SPHERE )\n\n   vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #endif\n\n  return envMapColor.rgb * envMapIntensity;\n\n }\n\n#endif\n",e.envmap_vertex="#ifdef USE_ENVMAP\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n  vWorldPosition = worldPosition.xyz;\n\n #else\n\n  vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n  vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vReflect = reflect( cameraToVertex, worldNormal );\n\n  #else\n\n   vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n  #endif\n\n #endif\n\n#endif\n",e.fog_fragment="#ifdef USE_FOG\n\n float fogDepth = length( vFogPosition );\n\n #ifdef FOG_EXP2\n\n  float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\n #else\n\n  float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n #endif\n\n gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n",e.fog_pars_fragment="#ifdef USE_FOG\n\n uniform vec3 fogColor;\n varying vec3 vFogPosition;\n\n #ifdef FOG_EXP2\n\n  uniform float fogDensity;\n\n #else\n\n  uniform float fogNear;\n  uniform float fogFar;\n\n #endif\n\n#endif\n",e.fog_pars_vertex="#ifdef USE_FOG\n\n varying vec3 vFogPosition;\n\n#endif\n",e.fog_vertex="#ifdef USE_FOG\n\n vFogPosition = mvPosition.xyz;\n\n#endif\n",e.gradientmap_pars_fragment="#ifdef TOON\n\n uniform sampler2D gradientMap;\n\n vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n  // dotNL will be from -1.0 to 1.0\n  float dotNL = dot( normal, lightDirection );\n  vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n  #ifdef USE_GRADIENTMAP\n\n   return texture2D( gradientMap, coord ).rgb;\n\n  #else\n\n   return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n  #endif\n\n\n }\n\n#endif\n",e.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n",e.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n uniform sampler2D lightMap;\n uniform float lightMapIntensity;\n\n#endif",e.lights_fragment_begin="/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n\nIncidentLight directLight;\n\n#if (defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n PointLight pointLight;\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n  // pointLight = pointLights[ i ];\n  pointLight.position = vec3(pointLights[i* 15 + 0], pointLights[i * 15 + 1], pointLights[i * 15 + 2]);\n  pointLight.color = vec3(pointLights[i* 15 + 3], pointLights[i * 15 + 4], pointLights[i * 15 + 5]);\n  pointLight.distance = pointLights[i * 15 + 6];\n  pointLight.decay = pointLights[i * 15 + 7];\n\n  getPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n  #ifdef USE_SHADOWMAP\n  directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n  #endif\n\n  RE_Direct( directLight, geometry, material, reflectedLight );\n\n }\n\n#endif\n\n#if (defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n SpotLight spotLight;\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n  // spotLight = spotLights[ i ];\n  spotLight.position = vec3(spotLights[i * 18 + 0], spotLights[i * 18 + 1], spotLights[i * 18 + 2]);\n  spotLight.direction = vec3(spotLights[i * 18 + 3], spotLights[i * 18 + 4], spotLights[i * 18 + 5]);\n  spotLight.color = vec3(spotLights[i * 18 + 6], spotLights[i * 18 + 7], spotLights[i * 18 + 8]);\n  spotLight.distance = spotLights[i * 18 + 9];\n  spotLight.decay = spotLights[i * 18 + 10];\n  spotLight.coneCos = spotLights[i * 18 + 11];\n  spotLight.penumbraCos = spotLights[i * 18 + 12];\n  getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n  #ifdef USE_SHADOWMAP\n  directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n  #endif\n\n  RE_Direct( directLight, geometry, material, reflectedLight );\n\n }\n\n#endif\n\n#if (defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n DirectionalLight directionalLight;\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n  // directionalLight = directionalLights[ i ];\n  directionalLight.direction = vec3(directionalLights[i * 12 + 0], directionalLights[i * 12 + 1], directionalLights[i * 12 + 2]);\n  directionalLight.color = vec3(directionalLights[i * 12 + 3], directionalLights[i * 12 + 4], directionalLights[i * 12 + 5]);\n  getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n  #ifdef USE_SHADOWMAP\n  directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n  #endif\n\n  RE_Direct( directLight, geometry, material, reflectedLight );\n\n }\n\n#endif\n\n#if (defined(NUM_RECT_AREA_LIGHTS) &&  NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n RectAreaLight rectAreaLight;\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n  rectAreaLight = rectAreaLights[ i ];\n  RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n }\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n #if (defined(NUM_HEMI_LIGHTS) &&  NUM_HEMI_LIGHTS > 0 )\n\n  // #pragma unroll_loop\n  for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n   irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n  }\n\n #endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n vec3 radiance = vec3( 0.0 );\n vec3 clearCoatRadiance = vec3( 0.0 );\n\n#endif\n",e.lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\n RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n\n#endif\n",e.lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\n #ifdef USE_LIGHTMAP\n\n  vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n   lightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n  #endif\n\n  irradiance += lightMapIrradiance;\n\n #endif\n\n #if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n  irradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n #endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n radiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\n #ifndef STANDARD\n  clearCoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n #endif\n\n#endif\n",e.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n vLightBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0\n PointLight pointLight;\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n  pointLight.position = vec3(pointLights[i* 15 + 0], pointLights[i * 15 + 1], pointLights[i * 15 + 2]);\n  pointLight.color = vec3(pointLights[i* 15 + 3], pointLights[i * 15 + 4], pointLights[i * 15 + 5]);\n  pointLight.distance = pointLights[i * 15 + 6];\n  pointLight.decay = pointLights[i * 15 + 7];\n  getPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n  dotNL = dot( geometry.normal, directLight.direction );\n  directLightColor_Diffuse = PI * directLight.color;\n\n  vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n  #ifdef DOUBLE_SIDED\n\n   vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n  #endif\n\n }\n\n#endif\n\n#if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0\n SpotLight spotLight;\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n  spotLight.position = vec3(spotLights[i * 18 + 0], spotLights[i * 18 + 1], spotLights[i * 18 + 2]);\n  spotLight.direction = vec3(spotLights[i * 18 + 3], spotLights[i * 18 + 4], spotLights[i * 18 + 5]);\n  spotLight.color = vec3(spotLights[i * 18 + 6], spotLights[i * 18 + 7], spotLights[i * 18 + 8]);\n  spotLight.distance = spotLights[i * 18 + 9];\n  spotLight.decay = spotLights[i * 18 + 10];\n  spotLight.coneCos = spotLights[i * 18 + 11];\n  spotLight.penumbraCos = spotLights[i * 18 + 12];\n\n  getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n  dotNL = dot( geometry.normal, directLight.direction );\n  directLightColor_Diffuse = PI * directLight.color;\n\n  vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n  #ifdef DOUBLE_SIDED\n\n   vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n  #endif\n }\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n  // TODO (abelnation): implement\n\n }\n\n#endif\n*/\n\n#if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0\n DirectionalLight directionalLight;\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n  directionalLight.direction = vec3(directionalLights[i * 12 + 0], directionalLights[i * 12 + 1], directionalLights[i * 12 + 2]);\n  directionalLight.color = vec3(directionalLights[i * 12 + 3], directionalLights[i * 12 + 4], directionalLights[i * 12 + 5]);\n  getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n  dotNL = dot( geometry.normal, directLight.direction );\n  directLightColor_Diffuse = PI * directLight.color;\n  // directLightColor_Diffuse = directLight.color;\n\n  vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n  // vLightFront += directLightColor_Diffuse;\n\n  #ifdef DOUBLE_SIDED\n\n   vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n  #endif\n\n }\n\n#endif\n\n#if defined(NUM_HEMI_LIGHTS) && NUM_HEMI_LIGHTS > 0\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n  vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n  #ifdef DOUBLE_SIDED\n\n   vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n  #endif\n\n }\n\n#endif\n",e.lights_pars_begin="uniform vec3 ambientLightColor;\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n vec3 irradiance = ambientLightColor;\n\n #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n  irradiance *= PI;\n\n #endif\n\n return irradiance;\n\n}\n\n#if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0\n\n struct DirectionalLight {\n  vec3 direction;\n  vec3 color;\n\n  int shadow;\n  float shadowBias;\n  float shadowRadius;\n  vec2 shadowMapSize;\n };\n\n uniform float directionalLights[NUM_DIR_LIGHTS * 12];\n\n void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n  directLight.direction = directionalLight.direction;\n  directLight.color = directionalLight.color;\n  directLight.visible = true;\n }\n\n#endif\n\n\n#if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0\n\n struct PointLight {\n  vec3 position;\n  vec3 color;\n  float distance;\n  float decay;\n\n  int shadow;\n  float shadowBias;\n  float shadowRadius;\n  vec2 shadowMapSize;\n  float shadowCameraNear;\n  float shadowCameraFar;\n };\n\n uniform float pointLights[NUM_POINT_LIGHTS * 15 ];\n\n // directLight is an out parameter as having it as a return value caused compiler errors on some devices\n void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n  vec3 lVector = pointLight.position - geometry.position;\n  directLight.direction = normalize( lVector );\n\n  float lightDistance = length( lVector );\n\n  directLight.color = pointLight.color;\n  directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n  directLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n }\n\n#endif\n\n\n#if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0\n\n struct SpotLight {\n  vec3 position;\n  vec3 direction;\n  vec3 color;\n  float distance;\n  float decay;\n  float coneCos;\n  float penumbraCos;\n\n  int shadow;\n  float shadowBias;\n  float shadowRadius;\n  vec2 shadowMapSize;\n };\n\n uniform float spotLights[NUM_SPOT_LIGHTS * 18];\n\n // directLight is an out parameter as having it as a return value caused compiler errors on some devices\n void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n  vec3 lVector = spotLight.position - geometry.position;\n  directLight.direction = normalize( lVector );\n\n  float lightDistance = length( lVector );\n  float angleCos = dot( directLight.direction, spotLight.direction );\n\n  if ( angleCos > spotLight.coneCos ) {\n\n   float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n   directLight.color = spotLight.color;\n   directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n   directLight.visible = true;\n\n  } else {\n\n   directLight.color = vec3( 0.0 );\n   directLight.visible = false;\n\n  }\n }\n\n#endif\n\n\n#if defined(NUM_RECT_AREA_LIGHTS) && NUM_RECT_AREA_LIGHTS > 0\n\n struct RectAreaLight {\n  vec3 color;\n  vec3 position;\n  vec3 halfWidth;\n  vec3 halfHeight;\n };\n\n // Pre-computed values of LinearTransformedCosine approximation of BRDF\n // BRDF approximation Texture is 64x64\n uniform sampler2D ltc_1; // RGBA Float\n uniform sampler2D ltc_2; // RGBA Float\n\n uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if defined(NUM_HEMI_LIGHTS) && NUM_HEMI_LIGHTS > 0\n\n struct HemisphereLight {\n  vec3 direction;\n  vec3 skyColor;\n  vec3 groundColor;\n };\n\n uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n  float dotNL = dot( geometry.normal, hemiLight.direction );\n  float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n  vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n   irradiance *= PI;\n\n  #endif\n\n  return irradiance;\n\n }\n\n#endif\n",e.lights_pars_maps="#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n vec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n  vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n  #ifdef ENVMAP_TYPE_CUBE\n\n   vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n   // TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n   // of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n   #else\n\n    // force the bias high to get the last LOD level as it is the most blurred.\n    vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_CUBE_UV )\n\n   vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n   vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\n  #else\n\n   vec4 envMapColor = vec4( 0.0 );\n\n  #endif\n\n  return PI * envMapColor.rgb * envMapIntensity;\n\n }\n\n // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n  //float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n  //float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n  float maxMIPLevelScalar = float( maxMIPLevel );\n  float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n  // clamp to allowable LOD ranges.\n  return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n }\n\n vec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n  #else\n\n   vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n  #endif\n\n  reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n  float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n  #ifdef ENVMAP_TYPE_CUBE\n\n   vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_CUBE_UV )\n\n   vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n   vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\n  #elif defined( ENVMAP_TYPE_EQUIREC )\n\n   vec2 sampleUV;\n   sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n   sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_SPHERE )\n\n   vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #endif\n\n  return envMapColor.rgb * envMapIntensity;\n\n }\n\n#endif\n",e.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",e.lights_phong_pars_fragment="varying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n varying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n vec3 diffuseColor;\n vec3 specularColor;\n float specularShininess;\n float specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n #ifdef TOON\n\n  vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n #else\n\n  float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n  vec3 irradiance = dotNL * directLight.color;\n\n #endif\n\n #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n  irradiance *= PI; // punctual light\n\n #endif\n\n reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct    RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse  RE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material ) (0)\n",e.lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n material.clearCoat = saturate( clearCoat ); // Burley clearcoat model\n material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",e.lights_physical_pars_fragment="struct PhysicalMaterial {\n\n vec3 diffuseColor;\n float specularRoughness;\n vec3 specularColor;\n\n #ifndef STANDARD\n  float clearCoat;\n  float clearCoatRoughness;\n #endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n  vec3 normal = geometry.normal;\n  vec3 viewDir = geometry.viewDir;\n  vec3 position = geometry.position;\n  vec3 lightPos = rectAreaLight.position;\n  vec3 halfWidth = rectAreaLight.halfWidth;\n  vec3 halfHeight = rectAreaLight.halfHeight;\n  vec3 lightColor = rectAreaLight.color;\n  float roughness = material.specularRoughness;\n\n  vec3 rectCoords[ 4 ];\n  rectCoords[ 0 ] = lightPos - halfWidth - halfHeight; // counterclockwise\n  rectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n  rectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n  rectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\n  vec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n  vec4 t1 = texture2D( ltc_1, uv );\n  vec4 t2 = texture2D( ltc_2, uv );\n\n  mat3 mInv = mat3(\n   vec3( t1.x, 0, t1.y ),\n   vec3(    0, 1,    0 ),\n   vec3( t1.z, 0, t1.w )\n  );\n\n  // LTC Fresnel Approximation by Stephen Hill\n  // http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n  vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n  reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n  reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n }\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n vec3 irradiance = dotNL * directLight.color;\n\n #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n  irradiance *= PI; // punctual light\n\n #endif\n\n #ifndef STANDARD\n  float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n #else\n  float clearCoatDHR = 0.0;\n #endif\n\n reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\n reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n #ifndef STANDARD\n\n  reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\n #endif\n\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n #ifndef STANDARD\n  float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n  float dotNL = dotNV;\n  float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n #else\n  float clearCoatDHR = 0.0;\n #endif\n\n reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\n #ifndef STANDARD\n\n  reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\n #endif\n\n}\n\n#define RE_Direct    RE_Direct_Physical\n#define RE_Direct_RectArea  RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse  RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular  RE_IndirectSpecular_Physical\n\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n",e.logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif",e.logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n uniform float logDepthBufFC;\n varying float vFragDepth;\n\n#endif\n",e.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n #ifdef USE_LOGDEPTHBUF_EXT\n\n  varying float vFragDepth;\n\n #else\n\n  uniform float logDepthBufFC;\n\n #endif\n\n#endif\n",e.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n #ifdef USE_LOGDEPTHBUF_EXT\n\n  vFragDepth = 1.0 + gl_Position.w;\n\n #else\n\n  gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n  gl_Position.z *= gl_Position.w;\n\n #endif\n\n#endif\n",e.map_fragment="#ifdef USE_MAP\n\n vec4 texelColor = texture2D( map, vUv );\n\n // texelColor = mapTexelToLinear( texelColor );TODO\n diffuseColor *= texelColor;\n\n#endif\n",e.map_pars_fragment="#ifdef USE_MAP\n\n uniform sampler2D map;\n\n#endif\n",e.map_particle_fragment="#ifdef USE_MAP\n\n vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n vec4 mapTexel = texture2D( map, uv );\n diffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n",e.map_particle_pars_fragment="#ifdef USE_MAP\n\n uniform mat3 uvTransform;\n uniform sampler2D map;\n\n#endif\n",e.metalnessmap_fragment="float metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n vec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n // reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n metalnessFactor *= texelMetalness.b;\n\n#endif\n",e.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\n uniform sampler2D metalnessMap;\n\n#endif",e.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",e.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n #ifndef USE_MORPHNORMALS\n\n uniform float morphTargetInfluences[ 8 ];\n\n #else\n\n uniform float morphTargetInfluences[ 4 ];\n\n #endif\n\n#endif",e.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n #ifndef USE_MORPHNORMALS\n\n transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n #endif\n\n#endif\n",e.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n uniform sampler2D normalMap;\n uniform vec2 normalScale;\n\n #ifdef OBJECTSPACE_NORMALMAP\n\n  uniform mat3 normalMatrix;\n\n #else\n\n  // Per-Pixel Tangent Space Normal Mapping\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n  vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n   // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n   vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n   vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n   vec2 st0 = dFdx( vUv.st );\n   vec2 st1 = dFdy( vUv.st );\n\n   float scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n   vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n   vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n   vec3 N = normalize( surf_norm );\n   mat3 tsn = mat3( S, T, N );\n\n   vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\n   mapN.xy *= normalScale;\n   mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n   return normalize( tsn * mapN );\n\n  }\n\n #endif\n\n#endif\n",e.normal_fragment_begin="#ifdef FLAT_SHADED\n\n // Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n vec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n vec3 normal = normalize( vNormal );\n\n #ifdef DOUBLE_SIDED\n\n  normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n #endif\n\n#endif\n",e.normal_fragment_maps="#ifdef USE_NORMALMAP\n\n #ifdef OBJECTSPACE_NORMALMAP\n\n  normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n  #ifdef FLIP_SIDED\n\n   normal = - normal;\n\n  #endif\n\n  #ifdef DOUBLE_SIDED\n\n   normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n  #endif\n\n  normal = normalize( normalMatrix * normal );\n\n #else // tangent-space normal map\n\n  normal = perturbNormal2Arb( -vViewPosition, normal );\n\n #endif\n\n#elif defined( USE_BUMPMAP )\n\n normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",e.packing="vec3 packNormalToRGB( const in vec3 normal ) {\n return normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n return 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n vec4 r = vec4( fract( v * PackFactors ), v );\n r.yzw -= r.xyz * ShiftRight8; // tidy overflow\n return r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n return dot( v, UnpackFactors );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n return linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",e.particle_affector="vec3 lifeVelocity = computeVelocity(t);\nvec4 worldRotation;\nif(u_simulationSpace==1)\n worldRotation=startWorldRotation;\nelse\n worldRotation=u_worldRotation;\nvec3 gravity=u_gravity*age;\n\nvec3 center=computePosition(startVelocity, lifeVelocity, age, t,gravity,worldRotation); \n#ifdef SPHERHBILLBOARD\n   vec2 corner=corner.xy;\n      vec3 cameraUpVector =normalize(cameraUp);\n      vec3 sideVector = normalize(cross(cameraForward,cameraUpVector));\n      vec3 upVector = normalize(cross(sideVector,cameraForward));\n     corner*=computeBillbardSize(startSize.xy,t);\n  #if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONSEPERATE)\n   if(u_startRotation3D){\n    vec3 rotation=vec3(startRotation.xy,computeRotation(startRotation.z,age,t));\n    center += u_sizeScale.xzy*rotation_euler(corner.x*sideVector+corner.y*upVector,rotation);\n   }\n   else{\n    float rot = computeRotation(startRotation.x, age,t);\n    float c = cos(rot);\n    float s = sin(rot);\n    mat2 rotation= mat2(c, -s, s, c);\n    corner=rotation*corner;\n    center += u_sizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n   }\n  #else\n   if(u_startRotation3D){\n    center += u_sizeScale.xzy*rotation_euler(corner.x*sideVector+corner.y*upVector,startRotation);\n   }\n   else{\n    float c = cos(startRotation.x);\n    float s = sin(startRotation.x);\n    mat2 rotation= mat2(c, -s, s, c);\n    corner=rotation*corner;\n    center += u_sizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n   }\n  #endif\n #endif\n #ifdef STRETCHEDBILLBOARD\n  vec2 corner=corner.xy;\n  vec3 velocity;\n  #if defined(VELOCITYCONSTANT)||defined(VELOCITYCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\n      if(u_spaceType==0)\n       velocity=rotation_quaternions(u_sizeScale*(startVelocity+lifeVelocity),worldRotation)+gravity;\n      else\n       velocity=rotation_quaternions(u_sizeScale*startVelocity,worldRotation)+lifeVelocity+gravity;\n   #else\n      velocity= rotation_quaternions(u_sizeScale*startVelocity,worldRotation)+gravity;\n   #endif \n  vec3 cameraUpVector = normalize(velocity);\n  vec3 direction = normalize(center-cameraPosition);\n    vec3 sideVector = normalize(cross(direction,normalize(velocity)));\n  sideVector=u_sizeScale.xzy*sideVector;\n  cameraUpVector=length(vec3(u_sizeScale.x,0.0,0.0))*cameraUpVector;\n    vec2 size=computeBillbardSize(startSize.xy,t);\n    const mat2 rotaionZHalfPI=mat2(0.0, -1.0, 1.0, 0.0);\n    corner=rotaionZHalfPI*corner;\n    corner.y=corner.y-abs(corner.y);\n    float speed=length(velocity);\n    center +=sign(u_sizeScale.x)*(sign(u_lengthScale)*size.x*corner.x*sideVector+(speed*u_speeaScale+size.y*u_lengthScale)*corner.y*cameraUpVector);\n #endif\n #ifdef HORIZONTALBILLBOARD\n  vec2 corner=corner.xy;\n    const vec3 cameraUpVector=vec3(0.0,0.0,1.0);\n    const vec3 sideVector = vec3(-1.0,0.0,0.0);\n  float rot = computeRotation(startRotation.x, age,t);\n    float c = cos(rot);\n    float s = sin(rot);\n    mat2 rotation= mat2(c, -s, s, c);\n    corner=rotation*corner;\n  corner*=computeBillbardSize(startSize.xy,t);\n    center +=u_sizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n #endif\n #ifdef VERTICALBILLBOARD\n  vec2 corner=corner.xy;\n    const vec3 cameraUpVector =vec3(0.0,1.0,0.0);\n    vec3 sideVector = normalize(cross(cameraForward,cameraUpVector));\n  float rot = computeRotation(startRotation.x, age,t);\n    float c = cos(rot);\n    float s = sin(rot);\n    mat2 rotation= mat2(c, -s, s, c);\n    corner=rotation*corner;\n  corner*=computeBillbardSize(startSize.xy,t);\n    center +=u_sizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n #endif\n #ifdef RENDERMESH\n    vec3 size=computeMeshSize(startSize,t);\n  #if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONSEPERATE)\n    if(u_startRotation3D){\n     vec3 rotation=vec3(startRotation.xy,-computeRotation(startRotation.z, age,t));\n     center+= rotation_quaternions(u_sizeScale*rotation_euler(position*size,rotation),worldRotation);\n    }\n    else{\n     #ifdef ROTATIONOVERLIFETIME\n      float angle=computeRotation(startRotation.x, age,t);\n      if(startPosition.x>0.1 || startPosition.x < -0.1||startPosition.y>0.1 || startPosition.y < -0.1){\n       center+= (rotation_quaternions(rotation_axis(u_sizeScale*position*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(startPosition.xy,0.0))),angle),worldRotation));//已验证\n      }\n      else{\n       #ifdef SHAPE\n        center+= u_sizeScale.xzy*(rotation_quaternions(rotation_axis(position*size,vec3(0.0,-1.0,0.0),angle),worldRotation));\n       #else\n        if(u_simulationSpace==1)\n         center+=rotation_axis(u_sizeScale*position*size,vec3(0.0,0.0,-1.0),angle);\n        else if(u_simulationSpace==0)\n         center+=rotation_quaternions(u_sizeScale*rotation_axis(position*size,vec3(0.0,0.0,-1.0),angle),worldRotation);\n       #endif\n      }\n     #endif\n     #ifdef ROTATIONSEPERATE\n      vec3 angle=compute3DRotation(vec3(0.0,0.0,startRotation.z), age,t);\n      center+= (rotation_quaternions(rotation_euler(u_sizeScale*position*size,vec3(angle.x,angle.y,angle.z)),worldRotation));\n     #endif \n    }\n  #else\n  if(u_startRotation3D){\n   center+= rotation_quaternions(u_sizeScale*rotation_euler(position*size,startRotation),worldRotation);\n  }\n  else{\n   if(startPosition.x>0.1 || startPosition.x < -0.1||startPosition.y>0.1 || startPosition.y < -0.1){\n    if(u_simulationSpace==1)\n     center+= rotation_axis(u_sizeScale*position*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(startPosition.xy,0.0))),startRotation.x);\n    else if(u_simulationSpace==0)\n     center+= (rotation_quaternions(u_sizeScale*rotation_axis(position*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(startPosition.xy,0.0))),startRotation.x),worldRotation));\n   }\n   else{\n    #ifdef SHAPE\n     if(u_simulationSpace==1)\n      center+= u_sizeScale*rotation_axis(position*size,vec3(0.0,-1.0,0.0),startRotation.x);\n     else if(u_simulationSpace==0)\n      center+= rotation_quaternions(u_sizeScale*rotation_axis(position*size,vec3(0.0,-1.0,0.0),startRotation.x),worldRotation); \n    #else\n     if(u_simulationSpace==1)\n      center+= rotation_axis(u_sizeScale*position*size,vec3(0.0,0.0,-1.0),startRotation.x);\n     else if(u_simulationSpace==0)\n      center+= rotation_quaternions(u_sizeScale*rotation_axis(position*size,vec3(0.0,0.0,-1.0),startRotation.x),worldRotation);\n    #endif\n   }\n  }\n  #endif\n  v_mesh_color=vec4(color, 1.0);\n  #endif",e.particle_common="\n\nuniform float u_currentTime;\nuniform vec3 u_gravity;\n\nuniform vec3 u_worldPosition;\nuniform vec4 u_worldRotation;\nuniform bool u_startRotation3D;\nuniform int u_scalingMode;\nuniform vec3 u_positionScale;\nuniform vec3 u_sizeScale;\nuniform mat4 viewProjectionMatrix;\n\nuniform vec3 cameraForward;\nuniform vec3 cameraUp;\n\nuniform float u_lengthScale;\nuniform float u_speeaScale;\nuniform int u_simulationSpace;\n\n#if defined(VELOCITYCONSTANT)||defined(VELOCITYCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\n  uniform int u_spaceType;\n#endif\n#if defined(VELOCITYCONSTANT)||defined(VELOCITYTWOCONSTANT)\n  uniform vec3 u_velocityConst;\n#endif\n#if defined(VELOCITYCURVE)||defined(VELOCITYTWOCURVE)\n  uniform vec2 u_velocityCurveX[4];\n  uniform vec2 u_velocityCurveY[4];\n  uniform vec2 u_velocityCurveZ[4];\n#endif\n#ifdef VELOCITYTWOCONSTANT\n  uniform vec3 u_velocityConstMax;\n#endif\n#ifdef VELOCITYTWOCURVE\n  uniform vec2 u_velocityCurveMaxX[4];\n  uniform vec2 u_velocityCurveMaxY[4];\n  uniform vec2 u_velocityCurveMaxZ[4];\n#endif\n\n#ifdef COLOROGRADIENT\n  uniform vec4 u_colorGradient[4];\n  uniform vec2 u_alphaGradient[4];\n#endif\n#ifdef COLORTWOGRADIENTS\n  uniform vec4 u_colorGradient[4];\n  uniform vec2 u_alphaGradient[4];\n  uniform vec4 u_colorGradientMax[4];\n  uniform vec2 u_alphaGradientMax[4];\n#endif\n\n#if defined(SIZECURVE)||defined(SIZETWOCURVES)\n  uniform vec2 u_sizeCurve[4];\n#endif\n#ifdef SIZETWOCURVES\n  uniform vec2 u_sizeCurveMax[4];\n#endif\n#if defined(SIZECURVESEPERATE)||defined(SIZETWOCURVESSEPERATE)\n  uniform vec2 u_sizeCurveX[4];\n  uniform vec2 u_sizeCurveY[4];\n  uniform vec2 u_sizeCurveZ[4];\n#endif\n#ifdef SIZETWOCURVESSEPERATE\n  uniform vec2 u_sizeCurveMaxX[4];\n  uniform vec2 u_sizeCurveMaxY[4];\n  uniform vec2 u_sizeCurveMaxZ[4];\n#endif\n\n#ifdef ROTATIONOVERLIFETIME\n  #if defined(ROTATIONCONSTANT)||defined(ROTATIONTWOCONSTANTS)\n    uniform float u_rotationConst;\n  #endif\n  #ifdef ROTATIONTWOCONSTANTS\n    uniform float u_rotationConstMax;\n  #endif\n  #if defined(ROTATIONCURVE)||defined(ROTATIONTWOCURVES)\n    uniform vec2 u_rotationCurve[4];\n  #endif\n  #ifdef ROTATIONTWOCURVES\n    uniform vec2 u_rotationCurveMax[4];\n  #endif\n#endif\n#ifdef ROTATIONSEPERATE\n  #if defined(ROTATIONCONSTANT)||defined(ROTATIONTWOCONSTANTS)\n    uniform vec3 u_rotationConstSeprarate;\n  #endif\n  #ifdef ROTATIONTWOCONSTANTS\n    uniform vec3 u_rotationConstMaxSeprarate;\n  #endif\n  #if defined(ROTATIONCURVE)||defined(ROTATIONTWOCURVES)\n    uniform vec2 u_rotationCurveX[4];\n    uniform vec2 u_rotationCurveY[4];\n    uniform vec2 u_rotationCurveZ[4];\n  uniform vec2 u_rotationCurveW[4];\n  #endif\n  #ifdef ROTATIONTWOCURVES\n    uniform vec2 u_rotationCurveMaxX[4];\n    uniform vec2 u_rotationCurveMaxY[4];\n    uniform vec2 u_rotationCurveMaxZ[4];\n  uniform vec2 u_rotationCurveMaxW[4];\n  #endif\n#endif\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONTWOCURVE)\n  uniform float u_cycles;\n  uniform vec4 u_subUV;\n  uniform vec2 u_uvCurve[4];\n#endif\n#ifdef TEXTURESHEETANIMATIONTWOCURVE\n  uniform vec2 u_uvCurveMax[4];\n#endif\n\nvarying float v_discard;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\n#ifdef RENDERMESH\n varying vec4 v_mesh_color;\n#endif\n\nvec3 rotation_euler(in vec3 vector,in vec3 euler)\n{\n  float halfPitch = euler.x * 0.5;\n float halfYaw = euler.y * 0.5;\n float halfRoll = euler.z * 0.5;\n\n float sinPitch = sin(halfPitch);\n float cosPitch = cos(halfPitch);\n float sinYaw = sin(halfYaw);\n float cosYaw = cos(halfYaw);\n float sinRoll = sin(halfRoll);\n float cosRoll = cos(halfRoll);\n\n float quaX = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n float quaY = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n float quaZ = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n float quaW = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n \n float x = quaX + quaX;\n  float y = quaY + quaY;\n  float z = quaZ + quaZ;\n  float wx = quaW * x;\n  float wy = quaW * y;\n  float wz = quaW * z;\n float xx = quaX * x;\n  float xy = quaX * y;\n float xz = quaX * z;\n  float yy = quaY * y;\n  float yz = quaY * z;\n  float zz = quaZ * z;\n\n  return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n              ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n              ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n \n}\n\nvec3 rotation_axis(in vec3 vector,in vec3 axis, in float angle)\n{\n float halfAngle = angle * 0.5;\n float sin = sin(halfAngle);\n \n float quaX = axis.x * sin;\n float quaY = axis.y * sin;\n float quaZ = axis.z * sin;\n float quaW = cos(halfAngle);\n \n float x = quaX + quaX;\n  float y = quaY + quaY;\n  float z = quaZ + quaZ;\n  float wx = quaW * x;\n  float wy = quaW * y;\n  float wz = quaW * z;\n float xx = quaX * x;\n  float xy = quaX * y;\n float xz = quaX * z;\n  float yy = quaY * y;\n  float yz = quaY * z;\n  float zz = quaZ * z;\n\n  return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n              ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n              ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n}\n\nvec3 rotation_quaternions(in vec3 v,in vec4 q) \n{\n return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\n#if defined(VELOCITYCURVE)||defined(VELOCITYTWOCURVE)||defined(SIZECURVE)||defined(SIZECURVESEPERATE)||defined(SIZETWOCURVES)||defined(SIZETWOCURVESSEPERATE)\nfloat evaluate_curve_float(in vec2 curves[4],in float t)\n{\n float res;\n for(int i=1;i<4;i++)\n {\n  vec2 curve=curves[i];\n  float curTime=curve.x;\n  if(curTime>=t)\n  {\n   vec2 lastCurve=curves[i-1];\n   float lastTime=lastCurve.x;\n   float tt=(t-lastTime)/(curTime-lastTime);\n   res=mix(lastCurve.y,curve.y,tt);\n   break;\n  }\n }\n return res;\n}\n#endif\n\n#if defined(VELOCITYCURVE)||defined(VELOCITYTWOCURVE)||defined(ROTATIONCURVE)||defined(ROTATIONTWOCURVES)\nfloat evaluate_curve_total(in vec2 curves[4],in float t)\n{\n float res=0.0;\n for(int i=1;i<4;i++)\n {\n  vec2 curve=curves[i];\n  float curTime=curve.x;\n  vec2 lastCurve=curves[i-1];\n  float lastValue=lastCurve.y;\n  \n  if(curTime>=t){\n   float lastTime=lastCurve.x;\n   float tt=(t-lastTime)/(curTime-lastTime);\n   res+=(lastValue+mix(lastValue,curve.y,tt))/2.0*time.x*(t-lastTime);\n   break;\n  }\n  else{\n   res+=(lastValue+curve.y)/2.0*time.x*(curTime-lastCurve.x);\n  }\n }\n return res;\n}\n#endif\n\n#if defined(COLOROGRADIENT)||defined(COLORTWOGRADIENTS)\nvec4 evaluate_curve_color(in vec2 gradientAlphas[4],in vec4 gradientColors[4],in float t)\n{\n vec4 overTimeColor;\n for(int i=1;i<4;i++)\n {\n  vec2 gradientAlpha=gradientAlphas[i];\n  float alphaKey=gradientAlpha.x;\n  if(alphaKey>=t)\n  {\n   vec2 lastGradientAlpha=gradientAlphas[i-1];\n   float lastAlphaKey=lastGradientAlpha.x;\n   float age=(t-lastAlphaKey)/(alphaKey-lastAlphaKey);\n   overTimeColor.a=mix(lastGradientAlpha.y,gradientAlpha.y,age);\n   break;\n  }\n }\n \n for(int i=1;i<4;i++)\n {\n  vec4 gradientColor=gradientColors[i];\n  float colorKey=gradientColor.x;\n  if(colorKey>=t)\n  {\n   vec4 lastGradientColor=gradientColors[i-1];\n   float lastColorKey=lastGradientColor.x;\n   float age=(t-lastColorKey)/(colorKey-lastColorKey);\n   overTimeColor.rgb=mix(gradientColors[i-1].yzw,gradientColor.yzw,age);\n   break;\n  }\n }\n return overTimeColor;\n}\n#endif\n\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONTWOCURVE)\nfloat evaluate_curve_frame(in vec2 gradientFrames[4],in float t)\n{\n float overTimeFrame;\n for(int i=1;i<4;i++)\n {\n  vec2 gradientFrame=gradientFrames[i];\n  float key=gradientFrame.x;\n  if(key>=t)\n  {\n   vec2 lastGradientFrame=gradientFrames[i-1];\n   float lastKey=lastGradientFrame.x;\n   float age=(t-lastKey)/(key-lastKey);\n   overTimeFrame=mix(lastGradientFrame.y,gradientFrame.y,age);\n   break;\n  }\n }\n return floor(overTimeFrame);\n}\n#endif\n\nvec3 computeVelocity(in float t)\n{\n  vec3 res;\n  #ifdef VELOCITYCONSTANT\n  res=u_velocityConst; \n  #endif\n  #ifdef VELOCITYCURVE\n     res= vec3(evaluate_curve_float(u_velocityCurveX,t),evaluate_curve_float(u_velocityCurveY,t),evaluate_curve_float(u_velocityCurveZ,t));\n  #endif\n  #ifdef VELOCITYTWOCONSTANT\n  res=mix(u_velocityConst,u_velocityConstMax,vec3(random1.y,random1.z,random1.w)); \n  #endif\n  #ifdef VELOCITYTWOCURVE\n     res=vec3(mix(evaluate_curve_float(u_velocityCurveX,t),evaluate_curve_float(u_velocityCurveMaxX,t),random1.y),\n             mix(evaluate_curve_float(u_velocityCurveY,t),evaluate_curve_float(u_velocityCurveMaxY,t),random1.z),\n        mix(evaluate_curve_float(u_velocityCurveZ,t),evaluate_curve_float(u_velocityCurveMaxZ,t),random1.w));\n  #endif\n     \n  return res;\n} \n\nvec3 computePosition(in vec3 startVelocity, in vec3 lifeVelocity,in float age,in float t,vec3 gravityVelocity,vec4 worldRotation)\n{\n    vec3 startPosition;\n    vec3 lifePosition;\n  #if defined(VELOCITYCONSTANT)||defined(VELOCITYCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\n   #ifdef VELOCITYCONSTANT\n      startPosition=startVelocity*age;\n      lifePosition=lifeVelocity*age;\n   #endif\n   #ifdef VELOCITYCURVE\n      startPosition=startVelocity*age;\n      lifePosition=vec3(evaluate_curve_total(u_velocityCurveX,t),evaluate_curve_total(u_velocityCurveY,t),evaluate_curve_total(u_velocityCurveZ,t));\n   #endif\n   #ifdef VELOCITYTWOCONSTANT\n      startPosition=startVelocity*age;\n      lifePosition=lifeVelocity*age;\n   #endif\n   #ifdef VELOCITYTWOCURVE\n      startPosition=startVelocity*age;\n      lifePosition=vec3(mix(evaluate_curve_total(u_velocityCurveX,t),evaluate_curve_total(u_velocityCurveMaxX,t),random1.y)\n                 ,mix(evaluate_curve_total(u_velocityCurveY,t),evaluate_curve_total(u_velocityCurveMaxY,t),random1.z)\n                 ,mix(evaluate_curve_total(u_velocityCurveZ,t),evaluate_curve_total(u_velocityCurveMaxZ,t),random1.w));\n   #endif\n\n   vec3 finalPosition;\n   if(u_spaceType==0){\n     if(u_scalingMode!=2)\n      finalPosition =rotation_quaternions(u_positionScale*(startPosition.xyz+startPosition+lifePosition),worldRotation);\n     else\n      finalPosition =rotation_quaternions(u_positionScale*startPosition.xyz+startPosition+lifePosition,worldRotation);\n   }\n   else{\n     if(u_scalingMode!=2)\n       finalPosition = rotation_quaternions(u_positionScale*(startPosition.xyz+startPosition),worldRotation)+lifePosition;\n     else\n       finalPosition = rotation_quaternions(u_positionScale*startPosition.xyz+startPosition,worldRotation)+lifePosition;\n   }\n    #else\n    startPosition=startVelocity*age;\n    vec3 finalPosition;\n    if(u_scalingMode!=2)\n      finalPosition = rotation_quaternions(u_positionScale*(startPosition.xyz+startPosition),worldRotation);\n    else\n      finalPosition = rotation_quaternions(u_positionScale*startPosition.xyz+startPosition,worldRotation);\n  #endif\n  \n  if(u_simulationSpace==1)\n    finalPosition=finalPosition+startWorldPosition;\n  else if(u_simulationSpace==0) \n    finalPosition=finalPosition+u_worldPosition;\n  \n  finalPosition+=0.5*gravityVelocity*age;\n \n  return finalPosition;\n}\n\n\nvec4 computeColor(in vec4 color,in float t)\n{\n #ifdef COLOROGRADIENT\n   color*=evaluate_curve_color(u_alphaGradient,u_colorGradient,t);\n #endif \n #ifdef COLORTWOGRADIENTS\n   color*=mix(evaluate_curve_color(u_alphaGradient,u_colorGradient,t),evaluate_curve_color(u_alphaGradientMax,u_colorGradientMax,t),random0.y);\n #endif\n\n  return color;\n}\n\nvec2 computeBillbardSize(in vec2 size,in float t)\n{\n #ifdef SIZECURVE\n  size*=evaluate_curve_float(u_sizeCurve,t);\n #endif\n #ifdef SIZETWOCURVES\n   size*=mix(evaluate_curve_float(u_sizeCurve,t),evaluate_curve_float(u_sizeCurveMax,t),random0.z); \n #endif\n #ifdef SIZECURVESEPERATE\n  size*=vec2(evaluate_curve_float(u_sizeCurveX,t),evaluate_curve_float(u_sizeCurveY,t));\n #endif\n #ifdef SIZETWOCURVESSEPERATE\n   size*=vec2(mix(evaluate_curve_float(u_sizeCurveX,t),evaluate_curve_float(u_sizeCurveMaxX,t),random0.z)\n         ,mix(evaluate_curve_float(u_sizeCurveY,t),evaluate_curve_float(u_sizeCurveMaxY,t),random0.z));\n #endif\n return size;\n}\n\n#ifdef RENDERMESH\nvec3 computeMeshSize(in vec3 size,in float t)\n{\n #ifdef SIZECURVE\n  size*=evaluate_curve_float(u_sizeCurve,t);\n #endif\n #ifdef SIZETWOCURVES\n   size*=mix(evaluate_curve_float(u_sizeCurve,t),evaluate_curve_float(u_sizeCurveMax,t),random0.z); \n #endif\n #ifdef SIZECURVESEPERATE\n  size*=vec3(evaluate_curve_float(u_sizeCurveX,t),evaluate_curve_float(u_sizeCurveY,t),evaluate_curve_float(u_sizeCurveZ,t));\n #endif\n #ifdef SIZETWOCURVESSEPERATE\n   size*=vec3(mix(evaluate_curve_float(u_sizeCurveX,t),evaluate_curve_float(u_sizeCurveMaxX,t),random0.z)\n         ,mix(evaluate_curve_float(u_sizeCurveY,t),evaluate_curve_float(u_sizeCurveMaxY,t),random0.z)\n       ,mix(evaluate_curve_float(u_sizeCurveZ,t),evaluate_curve_float(u_sizeCurveMaxZ,t),random0.z));\n #endif\n return size;\n}\n#endif\n\nfloat computeRotation(in float rotation,in float age,in float t)\n{ \n #ifdef ROTATIONOVERLIFETIME\n  #ifdef ROTATIONCONSTANT\n   float ageRot=u_rotationConst*age;\n         rotation+=ageRot;\n  #endif\n  #ifdef ROTATIONCURVE\n   rotation+=evaluate_curve_total(u_rotationCurve,t);\n  #endif\n  #ifdef ROTATIONTWOCONSTANTS\n   float ageRot=mix(u_rotationConst,u_rotationConstMax,random0.w)*age;\n     rotation+=ageRot;\n   #endif\n  #ifdef ROTATIONTWOCURVES\n   rotation+=mix(evaluate_curve_total(u_rotationCurve,t),evaluate_curve_total(u_rotationCurveMax,t),random0.w);\n  #endif\n #endif\n #ifdef ROTATIONSEPERATE\n  #ifdef ROTATIONCONSTANT\n   float ageRot=u_rotationConstSeprarate.z*age;\n         rotation+=ageRot;\n  #endif\n  #ifdef ROTATIONCURVE\n   rotation+=evaluate_curve_total(u_rotationCurveZ,t);\n  #endif\n  #ifdef ROTATIONTWOCONSTANTS\n   float ageRot=mix(u_rotationConstSeprarate.z,u_rotationConstMaxSeprarate.z,random0.w)*age;\n         rotation+=ageRot;\n     #endif\n  #ifdef ROTATIONTWOCURVES\n   rotation+=mix(evaluate_curve_total(u_rotationCurveZ,t),evaluate_curve_total(u_rotationCurveMaxZ,t),random0.w));\n  #endif\n #endif\n return rotation;\n}\n\n#if defined(RENDERMESH)&&(defined(ROTATIONOVERLIFETIME)||defined(ROTATIONSEPERATE))\nvec3 compute3DRotation(in vec3 rotation,in float age,in float t)\n{ \n #ifdef ROTATIONOVERLIFETIME\n   #ifdef ROTATIONCONSTANT\n     float ageRot=u_rotationConst*age;\n       rotation+=ageRot;\n   #endif\n   #ifdef ROTATIONCURVE\n     rotation+=evaluate_curve_total(u_rotationCurve,t);\n   #endif\n   #ifdef ROTATIONTWOCONSTANTS\n     float ageRot=mix(u_rotationConst,u_rotationConstMax,random0.w)*age;\n       rotation+=ageRot;\n   #endif\n   #ifdef ROTATIONTWOCURVES\n     rotation+=mix(evaluate_curve_total(u_rotationCurve,t),evaluate_curve_total(u_rotationCurveMax,t),random0.w);\n   #endif\n #endif\n #ifdef ROTATIONSEPERATE\n    #ifdef ROTATIONCONSTANT\n     vec3 ageRot=u_rotationConstSeprarate*age;\n           rotation+=ageRot;\n    #endif\n    #ifdef ROTATIONCURVE\n     rotation+=vec3(evaluate_curve_total(u_rotationCurveX,t),evaluate_curve_total(u_rotationCurveY,t),evaluate_curve_total(u_rotationCurveZ,t));\n    #endif\n    #ifdef ROTATIONTWOCONSTANTS\n     vec3 ageRot=mix(u_rotationConstSeprarate,u_rotationConstMaxSeprarate,random0.w)*age;\n           rotation+=ageRot;\n     #endif\n    #ifdef ROTATIONTWOCURVES\n     rotation+=vec3(mix(evaluate_curve_total(u_rotationCurveX,t),evaluate_curve_total(u_rotationCurveMaxX,t),random0.w)\n           ,mix(evaluate_curve_total(u_rotationCurveY,t),evaluate_curve_total(u_rotationCurveMaxY,t),random0.w)\n           ,mix(evaluate_curve_total(u_rotationCurveZ,t),evaluate_curve_total(u_rotationCurveMaxZ,t),random0.w));\n    #endif\n #endif\n return rotation;\n}\n#endif\n\nvec2 computeUV(in vec2 uv,in float t)\n{ \n #ifdef TEXTURESHEETANIMATIONCURVE\n  float cycleNormalizedAge=t*u_cycles;\n  float uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\n  float frame=evaluate_curve_frame(u_uvCurve,uvNormalizedAge);\n  uv.x *= u_subUV.x + u_subUV.z;\n  uv.y *= u_subUV.y + u_subUV.w;\n  float totalULength=frame*u_subUV.x;\n  float floorTotalULength=floor(totalULength);\n   uv.x+=totalULength-floorTotalULength;\n  uv.y+=floorTotalULength*u_subUV.y;\n    #endif\n #ifdef TEXTURESHEETANIMATIONTWOCURVE\n  float cycleNormalizedAge=t*u_cycles;\n  float uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\n   float frame=floor(mix(evaluate_curve_frame(u_uvCurve,uvNormalizedAge),evaluate_curve_frame(u_uvCurveMax,uvNormalizedAge),random1.x));\n  uv.x *= u_subUV.x + u_subUV.z;\n  uv.y *= u_subUV.y + u_subUV.w;\n  float totalULength=frame*u_subUV.x;\n  float floorTotalULength=floor(totalULength);\n   uv.x+=totalULength-floorTotalULength;\n  uv.y+=floorTotalULength*u_subUV.y;\n    #endif\n return uv;\n}",e.premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\n // Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n gl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n",e.project_vertex="vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\ngl_Position = projectionMatrix * mvPosition;\n",e.roughnessmap_fragment="float roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n vec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n // reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n roughnessFactor *= texelRoughness.g;\n\n#endif\n",e.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\n uniform sampler2D roughnessMap;\n\n#endif",e.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n #if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0//Egret\n\n  uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n  varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n #endif\n\n #if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0//Egret\n\n  uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n  varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n #endif\n\n #if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0//Egret\n\n  uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n  varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n #endif\n\n /*\n #if NUM_RECT_AREA_LIGHTS > 0\n\n  // TODO (abelnation): create uniforms for area light shadows\n\n #endif\n */\n\n float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n  return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n }\n\n float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n  const vec2 offset = vec2( 0.0, 1.0 );\n\n  vec2 texelSize = vec2( 1.0 ) / size;\n  vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\n  float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n  float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n  float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n  float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\n  vec2 f = fract( uv * size + 0.5 );\n\n  float a = mix( lb, lt, f.y );\n  float b = mix( rb, rt, f.y );\n  float c = mix( a, b, f.x );\n\n  return c;\n\n }\n\n float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n  float shadow = 1.0;\n\n  shadowCoord.xyz /= shadowCoord.w;\n  shadowCoord.z += shadowBias;//Egret Right-hand\n\n  // if ( something && something ) breaks ATI OpenGL shader compiler\n  // if ( all( something, something ) ) using this instead\n\n  bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n  bool inFrustum = all( inFrustumVec );\n\n  bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n  bool frustumTest = all( frustumTestVec );\n\n  if ( frustumTest ) {\n\n  #if defined( SHADOWMAP_TYPE_PCF )\n\n   vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n   float dx0 = - texelSize.x * shadowRadius;\n   float dy0 = - texelSize.y * shadowRadius;\n   float dx1 = + texelSize.x * shadowRadius;\n   float dy1 = + texelSize.y * shadowRadius;\n\n   shadow = (\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n   ) * ( 1.0 / 9.0 );\n\n  #elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n   vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n   float dx0 = - texelSize.x * shadowRadius;\n   float dy0 = - texelSize.y * shadowRadius;\n   float dx1 = + texelSize.x * shadowRadius;\n   float dy1 = + texelSize.y * shadowRadius;\n\n   shadow = (\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n   ) * ( 1.0 / 9.0 );\n\n  #else // no percentage-closer filtering:\n\n   shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n  #endif\n\n  }\n\n  return shadow;\n\n }\n\n // cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n // vector suitable for 2D texture mapping. This code uses the following layout for the\n // 2D texture:\n //\n // xzXZ\n //  y Y\n //\n // Y - Positive y direction\n // y - Negative y direction\n // X - Positive x direction\n // x - Negative x direction\n // Z - Positive z direction\n // z - Negative z direction\n //\n // Source and test bed:\n // https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n vec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n  // Number of texels to avoid at the edge of each square\n\n  vec3 absV = abs( v );\n\n  // Intersect unit cube\n\n  float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n  absV *= scaleToCube;\n\n  // Apply scale to avoid seams\n\n  // two texels less per square (one texel will do for NEAREST)\n  v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n  // Unwrap\n\n  // space: -1 ... 1 range for each square\n  //\n  // #X##  dim    := ( 4 , 2 )\n  //  # #  center := ( 1 , 1 )\n\n  vec2 planar = v.xy;\n\n  float almostATexel = 1.5 * texelSizeY;\n  float almostOne = 1.0 - almostATexel;\n\n  if ( absV.z >= almostOne ) {\n\n   if ( v.z > 0.0 )\n    planar.x = 4.0 - v.x;\n\n  } else if ( absV.x >= almostOne ) {\n\n   float signX = sign( v.x );\n   planar.x = v.z * signX + 2.0 * signX;\n\n  } else if ( absV.y >= almostOne ) {\n\n   float signY = sign( v.y );\n   planar.x = v.x + 2.0 * signY + 2.0;\n   planar.y = v.z * signY - 2.0;\n\n  }\n\n  // Transform to UV space\n\n  // scale := 0.5 / dim\n  // translate := ( center + 0.5 ) / dim\n  return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n }\n\n float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n  vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n  // for point lights, the uniform @vShadowCoord is re-purposed to hold\n  // the vector from the light to the world-space position of the fragment.\n  vec3 lightToPosition = shadowCoord.xyz;\n\n  // dp = normalized distance from light to fragment position\n  float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n  dp += shadowBias;\n\n  // bd3D = base direction 3D\n  vec3 bd3D = normalize( lightToPosition );\n\n  #if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n   vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n   return (\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n   ) * ( 1.0 / 9.0 );\n\n  #else // no percentage-closer filtering\n\n   return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n  #endif\n\n }\n\n#endif\n",e.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n #if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0//Egret\n\n  uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n  varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n #endif\n\n #if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0//Egret\n\n  uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n  varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n #endif\n\n #if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0//Egret\n\n  uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n  varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n #endif\n\n /*\n #if NUM_RECT_AREA_LIGHTS > 0\n\n  // TODO (abelnation): uniforms for area light shadows\n\n #endif\n */\n\n#endif\n",e.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n #if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0//Egret\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n  vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n }\n\n #endif\n\n #if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0//Egret\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n  vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n }\n\n #endif\n\n #if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0//Egret\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n  vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n }\n\n #endif\n\n /*\n #if NUM_RECT_AREA_LIGHTS > 0\n\n  // TODO (abelnation): update vAreaShadowCoord with area light info\n\n #endif\n */\n\n#endif\n",e.shadowmask_pars_fragment="float getShadowMask() {\n\n float shadow = 1.0;\n\n #ifdef USE_SHADOWMAP\n\n #if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0//Egret\n\n DirectionalLight directionalLight;\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n  // directionalLight = directionalLights[ i ];\n  directionalLight.shadow = int(directionalLights[i * 12 + 6]);\n  directionalLight.shadowBias = directionalLights[i * 12 + 7];\n  directionalLight.shadowRadius = directionalLights[i * 12 + 8];\n  directionalLight.shadowMapSize = vec2(directionalLights[i * 12 + 9], directionalLights[i * 12 + 10]);\n  shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n }\n\n #endif\n\n #if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0//Egret\n\n SpotLight spotLight;\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n  // spotLight = spotLights[ i ];\n  spotLight.shadow = int(spotLights[i * 18 + 13]);\n  spotLight.shadowBias = spotLights[i * 18 + 14];\n  spotLight.shadowRadius = spotLights[i * 18 + 15];\n  spotLight.shadowMapSize = vec2(spotLights[i * 18 + 16], spotLights[i * 18 + 17]);\n  shadow *= bool(spotLight.shadow) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n }\n\n #endif\n\n #if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0//Egret\n\n PointLight pointLight;\n\n // #pragma unroll_loop\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n  // pointLight = pointLights[ i ];\n  pointLight.shadow = int(pointLights[i * 15 + 8]);\n  pointLight.shadowBias = pointLights[i * 15 * 9];\n  pointLight.shadowRadius = pointLights[i * 15 * 10];\n  pointLight.shadowMapSize = vec2(pointLights[i * 15 * 11],pointLights[i * 15 * 12]);\n  pointLight.shadowCameraNear = pointLights[i * 15 * 13];\n  pointLight.shadowCameraFar = pointLights[i * 15 * 14];\n  shadow *= bool(pointLight.shadow) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n }\n\n #endif\n\n /*\n #if NUM_RECT_AREA_LIGHTS > 0\n\n  // TODO (abelnation): update shadow for Area light\n\n #endif\n */\n\n #endif\n\n return shadow;\n\n}\n",e.skinbase_vertex="#ifdef USE_SKINNING\n\n mat4 boneMatX = getBoneMatrix( skinIndex.x );\n mat4 boneMatY = getBoneMatrix( skinIndex.y );\n mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",e.skinning_pars_vertex="#ifdef USE_SKINNING\n\n // Modify egret.\n // uniform_mat4 bindMatrix;\n // uniform_mat4 bindMatrixInverse;\n\n #ifdef BONE_TEXTURE\n\n  uniform sampler2D boneTexture;\n  uniform int boneTextureSize;\n\n  mat4 getBoneMatrix( const in float i ) {\n\n   float j = i * 4.0;\n   float x = mod( j, float( boneTextureSize ) );\n   float y = floor( j / float( boneTextureSize ) );\n\n   float dx = 1.0 / float( boneTextureSize );\n   float dy = 1.0 / float( boneTextureSize );\n\n   y = dy * ( y + 0.5 );\n\n   vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n   vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n   vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n   vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n   mat4 bone = mat4( v1, v2, v3, v4 );\n\n   return bone;\n\n  }\n\n #else\n\n  uniform mat4 boneMatrices[ MAX_BONES ];\n\n  mat4 getBoneMatrix( const in float i ) {\n\n   mat4 bone = boneMatrices[ int(i) ];\n   return bone;\n\n  }\n\n #endif\n\n#endif\n",e.skinning_vertex="#ifdef USE_SKINNING\n\n // Modify Egret.\n // vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n vec4 skinVertex = vec4( transformed, 1.0 );\n\n vec4 skinned = vec4( 0.0 );\n skinned += boneMatX * skinVertex * skinWeight.x;\n skinned += boneMatY * skinVertex * skinWeight.y;\n skinned += boneMatZ * skinVertex * skinWeight.z;\n skinned += boneMatW * skinVertex * skinWeight.w;\n\n // Modify Egret.\n // transformed = ( bindMatrixInverse * skinned ).xyz;\n transformed = skinned.xyz;\n\n#endif\n",e.skinnormal_vertex="#ifdef USE_SKINNING\n\n mat4 skinMatrix = mat4( 0.0 );\n skinMatrix += skinWeight.x * boneMatX;\n skinMatrix += skinWeight.y * boneMatY;\n skinMatrix += skinWeight.z * boneMatZ;\n skinMatrix += skinWeight.w * boneMatW;\n \n // Modify egret.\n // skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\n objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",e.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n vec4 texelSpecular = texture2D( specularMap, vUv );\n specularStrength = texelSpecular.r;\n\n#else\n\n specularStrength = 1.0;\n\n#endif",e.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n uniform sampler2D specularMap;\n\n#endif",e.tonemapping_fragment="#if defined( TONE_MAPPING )\n\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n",e.tonemapping_pars_fragment="#ifndef saturate\n #define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n return toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n color *= toneMappingExposure;\n return saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\n // John Hable's filmic operator from Uncharted 2 video game\n color *= toneMappingExposure;\n return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n color *= toneMappingExposure;\n color = max( vec3( 0.0 ), color - 0.004 );\n return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n",e.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n varying vec2 vUv2;\n\n#endif",e.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n attribute vec2 uv2;\n varying vec2 vUv2;\n\n#endif",e.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n vUv2 = uv2;\n\n#endif",e.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n varying vec2 vUv;\n\n#endif",e.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n varying vec2 vUv;\n uniform mat3 uvTransform;\n\n#endif\n",e.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n #if defined FLIP_V \n  vUv = ( uvTransform * vec3( uv.x, 1.0 - uv.y, 1 ) ).xy;//modify egret\n #else\n  vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n #endif\n#endif",e.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n#endif\n"
}(t=e.ShaderChunk||(e.ShaderChunk={}))}(egret3d||(egret3d={}));var egret3d;!function(e){function t(e,t){return Promise.all(e.assets.map(function(e){var t=RES.host,r=t.resourceConfig.getResource(e);return r?t.load(r):(0!==e.indexOf("builtin/")&&console.error("加载不存在的资源",e),Promise.resolve())}))}e.BitmapDataProcessor={onLoadStart:function(e,t){var r=this,n=new egret.ImageLoader;return n.load(t.root+t.url),new Promise(function(e,i){var a=function(){var t=n.data;n.removeEventListener(egret.Event.COMPLETE,a,r),n.removeEventListener(egret.IOErrorEvent.IO_ERROR,o,r),e(t)},o=function(){n.removeEventListener(egret.Event.COMPLETE,a,r),n.removeEventListener(egret.IOErrorEvent.IO_ERROR,o,r);var e=new RES.ResourceManagerError(1001,t.url);i(e)};n.addEventListener(egret.Event.COMPLETE,a,r),n.addEventListener(egret.IOErrorEvent.IO_ERROR,o,r)})},onRemoveStart:function(e,t){return Promise.resolve()}},e.ShaderProcessor={onLoadStart:function(t,r){return __awaiter(this,void 0,void 0,function(){var n,i,a,o,s,c,l,p;return __generator(this,function(u){switch(u.label){case 0:return[4,t.load(r,"json")];case 1:if(n=u.sent(),!n.extensions.KHR_techniques_webgl.shaders||2!==n.extensions.KHR_techniques_webgl.shaders.length)return[3,6];i=n.extensions.KHR_techniques_webgl.shaders,a=0,o=i,u.label=2;case 2:return a<o.length?(s=o[a],c=RES.host.resourceConfig.getResource(s.uri),c?[4,t.load(c)]:[3,4]):[3,5];case 3:l=u.sent(),l?s.uri=l:console.error("Load shader error.",s.uri),u.label=4;case 4:return a++,[3,2];case 5:return[3,7];case 6:console.error("错误的Shader格式数据"),u.label=7;case 7:return p=new e.Shader(n,r.name),paper.Asset.register(p),[2,p]}})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.TextureDescProcessor={onLoadStart:function(t,r){return t.load(r,"json").then(function(n){var i=n.name,a=n.filterMode,o=n.format,s=n.mipmap,c=n.wrap,l=1;"RGB"==o?l=2:"Gray"==o&&(l=3);var p=!0;a.indexOf("linear")<0&&(p=!1);var u=!1;c.indexOf("Repeat")>=0&&(u=!0);var d=!0;void 0!==n.premultiply&&(d=n.premultiply>0);var h=RES.host.resourceConfig.getResource(i);return t.load(h,"bitmapdata").then(function(t){var n=new e.GLTexture2D(r.name,t.source.width,t.source.height,l);return n.uploadImage(t.source,s,p,d,u),paper.Asset.register(n),n})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.TextureProcessor={onLoadStart:function(t,r){return t.load(r,"bitmapdata").then(function(t){var n=new e.GLTexture2D(r.name,t.source.width,t.source.height,1);return n.uploadImage(t.source,!0,!0,!0,!0),paper.Asset.register(n),n})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.MaterialProcessor={onLoadStart:function(t,r){return __awaiter(this,void 0,void 0,function(){var n,i,a,o,s,c,l,p,u,d,h,f,_;return __generator(this,function(m){switch(m.label){case 0:return[4,t.load(r,"json")];case 1:if(n=m.sent(),!(n.materials&&n.materials.length>0))return[3,8];i=0,a=n.materials,m.label=2;case 2:if(!(i<a.length))return[3,8];o=a[i],s=o.extensions.KHR_techniques_webgl.values,c=[];for(l in s)c.push(l);p=0,m.label=3;case 3:return p<c.length?(u=c[p],d=s[u],d&&"string"==typeof d?(h=RES.host.resourceConfig.getResource(d),h?[4,t.load(h,"TextureDesc")]:[3,5]):[3,6]):[3,7];case 4:return f=m.sent(),s[u]=f,[3,6];case 5:console.log("Load image error.",d),s[u]=e.DefaultTextures.MISSING,m.label=6;case 6:return p++,[3,3];case 7:return i++,[3,2];case 8:return _=new e.Material(n,r.name),paper.Asset.register(_),[2,_]}})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.MeshProcessor={onLoadStart:function(t,r){return t.load(r,"bin").then(function(t){var n,i=e.GLTFAsset.parseFromBinary(new Uint32Array(t));if(i.config.meshes)n=new e.Mesh(i.config,i.buffers,r.name);else{n=new e.GLTFAsset,n.name=r.name,n.config=i.config;for(var a=0,o=i.buffers;a<o.length;a++){var s=o[a];n.buffers.push(s)}}return paper.Asset.register(n),n})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.AnimationProcessor={onLoadStart:function(t,r){return t.load(r,"bin").then(function(t){var n=e.GLTFAsset.parseFromBinary(new Uint32Array(t)),i=new e.GLTFAsset;i.name=r.name,i.config=n.config;for(var a=0,o=n.buffers;a<o.length;a++){var s=o[a];i.buffers.push(s)}return paper.Asset.register(i),i})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.PrefabProcessor={onLoadStart:function(e,r){return e.load(r,"json").then(function(e){var n=new paper.Prefab(r.name);return t(e,r).then(function(){return n.$parse(e),paper.Asset.register(n),n})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.SceneProcessor={onLoadStart:function(e,r){return e.load(r,"json").then(function(e){var n=new paper.RawScene(r.name);return t(e,r).then(function(){return n.$parse(e),paper.Asset.register(n),n})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},RES.processor.map("Shader",e.ShaderProcessor),RES.processor.map("Texture",e.TextureProcessor),RES.processor.map("TextureDesc",e.TextureDescProcessor),RES.processor.map("Material",e.MaterialProcessor),RES.processor.map("Mesh",e.MeshProcessor),RES.processor.map("Animation",e.AnimationProcessor),RES.processor.map("Prefab",e.PrefabProcessor),RES.processor.map("Scene",e.SceneProcessor),RES.processor.map("bitmapdata",e.BitmapDataProcessor)}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function e(){}return e.textureRegexp=/([_0-9a-zA-Z]+)[ ]*\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\)[ ]*=[ ]*'(.+)'[ ]*\{[ ]*([a-zA-Z]*)[ ]*([a-zA-Z]*)[ ]*\}/,e.vectorRegexp=/([_0-9a-zA-Z]+)[ ]*\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\)[ ]*=[ ]*\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\)/,e.floatRegexp=/([_0-9a-zA-Z]+)[ ]*\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\)[ ]*=[ ]*([0-9.-]+)/,e.rangeRegexp=/([_0-9a-zA-Z]+)[ ]*\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\)[ ]*\)[ ]*=[ ]*([0-9.-]+)/,e.vector4Regexp=/\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\)/,e.vector3FloatOrRangeRegexp=/([0-9.-]+|\[[0-9.-]+,[0-9.-]+\]),([0-9.-]+|\[[0-9.-]+,[0-9.-]+\]),([0-9.-]+|\[[0-9.-]+,[0-9.-]+\])/,e}();e.RegexpUtil=t,__reflect(t.prototype,"egret3d.RegexpUtil")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){var t=function(){function e(e,t){void 0===t&&(t=0),this._seek=t,this._data=new DataView(e,t)}return e.prototype.seek=function(e){this._seek=e},e.prototype.peek=function(){return this._seek},e.prototype.length=function(){return this._data.byteLength},e.prototype.canread=function(){return this._data.byteLength-this._seek},e.prototype.readStringAnsi=function(){var e=this._data.getUint8(this._seek);this._seek++;for(var t="",r=0;e>r;r++)t+=String.fromCharCode(this._data.getUint8(this._seek)),this._seek++;return t},e.utf8ArrayToString=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];if(0==n)break;var i=0;if(n>224)i=(15&n)<<12,n=e[++r],i|=(63&n)<<6,n=e[++r],i|=63&n,t.push(String.fromCharCode(i));else if(n>192)i=(31&n)<<6,n=e[++r],i|=(63&n)<<6,t.push(String.fromCharCode(i));else{if(n>128)throw new Error("InvalidCharacterError");t.push(String.fromCharCode(e[r]))}}return t.join("")},e.prototype.readStringUtf8=function(){var t=this._data.getInt8(this._seek);this._seek++;var r=new Uint8Array(t);return this.readUint8Array(r),e.utf8ArrayToString(r)},e.prototype.readStringUtf8FixLength=function(t){var r=new Uint8Array(t);return this.readUint8Array(r),e.utf8ArrayToString(r)},e.prototype.readSingle=function(){var e=this._data.getFloat32(this._seek,!0);return this._seek+=4,e},e.prototype.readDouble=function(){var e=this._data.getFloat64(this._seek,!0);return this._seek+=8,e},e.prototype.readInt8=function(){var e=this._data.getInt8(this._seek);return this._seek+=1,e},e.prototype.readUInt8=function(){var e=this._data.getUint8(this._seek);return this._seek+=1,e},e.prototype.readInt16=function(){var e=this._data.getInt16(this._seek,!0);return this._seek+=2,e},e.prototype.readUInt16=function(){var e=this._data.getUint16(this._seek,!0);return this._seek+=2,e},e.prototype.readInt32=function(){var e=this._data.getInt32(this._seek,!0);return this._seek+=4,e},e.prototype.readUInt32=function(){var e=this._data.getUint32(this._seek,!0);return this._seek+=4,e},e.prototype.readUint8Array=function(e,t,r){void 0===e&&(e=null),void 0===t&&(t=0),void 0===r&&(r=-1),0>r&&(r=e.length);for(var n=0;r>n;n++)e[n]=this._data.getUint8(this._seek),this._seek++;return e},e.prototype.readUint8ArrayByOffset=function(e,t,r){void 0===r&&(r=0),0>r&&(r=e.length);for(var n=0;r>n;n++)e[n]=this._data.getUint8(t),t++;return e},e.prototype.readUint16Array=function(e,t,r){void 0===e&&(e=null),void 0===t&&(t=0),void 0===r&&(r=-1),0>r&&(r=e.length);for(var n=0;r>n;n++)e[n]=this.readUInt16();return e},e.prototype.readSingleArray=function(e,t,r){void 0===e&&(e=null),void 0===t&&(t=0),void 0===r&&(r=-1),0>r&&(r=e.length);for(var n=0;r>n;n++)e[n]=this.readSingle();return e},Object.defineProperty(e.prototype,"position",{get:function(){return this.peek()},set:function(e){this.seek(e)},enumerable:!0,configurable:!0}),e.prototype.readBoolean=function(){return this.readUInt8()>0},e.prototype.readByte=function(){return this.readUInt8()},e.prototype.readBytes=function(e,t,r){return void 0===e&&(e=null),void 0===t&&(t=0),void 0===r&&(r=-1),this.readUint8Array(e,t,r)},e.prototype.readUnsignedShort=function(){return this.readUInt16()},e.prototype.readUnsignedInt=function(){return this.readUInt32()},e.prototype.readFloat=function(){return this.readSingle()},e.prototype.readUTFBytes=function(t){var r=new Uint8Array(t);return e.utf8ArrayToString(this.readUint8Array(r))},e.prototype.readSymbolByte=function(){return this.readInt8()},e.prototype.readShort=function(){return this.readInt16()},e.prototype.readInt=function(){return this.readInt32()},e}();e.BinReader=t,__reflect(t.prototype,"egret3d.io.BinReader");var r=function(){function e(){var e=new ArrayBuffer(1024);this._length=0,this._buf=new Uint8Array(e),this._data=new DataView(this._buf.buffer),this._seek=0}return e.prototype.sureData=function(e){for(var t=this._buf.byteLength;t<this._length+e;)t+=1024;if(t!=this._buf.byteLength){for(var r=new Uint8Array(t),n=0;n<this._length;n++)r[n]=this._buf[n];this._buf=r,this._data=new DataView(this._buf.buffer)}this._length+=e},e.prototype.getLength=function(){return length},e.prototype.getBuffer=function(){return this._buf.buffer.slice(0,this._length)},e.prototype.seek=function(e){this._seek=e},e.prototype.peek=function(){return this._seek},e.prototype.writeInt8=function(e){this.sureData(1),this._data.setInt8(this._seek,e),this._seek++},e.prototype.writeUInt8=function(e){this.sureData(1),this._data.setUint8(this._seek,e),this._seek++},e.prototype.writeInt16=function(e){this.sureData(2),this._data.setInt16(this._seek,e,!0),this._seek+=2},e.prototype.writeUInt16=function(e){this.sureData(2),this._data.setUint16(this._seek,e,!0),this._seek+=2},e.prototype.writeInt32=function(e){this.sureData(4),this._data.setInt32(this._seek,e,!0),this._seek+=4},e.prototype.writeUInt32=function(e){this.sureData(4),this._data.setUint32(this._seek,e,!0),this._seek+=4},e.prototype.writeSingle=function(e){this.sureData(4),this._data.setFloat32(this._seek,e,!0),this._seek+=4},e.prototype.writeDouble=function(e){this.sureData(8),this._data.setFloat64(this._seek,e,!0),this._seek+=8},e.prototype.writeStringAnsi=function(e){var t=e.length;this.sureData(t+1),this._data.setUint8(this._seek,t),this._seek++;for(var r=0;t>r;r++)this._data.setUint8(this._seek,e.charCodeAt(r)),this._seek++},e.prototype.writeStringUtf8=function(t){var r=e.stringToUtf8Array(t);this.writeUInt8(r.length),this.writeUint8Array(r)},e.stringToUtf8Array=function(e){for(var t=[],r=0;r<e.length;r++){var n=e.charAt(r),i=n.charCodeAt(0);if(i>65535)throw new Error("InvalidCharacterError");if(i>128)if(2047>i){var a=i>>>6|192,o=63&i|128;t.push(a,o)}else{var a=i>>>12|224,o=i>>>6&63|128,s=63&i|128;t.push(a,o,s)}else t.push(i)}return t},e.prototype.writeStringUtf8DataOnly=function(t){var r=e.stringToUtf8Array(t);this.writeUint8Array(r)},e.prototype.writeUint8Array=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=-1),0>r&&(r=e.length),this.sureData(r);for(var n=t;t+r>n;n++)this._data.setUint8(this._seek,e[n]),this._seek++},Object.defineProperty(e.prototype,"length",{get:function(){return this._seek},enumerable:!0,configurable:!0}),e.prototype.writeByte=function(e){this.writeUInt8(e)},e.prototype.writeBytes=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=0),this.writeUint8Array(e,t,r)},e.prototype.writeUnsignedShort=function(e){this.writeUInt16(e)},e.prototype.writeUnsignedInt=function(e){this.writeUInt32(e)},e.prototype.writeFloat=function(e){this.writeSingle(e)},e.prototype.writeUTFBytes=function(t){var r=e.stringToUtf8Array(t);this.writeUint8Array(r)},e.prototype.writeSymbolByte=function(e){this.writeInt8(e)},e.prototype.writeShort=function(e){this.writeInt16(e)},e.prototype.writeInt=function(e){this.writeInt32(e)},e}();e.BinWriter=r,__reflect(r.prototype,"egret3d.io.BinWriter")}(t=e.io||(e.io={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){function t(e,t){var r="";e=e.replace("\\","/"),t=t.replace("\\","/");for(var n=e.split("/"),i=t.split("/"),a=n.length,o=i.length,s=0;n[s]==i[s]&&a>s&&o>s;)s++;for(var c=0;o-s-1>c;c++)r+="../";return n=n.slice(s,n.length),r+=n.join("/"),r=r.replace(" ","_")}e.getRelativePath=t}(t=e.utils||(e.utils={}))}(egret3d||(egret3d={}));var Stats;!function(e){function t(e,t){void 0===t&&(t=500),null==n?(n=new a,n.container.style.position="absolute",n.container.style.left="0px",n.container.style.top="0px",e.appendChild(n.container)):e.appendChild(n.container),i&&r(),i=setInterval(function(){n.update()},t),egret3d.Performance.enable=!0}function r(){i&&clearInterval(i),null!=n&&n.container.parentNode&&n.container.parentNode.removeChild(n.container),egret3d.Performance.enable=!1}var n,i;e.show=t,e.hide=r;var a=function(){function e(){var e=this;this.mode=0,this.container=document.createElement("div"),this.container.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.7;z-index:1",this.container.addEventListener("click",function(t){t.preventDefault(),e.showPanel(++e.mode%e.container.children.length)},!1),this.fpsPanel=this.addPanel(new o("FPS","#0ff","#002")),this.msPanel=this.addPanel(new o("MS","#0f0","#020")),this.renderPanel=this.addPanel(new o("R%","#0f0","#020")),self.performance&&self.performance.memory&&(this.memPanel=this.addPanel(new o("MB","#f08","#201"))),this.showPanel(0)}return e.prototype.update=function(){var e=egret3d.Performance.getFPS(),t=egret3d.Performance.getEntity("fps"),r=egret3d.Performance.getEntity("all"),n=egret3d.Performance.getEntity("render");if(this.fpsPanel.update(e,100),this.msPanel.update(r.delta,200),this.renderPanel.update(Math.floor(n.delta/t.delta*100),100),this.memPanel){var i=performance.memory;this.memPanel.update(i.usedJSHeapSize/1048576,i.jsHeapSizeLimit/1048576)}},e.prototype.showPanel=function(e){for(var t=0;t<this.container.children.length;t++)this.container.children[t].style.display=t===e?"block":"none";this.mode=e},e.prototype.addPanel=function(e){return this.container.appendChild(e.canvas),e},e}();__reflect(a.prototype,"Stats");var o=function(){function e(e,t,r){this.name=e,this.fg=t,this.bg=r,this.min=1/0,this.max=0,this.PR=Math.round(window.devicePixelRatio||1),this.WIDTH=80*this.PR,this.HEIGHT=48*this.PR,this.TEXT_X=3*this.PR,this.TEXT_Y=2*this.PR,this.GRAPH_X=3*this.PR,this.GRAPH_Y=15*this.PR,this.GRAPH_WIDTH=74*this.PR,this.GRAPH_HEIGHT=30*this.PR,this.canvas=document.createElement("canvas"),this.canvas.width=this.WIDTH,this.canvas.height=this.HEIGHT,this.canvas.style.cssText="width:80px;height:48px",this.context=this.canvas.getContext("2d"),this.context.font="bold "+9*this.PR+"px Helvetica,Arial,sans-serif",this.context.textBaseline="top",this.context.fillStyle=r,this.context.fillRect(0,0,this.WIDTH,this.HEIGHT),this.context.fillStyle=t,this.context.fillText(e,this.TEXT_X,this.TEXT_Y),this.context.fillRect(this.GRAPH_X,this.GRAPH_Y,this.GRAPH_WIDTH,this.GRAPH_HEIGHT),this.context.fillStyle=r,this.context.globalAlpha=.9,this.context.fillRect(this.GRAPH_X,this.GRAPH_Y,this.GRAPH_WIDTH,this.GRAPH_HEIGHT)}return e.prototype.update=function(e,t){this.min=Math.min(this.min,e),this.max=Math.max(this.max,e),this.context.fillStyle=this.bg,this.context.globalAlpha=1,this.context.fillRect(0,0,this.WIDTH,this.GRAPH_Y),this.context.fillStyle=this.fg,this.context.fillText(Math.round(e)+" "+this.name+" ("+Math.round(this.min)+"-"+Math.round(this.max)+")",this.TEXT_X,this.TEXT_Y),this.context.drawImage(this.canvas,this.GRAPH_X+this.PR,this.GRAPH_Y,this.GRAPH_WIDTH-this.PR,this.GRAPH_HEIGHT,this.GRAPH_X,this.GRAPH_Y,this.GRAPH_WIDTH-this.PR,this.GRAPH_HEIGHT),this.context.fillRect(this.GRAPH_X+this.GRAPH_WIDTH-this.PR,this.GRAPH_Y,this.PR,this.GRAPH_HEIGHT),this.context.fillStyle=this.bg,this.context.globalAlpha=.9,this.context.fillRect(this.GRAPH_X+this.GRAPH_WIDTH-this.PR,this.GRAPH_Y,this.PR,Math.round((1-e/t)*this.GRAPH_HEIGHT))},e}();__reflect(o.prototype,"Panel")}(Stats||(Stats={}));var egret3d;!function(e){var t=function(){function t(){}return t.init=function(t){this._isInit||(this._isInit=!0,this.keyboard=new e.KeyboardDevice(window),this.mouse=new e.MouseDevice(t),this.touch=new e.TouchDevice(t))},t.update=function(e){this.keyboard.update(),this.mouse.update(),this.touch.update()},t.isPressed=function(){if(this.mouse.isPressed(0))return!0;var t=this.touch.getTouch(0);return!t||1!=this.touch.touchCount||t.phase!=e.TouchPhase.MOVED&&t.phase!=e.TouchPhase.STATIONARY?!1:!0},t.wasPressed=function(){if(this.mouse.wasPressed(0))return!0;var t=this.touch.getTouch(0);return t&&1==this.touch.touchCount&&t.phase==e.TouchPhase.BEGAN?!0:!1},t.wasReleased=function(){if(this.mouse.wasReleased(0))return!0;var t=this.touch.getTouch(0);return!t||1!=this.touch.touchCount||t.phase!=e.TouchPhase.ENDED&&t.phase!=e.TouchPhase.CANCELED?!1:!0},t.getTouchPoint=function(){var e=this.touch.getTouch(0);return e?(this._touchPoint.x=e.position.x,this._touchPoint.y=e.position.y):(this._touchPoint.x=this.mouse.position.x,this._touchPoint.y=this.mouse.position.y),this._touchPoint},t._isInit=!1,t._touchPoint=new e.Vector2,t}();e.InputManager=t,__reflect(t.prototype,"egret3d.InputManager")}(egret3d||(egret3d={}));var egret3d;!function(e){var t={TAB:9,ENTER:13,SHIFT:16,CONTROL:17,ALT:18,ESCAPE:27,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46,WIN:91},r=function(){function e(e,t){void 0===t&&(t={preventDefault:!1,stopPropagation:!1}),this._element=null,this._keymap={},this._lastmap={},this._keyDownHandler=this._handleKeyDown.bind(this),this._keyUpHandler=this._handleKeyUp.bind(this),this._keyPressHandler=this._handleKeyPress.bind(this),this._cacheKeyCodeMap={},this.attach(e),this.preventDefault=t.preventDefault,this.stopPropagation=t.stopPropagation}return e.prototype.attach=function(e){this._element&&this.detach(),this._element=e,this._element.addEventListener("keydown",this._keyDownHandler,!1),this._element.addEventListener("keypress",this._keyPressHandler,!1),this._element.addEventListener("keyup",this._keyUpHandler,!1)},e.prototype.detach=function(){this._element&&(this._element.removeEventListener("keydown",this._keyDownHandler,!1),this._element.removeEventListener("keypress",this._keyPressHandler,!1),this._element.removeEventListener("keyup",this._keyUpHandler,!1),this._element=null)},e.prototype._handleKeyDown=function(e){var t=e.keyCode||e.charCode,r=this._toKeyIdentifier(t);this._keymap[r]=!0,this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()},e.prototype._handleKeyPress=function(e){var t=e.keyCode||e.charCode;this._toKeyIdentifier(t);this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()},e.prototype._handleKeyUp=function(e){var t=e.keyCode||e.charCode,r=this._toKeyIdentifier(t);delete this._keymap[r],this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()},e.prototype._toKeyIdentifier=function(e){var r;if("string"==typeof e){var n=e.toUpperCase();if(!this._cacheKeyCodeMap[e]){var i=t[n]||n.charCodeAt(0);this._cacheKeyCodeMap[n]=i}r=this._cacheKeyCodeMap[n]}else r=e;for(var a=r.toString(16).toUpperCase(),o=a.length,s=0;4-o>s;s++)a="0"+a;return"U+"+a},e.prototype.update=function(){var e;for(e in this._lastmap)delete this._lastmap[e];for(e in this._keymap)this._keymap.hasOwnProperty(e)&&(this._lastmap[e]=this._keymap[e])},e.prototype.isPressed=function(e){var t=this._toKeyIdentifier(e);return this._keymap[t]},e.prototype.wasPressed=function(e){var t=this._toKeyIdentifier(e);return this._keymap[t]&&!this._lastmap[t]},e.prototype.wasReleased=function(e){var t=this._toKeyIdentifier(e);return!this._keymap[t]&&this._lastmap[t]},e}();e.KeyboardDevice=r,__reflect(r.prototype,"egret3d.KeyboardDevice")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(r){var n=t.call(this)||this;return n._offsetX=0,n._offsetY=0,n._scalerX=1,n._scalerY=1,n._rotated=!1,n.position=new e.Vector2,n.wheel=0,n._buttons=[!1,!1,!1],n._lastbuttons=[!1,!1,!1],n._element=null,n._upHandler=n._handleUp.bind(n),n._moveHandler=n._handleMove.bind(n),n._downHandler=n._handleDown.bind(n),n._wheelHandler=n._handleWheel.bind(n),n._contextMenuHandler=function(e){e.preventDefault()},n.attach(r),n}return __extends(r,t),r.prototype.updateOffsetAndScale=function(e,t,r,n,i){this._offsetX=e,this._offsetY=t,this._scalerX=r,this._scalerY=n,this._rotated=i},r.prototype.convertPosition=function(e,t){var r=e.x,n=e.y;this._rotated?(t.y=(window.innerWidth-r+this._offsetX)*this._scalerX,t.x=(n-this._offsetY)*this._scalerY):(t.x=(r-this._offsetX)*this._scalerX,t.y=(n-this._offsetY)*this._scalerY)},r.prototype.disableContextMenu=function(){this._element&&this._element.addEventListener("contextmenu",this._contextMenuHandler)},r.prototype.enableContextMenu=function(){this._element&&this._element.removeEventListener("contextmenu",this._contextMenuHandler)},r.prototype.attach=function(e){this._element&&this.detach(),this._element=e,this._element.addEventListener("mouseup",this._upHandler,!1),this._element.addEventListener("mousemove",this._moveHandler,!1),this._element.addEventListener("mousedown",this._downHandler,!1),this._element.addEventListener("mousewheel",this._wheelHandler,!1),this._element.addEventListener("DOMMouseScroll",this._wheelHandler,!1)},r.prototype.detach=function(){this._element&&(this._element.removeEventListener("mouseup",this._upHandler,!1),this._element.removeEventListener("mousemove",this._moveHandler,!1),this._element.removeEventListener("mousedown",this._downHandler,!1),this._element.removeEventListener("mousewheel",this._wheelHandler,!1),this._element.removeEventListener("DOMMouseScroll",this._wheelHandler,!1),this._element=null)},r.prototype.update=function(){this._lastbuttons[0]=this._buttons[0],this._lastbuttons[1]=this._buttons[1],this._lastbuttons[2]=this._buttons[2],this.wheel=0},r.prototype.isPressed=function(e){return this._buttons[e]},r.prototype.wasPressed=function(e){return this._buttons[e]&&!this._lastbuttons[e]},r.prototype.wasReleased=function(e){return!this._buttons[e]&&this._lastbuttons[e]},r.prototype._handleUp=function(e){this._buttons[e.button]=!1,this.position.set(e.clientX,e.clientY),this.convertPosition(this.position,this.position),this.dispatchEvent({type:"mouseup",x:this.position.x,y:this.position.y,identifier:e.button})},r.prototype._handleMove=function(e){this.position.set(e.clientX,e.clientY),this.convertPosition(this.position,this.position),this._buttons[e.button]&&this.dispatchEvent({type:"mousemove",x:this.position.x,y:this.position.y,identifier:e.button})},r.prototype._handleDown=function(e){this._buttons[e.button]=!0,this.position.set(e.clientX,e.clientY),this.convertPosition(this.position,this.position),this.dispatchEvent({type:"mousedown",x:this.position.x,y:this.position.y,identifier:e.button})},r.prototype._handleWheel=function(e){e.detail?this.wheel=-1*e.detail:e.wheelDelta?this.wheel=e.wheelDelta/120:this.wheel=0},r}(e.EventDispatcher);e.MouseDevice=t,__reflect(t.prototype,"egret3d.MouseDevice")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.BEGAN=0]="BEGAN",e[e.MOVED=1]="MOVED",e[e.STATIONARY=2]="STATIONARY",e[e.ENDED=3]="ENDED",e[e.CANCELED=4]="CANCELED"}(t=e.TouchPhase||(e.TouchPhase={}));var r=function(){function r(){this.altitudeAngle=Math.PI/2,this.azimuthAngle=0,this.deltaPosition=new e.Vector2,this.fingerId=0,this.maximumPossiblePressure=1,this.position=new e.Vector2,this.pressure=1,this.radius=new e.Vector2,this.type="Direct"}return r.prototype.set=function(r,n,i){this.altitudeAngle=r.rotationAngle,this.azimuthAngle=r.rotationAngle,n==t.BEGAN||n==t.STATIONARY?(this.deltaPosition.x=0,this.deltaPosition.y=0):(i.convertPosition(r,this.deltaPosition),e.Vector2.subtract(this.deltaPosition,this.position,this.deltaPosition)),this.fingerId=r.identifier,this.phase=n,i.convertPosition(r,this.position),this.pressure=r.force,this.radius.x=r.radiusX,this.radius.y=r.radiusY},r.create=function(){return this._pointPool.pop()||new r},r.release=function(e){this._pointPool.push(e)},r._pointPool=[],r}();e.TouchPoint=r,__reflect(r.prototype,"egret3d.TouchPoint");var n=function(e){function n(t,r){void 0===r&&(r={preventDefault:!0,stopPropagation:!0});var n=e.call(this)||this;return n._offsetX=0,n._offsetY=0,n._scalerX=1,n._scalerY=1,n._rotated=!1,n._touchesMap={},n._touches=[],n.touchCount=0,n._startHandler=n._handleTouchStart.bind(n),n._endHandler=n._handleTouchEnd.bind(n),n._moveHandler=n._handleTouchMove.bind(n),n._cancelHandler=n._handleTouchCancel.bind(n),n._element=null,n.attach(t),n.preventDefault=r.preventDefault,n.stopPropagation=r.stopPropagation,n}return __extends(n,e),n.prototype.updateOffsetAndScale=function(e,t,r,n,i){this._offsetX=e,this._offsetY=t,this._scalerX=r,this._scalerY=n,this._rotated=i},n.prototype.convertPosition=function(e,t){this._rotated?(t.y=(window.innerWidth-e.clientX+this._offsetX)*this._scalerX,t.x=(e.clientY-this._offsetY)*this._scalerY):(t.x=(e.clientX-this._offsetX)*this._scalerX,t.y=(e.clientY-this._offsetY)*this._scalerY)},n.prototype.attach=function(e){this._element&&this.detach(),this._element=e,this._element.addEventListener("touchstart",this._startHandler,!1),this._element.addEventListener("touchend",this._endHandler,!1),this._element.addEventListener("touchmove",this._moveHandler,!1),this._element.addEventListener("touchcancel",this._cancelHandler,!1)},n.prototype.detach=function(){this._element&&(this._element.removeEventListener("touchstart",this._startHandler,!1),this._element.removeEventListener("touchend",this._endHandler,!1),this._element.removeEventListener("touchmove",this._moveHandler,!1),this._element.removeEventListener("touchcancel",this._cancelHandler,!1),this._element=null)},n.prototype.update=function(){for(var e in this._touchesMap){var r=this._touchesMap[e];if(r.phase===t.BEGAN&&(r.phase=t.STATIONARY),r.phase===t.MOVED&&(r.phase=t.STATIONARY),r.phase===t.ENDED||r.phase===t.CANCELED){delete this._touchesMap[e];var n=this._touches.indexOf(r);n>-1&&this._touches.splice(n,1),this.touchCount--}}},n.prototype.getTouch=function(e){return this._touches[e]},n.prototype._getTouch=function(e){var t=this._touchesMap[e];return t||(t=r.create(),this._touchesMap[e]=t,this._touches.push(t),this.touchCount++),t},n.prototype._handleTouchStart=function(e){for(var r=0;r<e.changedTouches.length;r++){var n=e.changedTouches[r],i=n.identifier,a=this._getTouch(i);a.set(n,t.BEGAN,this),this.dispatchEvent({type:"touchstart",x:a.position.x,y:a.position.y,identifier:i})}this.preventDefault&&1!=e.isScroll&&!this._element.userTyping&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()},n.prototype._handleTouchEnd=function(e){for(var r=0;r<e.changedTouches.length;r++){var n=e.changedTouches[r],i=n.identifier,a=this._getTouch(i);a.set(n,t.ENDED,this),this.dispatchEvent({type:"touchend",x:a.position.x,y:a.position.y,identifier:i})}this.preventDefault&&1!=e.isScroll&&!this._element.userTyping&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()},n.prototype._handleTouchMove=function(e){for(var r=0;r<e.changedTouches.length;r++){var n=e.changedTouches[r],i=n.identifier,a=this._getTouch(i);a.set(n,t.MOVED,this),this.dispatchEvent({type:"touchmove",x:a.position.x,y:a.position.y,identifier:i})}this.preventDefault&&1!=e.isScroll&&!this._element.userTyping&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()},n.prototype._handleTouchCancel=function(e){for(var r=0;r<e.changedTouches.length;r++){var n=e.changedTouches[r],i=n.identifier,a=this._getTouch(i);a.set(n,t.CANCELED,this),this.dispatchEvent({type:"touchend",x:a.position.x,y:a.position.y,identifier:i})}this.preventDefault&&1!=e.isScroll&&!this._element.userTyping&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()},n}(e.EventDispatcher);e.TouchDevice=n,__reflect(n.prototype,"egret3d.TouchDevice")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e._ibos=[],e._vbo=null,e}return __extends(r,t),r.create=function(e,t,n,i,a){return new r(e,t,n,i,a)},r.prototype.dispose=function(){if(!t.prototype.dispose.call(this))return!1;var r=e.WebGLCapabilities.webgl;if(r){for(var n=0,i=this._ibos;n<i.length;n++){var a=i[n];r.deleteBuffer(a)}this._vbo&&r.deleteBuffer(this._vbo)}return this._ibos.length=0,this._vbo=null,!0},r.prototype._createBuffer=function(){var t=e.WebGLCapabilities.webgl;if(!this._vbo&&t){var r=this.getAccessor(this._glTFMesh.primitives[0].attributes.POSITION||0),n=this.createTypeArrayFromBufferView(this.getBufferView(r),5126),i=t.createBuffer();if(i){this._vbo=i;var a=[];for(var o in this._glTFMesh.primitives[0].attributes)a.push(o);for(var s=0,c=0,l=this._glTFMesh.primitives;c<l.length;c++){var p=l[c];if(void 0!==p.indices)if(this._ibos.length===s){var u=t.createBuffer();u?(this._ibos.push(u),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.getBufferLength(this.getAccessor(p.indices)),this.drawMode),this.uploadSubIndexBuffer(s)):console.error("Create webgl element buffer error.")}else console.error("Error arguments.");else this._ibos.length>0&&console.error("Error arguments.");s++}t.bindBuffer(t.ARRAY_BUFFER,this._vbo),t.bufferData(t.ARRAY_BUFFER,n.byteLength,this.drawMode),this.uploadVertexBuffer(a)}else console.error("Create webgl buffer error.")}},r.prototype.uploadVertexBuffer=function(t,r,n){void 0===t&&(t=null),void 0===r&&(r=0),void 0===n&&(n=0);var i=e.WebGLCapabilities.webgl;if(this._vbo&&i){var a=this._glTFMesh.primitives[0].attributes;if(i.bindBuffer(i.ARRAY_BUFFER,this._vbo),!t){t=[];for(var o in this._glTFMesh.primitives[0].attributes)t.push(o)}if(Array.isArray(t))for(var s=0,c=t;s<c.length;s++){var o=c[s],l=a[o];if(void 0!==l){var p=this.getAccessor(l),u=this.getBufferOffset(p),d=this.createTypeArrayFromAccessor(p,r,n);i.bufferSubData(i.ARRAY_BUFFER,u,d)}else console.warn("Error arguments.")}else{var l=a[t];if(void 0!==l){var p=this.getAccessor(l),u=this.getBufferOffset(p),d=this.createTypeArrayFromAccessor(p);i.bufferSubData(i.ARRAY_BUFFER,u,d)}else console.warn("Error arguments.")}}},r.prototype.uploadSubIndexBuffer=function(t){void 0===t&&(t=0);var r=e.WebGLCapabilities.webgl;if(this._vbo&&r)if(t>=0&&t<this._glTFMesh.primitives.length){var n=this._glTFMesh.primitives[t];if(void 0!==n.indices){var i=this.getAccessor(n.indices),a=this.createTypeArrayFromAccessor(i),o=this._ibos[t];r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,o),r.bufferSubData(r.ELEMENT_ARRAY_BUFFER,0,a)}else console.warn("Error arguments.")}else console.warn("Error arguments.")},r}(e.BaseMesh);e.Mesh=t,__reflect(t.prototype,"egret3d.Mesh")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.RGBA=1]="RGBA",e[e.RGB=2]="RGB",e[e.Gray=3]="Gray",e[e.PVRTC4_RGB=4]="PVRTC4_RGB",e[e.PVRTC4_RGBA=4]="PVRTC4_RGBA",e[e.PVRTC2_RGB=4]="PVRTC2_RGB",e[e.PVRTC2_RGBA=4]="PVRTC2_RGBA"
}(t=e.TextureFormatEnum||(e.TextureFormatEnum={}));var r=function(t){function r(r,n,i){void 0===r&&(r=""),void 0===n&&(n=0),void 0===i&&(i=0);var a=t.call(this,r)||this;a._width=n,a._height=i;var o=e.WebGLCapabilities.webgl;return o&&(a._texture=o.createTexture()),a}return __extends(r,t),Object.defineProperty(r.prototype,"texture",{get:function(){return this._texture},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0}),r}(e.Texture);e.GLTexture=r,__reflect(r.prototype,"egret3d.GLTexture",["egret3d.ITexture"]);var n=function(t){function r(e,r,n,i){void 0===e&&(e=""),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=1);var a=t.call(this,e,r,n)||this;return a._mipmap=!1,a._format=i,a}return __extends(r,t),r.createColorTexture=function(e,t,n,i){var a=!1,o=!0,s=1,c=1,l=new Uint8Array([t,n,i,255]),p=new r(e,s,c,1);return p.uploadImage(l,a,o,!0,!1),p},r.createGridTexture=function(e){for(var t=!1,n=!0,i=256,a=256,o=new Uint8Array(i*i*4),s=0;a>s;s++)for(var c=0;i>c;c++){var l=4*(s*i+c),p=(c-.5*i)*(s-.5*a)>0;o[l]=o[l+1]=o[l+2]=p?0:255,o[l+3]=255}var u=new r(e,i,a,1);return u.uploadImage(o,t,n,!0,!1),u},r.prototype.uploadImage=function(t,r,n,i,a,o,s){void 0===i&&(i=!0),void 0===a&&(a=!1),void 0===o&&(o=!1),void 0===s&&(s=!1),this._mipmap=r;var c=e.WebGLCapabilities.webgl;if(c){c.bindTexture(c.TEXTURE_2D,this._texture),c.pixelStorei(c.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i?1:0),c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL,0);var l=c.RGBA;2===this._format?l=c.RGB:3===this._format&&(l=c.LUMINANCE),ArrayBuffer.isView(t)?c.texImage2D(c.TEXTURE_2D,0,l,this._width,this._height,0,l,c.UNSIGNED_BYTE,t):c.texImage2D(c.TEXTURE_2D,0,l,l,c.UNSIGNED_BYTE,t),r?(c.generateMipmap(c.TEXTURE_2D),n?(c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.LINEAR),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR)):(c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST_MIPMAP_NEAREST))):n?(c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.LINEAR),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.LINEAR)):(c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST));var p=c.CLAMP_TO_EDGE,u=c.CLAMP_TO_EDGE;a&&(p=o?c.MIRRORED_REPEAT:c.REPEAT,u=s?c.MIRRORED_REPEAT:c.REPEAT),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,p),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,u)}},r.prototype.caclByteLength=function(){var e=1;1===this._format?e=4:2===this._format&&(e=3);var t=this.width*this.height*e;return this._mipmap&&(t=t*(1-Math.pow(.25,10))/.75),t},r.prototype.dispose=function(){return t.prototype.dispose.call(this)?(null!==this._texture&&(e.WebGLCapabilities.webgl.deleteTexture(this._texture),this._texture=null),!0):!1},r.prototype.getReader=function(e){if(void 0===e&&(e=!1),null!==this._reader){if(this._reader.gray!==e)throw new Error("get param diff with this.reader");return this._reader}if(1!==this._format)throw new Error("only rgba texture can read");return null===this._texture?null:(null===this._reader&&(this._reader=new i(this._texture,this._width,this._height,e)),this._reader)},r}(r);e.GLTexture2D=n,__reflect(n.prototype,"egret3d.GLTexture2D");var i=function(){function t(t,r,n,i){void 0===i&&(i=!0),this.gray=i,this.width=r,this.height=n;var a=new Uint8Array(this.width*this.height*4);a[0]=2;var o=e.WebGLCapabilities.webgl;if(o){var s=o.createFramebuffer(),c=o.getParameter(o.FRAMEBUFFER_BINDING);o.bindFramebuffer(o.FRAMEBUFFER,s),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,t,0),o.readPixels(0,0,this.width,this.height,o.RGBA,o.UNSIGNED_BYTE,a),o.deleteFramebuffer(s),o.bindFramebuffer(o.FRAMEBUFFER,c)}if(i){this.data=new Uint8Array(this.width*this.height);for(var l=0;r*n>l;l++)this.data[l]=a[4*l]}else this.data=a}return t.prototype.getPixel=function(t,r){var n=t*this.width|0,i=r*this.height|0;if(0>n||n>=this.width||0>i||i>=this.height)return 0;if(this.gray)return this.data[i*this.width+n];var a=4*(i*this.width+n);return e.Color.create(this.data[a],this.data[a+1],this.data[a+2],this.data[a+3])},t}();e.TextureReader=i,__reflect(i.prototype,"egret3d.TextureReader");var a=function(){function t(t,r,n,i,a,o,s,c){void 0===t&&(t=1),void 0===a&&(a=!0),void 0===o&&(o=!1),void 0===s&&(s=!1),void 0===c&&(c=!1),this.width=0,this.height=0;var l=e.WebGLCapabilities.webgl;if(l){this.texture=l.createTexture(),l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a?1:0),l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,0),l.bindTexture(l.TEXTURE_2D,this.texture),this.format=t;var p=l.RGBA;2===t?p=l.RGB:3===t&&(p=l.LUMINANCE);var u=null;l.texImage2D(l.TEXTURE_2D,0,p,r,n,0,p,l.UNSIGNED_BYTE,u),i?(l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.LINEAR),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.LINEAR)):(l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST)),o?(s?l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.MIRRORED_REPEAT):l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.REPEAT),c?l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.MIRRORED_REPEAT):l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.REPEAT)):(l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE))}}return t.prototype.dispose=function(){this.texture&&(e.WebGLCapabilities.webgl.deleteTexture(this.texture),this.texture=null)},t.prototype.caclByteLength=function(){var e=1;1===this.format?e=4:2===this.format&&(e=3);var t=this.width*this.height*e;return t},t}();e.WriteableTexture2D=a,__reflect(a.prototype,"egret3d.WriteableTexture2D",["egret3d.ITexture"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(e,r,n,i,a,o,s){void 0===i&&(i=!1),void 0===a&&(a=!1),void 0===o&&(o=!1),void 0===s&&(s=!1);var c=t.call(this,e)||this;return c._width=r,c._height=n,c._depth=i,c._stencil=a,c._mipmap=o,c._linear=s,c.uploadTexture(),c}return __extends(r,t),r.prototype.uploadTexture=function(){var t=this._width,r=this._height,n=this._depth,i=this._stencil,a=e.WebGLCapabilities.webgl;this._texture=a.createTexture(),this._fbo=a.createFramebuffer(),this._fbo.width=t,this._fbo.height=r,a.bindFramebuffer(a.FRAMEBUFFER,this._fbo),(n||i)&&(this._renderbuffer=a.createRenderbuffer(),a.bindRenderbuffer(a.RENDERBUFFER,this._renderbuffer),n&&i?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,t,r),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,this._renderbuffer)):n?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,t,r),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,this._renderbuffer)):(a.renderbufferStorage(a.RENDERBUFFER,a.STENCIL_INDEX8,t,r),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.STENCIL_ATTACHMENT,a.RENDERBUFFER,this._renderbuffer)),a.bindRenderbuffer(a.RENDERBUFFER,null))},r.prototype.use=function(){},r.prototype.generateMipmap=function(){return!1},r.prototype.dispose=function(){if(!t.prototype.dispose.call(this))return!1;if(null!==this._texture){var r=e.WebGLCapabilities.webgl;r.deleteFramebuffer(this._renderbuffer),r.deleteTexture(this._texture),this._renderbuffer=null,this._texture=null}},r.prototype.caclByteLength=function(){return this.width*this.height*4},Object.defineProperty(r.prototype,"texture",{get:function(){return this._texture},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0}),r}(e.Texture);e.BaseRenderTarget=t,__reflect(t.prototype,"egret3d.BaseRenderTarget");var r=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.uploadTexture=function(){t.prototype.uploadTexture.call(this);var r=e.WebGLCapabilities.webgl;r.bindTexture(r.TEXTURE_2D,this.texture),r.pixelStorei(r.UNPACK_ALIGNMENT,4),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,this._width,this._height,0,r.RGBA,r.UNSIGNED_BYTE,null),this._mipmap?(r.generateMipmap(r.TEXTURE_2D),this._linear?(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR_MIPMAP_LINEAR)):(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST_MIPMAP_NEAREST))):this._linear?(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR)):(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST)),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,this.texture,0),r.bindFramebuffer(r.FRAMEBUFFER,null)},r.prototype.use=function(){var t=e.WebGLCapabilities.webgl;t.bindFramebuffer(t.FRAMEBUFFER,this._fbo)},r.prototype.generateMipmap=function(){if(this._mipmap){var t=e.WebGLCapabilities.webgl;return t.bindTexture(t.TEXTURE_2D,this.texture),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null),!0}return!1},r}(t);e.GlRenderTarget=r,__reflect(r.prototype,"egret3d.GlRenderTarget");var n=function(t){function r(r,n,i,a,o){void 0===a&&(a=!1),void 0===o&&(o=!1);var s=t.call(this,r,n,i,a,o)||this;s.activeCubeFace=0;var c=e.WebGLCapabilities.webgl;c.bindTexture(c.TEXTURE_CUBE_MAP,s.texture),c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR),c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR);for(var l=0;6>l;l++)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,c.RGBA,n,i,0,c.RGBA,c.UNSIGNED_BYTE,null);return c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,c.TEXTURE_CUBE_MAP_POSITIVE_X+s.activeCubeFace,s.texture,0),s}return __extends(r,t),r.prototype.use=function(){var t=e.WebGLCapabilities.webgl;t.bindFramebuffer(t.FRAMEBUFFER,this._fbo),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+this.activeCubeFace,this.texture,0)},r}(t);e.GlRenderTargetCube=n,__reflect(n.prototype,"egret3d.GlRenderTargetCube")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=0,r=function(){function e(e){this.id=t++,this.attributes=[],this.contextUniforms=[],this.uniforms=[],this.program=e}return e}();e.GlProgram=r,__reflect(r.prototype,"egret3d.GlProgram")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[[{componentClass:e.Camera}],[{componentClass:e.Egret2DRenderer}],[{componentClass:[e.DirectionalLight,e.SpotLight,e.PointLight]}]],r._drawCalls=paper.GameObject.globalGameObject.getOrAddComponent(e.DrawCalls),r._camerasAndLights=paper.GameObject.globalGameObject.getOrAddComponent(e.CamerasAndLights),r._renderState=paper.GameObject.globalGameObject.getOrAddComponent(e.WebGLRenderState),r._lightCamera=paper.GameObject.globalGameObject.getOrAddComponent(e.Camera),r._cacheLightCount=0,r._cacheMaterialVerision=-1,r._cacheMaterial=null,r._cacheSubMeshIndex=-1,r._cacheMesh=null,r}return __extends(r,t),r.prototype._renderLightShadow=function(t){for(var r=this._lightCamera,n=this._renderState,i=t.constructor===e.PointLight?e.DefaultMaterials.SHADOW_DISTANCE:e.DefaultMaterials.SHADOW_DEPTH,a=this._drawCalls,o=a.shadowCalls,s=0,c=t.constructor===e.PointLight?6:1;c>s;++s){var l=r.context;t.update(r,s),t.renderTarget.activeCubeFace=s,n.targetAndViewport(r.viewport,t.renderTarget),n.clear(r.clearOption_Color,r.clearOption_Depth,r.backgroundColor),a.shadowFrustumCulling(r);for(var p=0,u=o;p<u.length;p++){var d=u[p];this._draw(l,d,i)}}var h=e.WebGLCapabilities.webgl;h.bindFramebuffer(h.FRAMEBUFFER,null)},r.prototype._renderCamera=function(t,r){if(r){var n=this._drawCalls;n.frustumCulling(t);for(var i=n.opaqueCalls,a=n.transparentCalls,o=0,s=i;o<s.length;o++){var c=s[o];this._draw(t.context,c,c.material)}for(var l=0,p=a;l<p.length;l++){var c=p[l];this._draw(t.context,c,c.material)}}for(var u=0,d=this._groups[1].gameObjects;u<d.length;u++){var h=d[u],f=h.getComponent(e.Egret2DRenderer);t.cullingMask&f.gameObject.layer&&(f.render(t.context,t),this._renderState.clearState())}},r.prototype._draw=function(t,r,n){t.update(r);var i=e.WebGLCapabilities.webgl,a=n._glTFTechnique,o=this._renderState,s=o.getProgram(n,a,t.shaderContextDefine+n.shaderDefine),c=o.useProgram(s);o.updateState(a.states||null),this._updateContextUniforms(s,t,a),this._updateUniforms(s,n,a,c),this._updateAttributes(s,r.mesh,r.subMeshIndex,a,c);var l=r.mesh,p=l.glTFMesh,u=p.primitives[r.subMeshIndex],d=l.getAccessor(p.primitives[0].attributes.POSITION||0),h=l.getBufferOffset(d),f=void 0===u.mode?4:u.mode;if(void 0!==u.indices){var _=l.getAccessor(u.indices);i.drawElements(f,_.count,i.UNSIGNED_SHORT,h)}else i.drawArrays(f,h,d.count)},r.prototype._updateContextUniforms=function(t,r,n){for(var i=e.WebGLCapabilities.webgl,a=n.uniforms,o=t.contextUniforms,s=0,c=o;s<c.length;s++){var l=c[s],p=a[l.name];if(p.semantic){var u=l.location;switch(p.semantic){case"MODEL":i.uniformMatrix4fv(u,!1,r.matrix_m.rawData);break;case"MODELVIEW":i.uniformMatrix4fv(u,!1,r.matrix_mv.rawData);break;case"MODELVIEWPROJECTION":i.uniformMatrix4fv(u,!1,r.matrix_mvp.rawData);break;case"MODELVIEWINVERSE":i.uniformMatrix3fv(u,!1,r.matrix_mv_inverse.rawData);break;case"VIEW":i.uniformMatrix4fv(u,!1,r.matrix_v.rawData);break;case"PROJECTION":i.uniformMatrix4fv(u,!1,r.matrix_p.rawData);break;case"_VIEWPROJECTION":i.uniformMatrix4fv(u,!1,r.matrix_vp.rawData);break;case"_CAMERA_POS":i.uniform3fv(u,r.cameraPosition);break;case"_CAMERA_FORWARD":i.uniform3fv(u,r.cameraForward);break;case"CAMERA_UP":i.uniform3fv(u,r.cameraUp);break;case"JOINTMATRIX":i.uniformMatrix4fv(u,!1,r.drawCall.renderer.boneMatrices);break;case"_DIRECTLIGHTS":r.directLightCount>0&&i.uniform1fv(u,r.directLightArray);break;case"_POINTLIGHTS":r.pointLightCount>0&&i.uniform1fv(u,r.pointLightArray);break;case"_SPOTLIGHTS":r.spotLightCount>0&&i.uniform1fv(u,r.spotLightArray);break;case"_AMBIENTLIGHTCOLOR":i.uniform3fv(u,r.ambientLightColor);break;case"_DIRECTIONSHADOWMAT":i.uniformMatrix4fv(u,!1,r.directShadowMatrix);break;case"_SPOTSHADOWMAT":i.uniformMatrix4fv(u,!1,r.spotShadowMatrix);break;case"_POINTSHADOWMAT":i.uniformMatrix4fv(u,!1,r.pointShadowMatrix);break;case"_DIRECTIONSHADOWMAP":var d=r.directShadowMaps.length;if(d>0&&l.textureUnits){var h=l.textureUnits;i.uniform1iv(u,h);for(var f=0,_=h.length;_>f;f++)r.directShadowMaps[f]&&(i.activeTexture(i.TEXTURE0+h[f]),i.bindTexture(i.TEXTURE_2D,r.directShadowMaps[f]))}break;case"_POINTSHADOWMAP":var m=r.pointShadowMaps.length;if(m>0&&l.textureUnits){var h=l.textureUnits;i.uniform1iv(u,h);for(var f=0,_=h.length;_>f;f++)r.pointShadowMaps[f]&&(i.activeTexture(i.TEXTURE0+h[f]),i.bindTexture(i.TEXTURE_2D,r.pointShadowMaps[f]))}break;case"_SPOTSHADOWMAP":var v=r.spotShadowMaps.length;if(v>0&&l.textureUnits){var h=l.textureUnits;i.uniform1iv(u,h);for(var f=0,_=h.length;_>f;f++)r.spotShadowMaps[f]&&(i.activeTexture(i.TEXTURE0+h[f]),i.bindTexture(i.TEXTURE_2D,r.spotShadowMaps[f]))}break;case"_LIGHTMAPTEX":if(l.textureUnits&&1===l.textureUnits.length&&r.lightmap){var g=l.textureUnits[0];i.uniform1i(u,g),i.activeTexture(i.TEXTURE0+g),i.bindTexture(i.TEXTURE_2D,r.lightmap._texture)}else console.error("Error texture unit.");break;case"_LIGHTMAPINTENSITY":i.uniform1f(u,r.lightmapIntensity);break;case"_REFERENCEPOSITION":i.uniform4fv(u,r.lightPosition);break;case"_NEARDICTANCE":i.uniform1f(u,r.lightShadowCameraNear);break;case"_FARDISTANCE":i.uniform1f(u,r.lightShadowCameraFar);break;case"_FOG_COLOR":i.uniform3fv(u,r.fogColor);break;case"_FOG_DENSITY":i.uniform1f(u,r.fogDensity);break;case"_FOG_NEAR":i.uniform1f(u,r.fogNear);break;case"_FOG_FAR":i.uniform1f(u,r.fogFar);break;default:console.warn("不识别的Uniform语义:"+p.semantic)}}}},r.prototype._updateUniforms=function(t,r,n,i){var a=this._cacheMaterial!==r||this._cacheMaterialVerision!==r._version||i;if(a){this._cacheMaterial=r,this._cacheMaterialVerision=r._version;for(var o=e.WebGLCapabilities.webgl,s=n.uniforms,c=t.uniforms,l=0,p=c;l<p.length;l++){var u=p[l],d=s[u.name];if(!d.semantic){var h=u.location,f=d.value;switch(d.type){case 35670:case 5124:u.size>1?o.uniform1iv(h,f):o.uniform1i(h,f);break;case 35671:case 35667:o.uniform2iv(h,f);break;case 35672:case 35668:o.uniform3iv(h,f);break;case 35673:case 35669:o.uniform4iv(h,f);break;case 5126:u.size>1?o.uniform1fv(h,f):o.uniform1f(h,f);break;case 35664:o.uniform2fv(h,f);break;case 35665:o.uniform3fv(h,f);break;case 35666:o.uniform4fv(h,f);break;case 35674:o.uniformMatrix2fv(h,!1,f);break;case 35675:o.uniformMatrix3fv(h,!1,f);break;case 35676:o.uniformMatrix4fv(h,!1,f);break;case 35678:if(u.textureUnits&&1===u.textureUnits.length){var _=u.textureUnits[0];o.uniform1i(h,_),o.activeTexture(o.TEXTURE0+_),o.bindTexture(o.TEXTURE_2D,f._texture)}else console.error("Error texture unit")}}}}},r.prototype._updateAttributes=function(t,r,n,i,a){var o=a||this._cacheSubMeshIndex!==n||this._cacheMesh!==r;if(o){this._cacheSubMeshIndex=n,this._cacheMesh=r;var s=e.WebGLCapabilities.webgl,c=r.glTFMesh.primitives[n],l=t.attributes,p=i.attributes;s.bindBuffer(s.ARRAY_BUFFER,r._vbo);for(var u=0,d=l;u<d.length;u++){var h=d[u],f=p[h.name],_=h.location,m=c.attributes[f.semantic];if(void 0!==m){var v=r.getAccessor(m),g=r.getBufferOffset(v),y=r.getAccessorTypeCount(v.type);s.vertexAttribPointer(_,y,v.componentType,v.normalized?!0:!1,0,g),s.enableVertexAttribArray(_)}else s.disableVertexAttribArray(_)}var b=r._ibos[n];b&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,b)}},r.prototype.onUpdate=function(){var t=e.WebGLCapabilities.webgl;if(t){e.Performance.startCounter("render");var r=!1,n=0===paper.Application.playerMode,i=this._renderState,a=this._camerasAndLights.cameras,o=this._camerasAndLights.lights,s=paper.Application.sceneManager.editorScene;if(this._drawCalls.drawCallCount=0,o.length>0){r=!0,this._cacheLightCount=0;for(var c=0,l=o;c<l.length;c++){var p=l[c];this._cacheLightCount++,p.castShadows&&this._renderLightShadow(p)}}else this._cacheLightCount>0&&(r=!0,this._cacheLightCount=0);if(a.length>0)for(var u=0,d=a;u<d.length;u++){var h=d[u],f=n?h.gameObject.scene!==s:h.gameObject.scene===s;if(f&&r&&h.context.updateLights(o,h.gameObject.scene.ambientColor),0===h.postQueues.length)f&&(i.targetAndViewport(h.viewport,h.renderTarget),i.clear(h.clearOption_Color,h.clearOption_Depth,h.backgroundColor)),this._renderCamera(h,f),f&&h.renderTarget&&h.renderTarget.generateMipmap()&&i.clearState();else for(var _=0,m=h.postQueues;_<m.length;_++){m[_]}}else i.clear(!0,!0,e.Color.BLACK);e.Performance.endCounter("render")}},r}(paper.BaseSystem);e.WebGLRenderSystem=t,__reflect(t.prototype,"egret3d.WebGLRenderSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){function t(e){r(e.gameObjects)}function r(e){u.length=0,d=0;for(var t={},r=0,a=e;r<a.length;r++){var o=a[r];n(o,t)}console.log("合并前:"+d);var s=0;for(var c in t)for(var l=t[c],p=0,h=l;p<h.length;p++){var f=h[p];i(f),s++}console.log("合并后:"+s+"节省:"+(d-s)),u.length=0}function n(t,r,i){if(!(u.indexOf(t.uuid)>=0)){u.push(t.uuid);for(var a=0,o=t.transform.children;a<o.length;a++){var s=o[a];s&&n(s.gameObject,r,i)}if(t.isStatic){var c=t.getComponent(e.MeshFilter),l=t.getComponent(e.MeshRenderer);if(c&&c.mesh&&l&&l.materials&&!(l.materials.length<1)){d++;var p=l.materials,f=c.mesh,_=l.lightmapIndex+"_";p.forEach(function(e){_=_+"_"+e.uuid}),r[_]||(r[_]=[],r[_].push(new h));var m=r[_],v=m[m.length-1];v.vertexCount+f.vertexCount>e.MAX_VERTEX_COUNT_PER_BUFFER&&(v=new h,r[_].push(v)),v.root||(v.root=i?i:t,v.lightmapIndex=l.lightmapIndex);for(var g=f.glTFMesh.primitives,y=0;y<g.length;y++){var b=g[y];for(var E in g[y].attributes){var x=E;v.meshAttribute[x]||(v.vertexBufferSize+=f.getAccessorTypeCount(f.getAccessor(b.attributes[E]).type)),v.meshAttribute[x]=x}v.indexBufferTotalSize+=f.getBufferLength(f.getAccessor(b.indices))/Uint16Array.BYTES_PER_ELEMENT}v.vertexCount+=f.vertexCount,v.instances.push(t)}}}}function i(t){var r=a(t),n=t.root,i=n.getComponent(e.MeshFilter);i.mesh=r}function a(t){p.inverse(t.root.transform.getWorldMatrix());var r=t.meshAttribute,n=[],i=[],a={};for(var u in r)a[u]=[],n.push(u);for(var d=0,h=0,f=0,_=t.instances;f<_.length;f++){for(var m=_[f],v=m.getComponent(e.MeshFilter),g=(m.getComponent(e.MeshRenderer),m.transform.getWorldMatrix()),y=v.mesh,b=y.glTFMesh.primitives,E=!0,x=0;x<b.length;x++){var T=b[x];if(E){E=!1;for(var S=y.vertexCount,M=b[x].attributes,C=y.createTypeArrayFromAccessor(y.getAccessor(M.POSITION)),O=0;O<C.length;O+=3)c.x=C[O+0],c.y=C[O+1],c.z=C[O+2],g.transformVector3(c,l),p.transformVector3(l,c),a.POSITION.push(c.x,c.y,c.z);if(r.NORMAL)if(M.NORMAL){var A=y.createTypeArrayFromAccessor(y.getAccessor(M.NORMAL)),R=a.NORMAL,P=A.length,L=R.length;R.length+=P;for(var O=0;P>O;O+=3)c.x=A[O+0],c.y=A[O+1],c.z=A[O+2],g.transformNormal(c),p.transformNormal(c),c.normalize(),R[L+O]=c.x,R[L+O+1]=c.y,R[L+O+2]=c.z}else s(a.NORMAL,S,[0,0,0]);if(r.TANGENT)if(M.TANGENT){var I=y.createTypeArrayFromAccessor(y.getAccessor(M.TANGENT)),R=a.TANGENT,P=I.length,w=R.length;R.length+=P;for(var O=0;P>O;O+=4)c.x=I[O+0],c.y=I[O+1],c.z=I[O+2],g.transformNormal(c),p.transformNormal(c),c.normalize(),R[w+O]=c.x,R[w+O+1]=c.y,R[w+O+2]=c.z,R[w+O+3]=I[O+3]}else s(a.TANGENT,S,[0,0,0,1]);r.COLOR_0&&(M.COLOR_0?o(y,M.COLOR_0,a.COLOR_0):s(a.COLOR_0,S,[1,1,1,1])),r.TEXCOORD_0&&(M.TEXCOORD_0?o(y,M.TEXCOORD_0,a.TEXCOORD_0):s(a.TEXCOORD_0,S,[0,0])),r.TEXCOORD_1&&(t.lightmapIndex>=0?void 0!==M.TEXCOORD_1?o(y,M.TEXCOORD_1,a.TEXCOORD_1):o(y,M.TEXCOORD_0,a.TEXCOORD_1):void 0!==M.TEXCOORD_1?o(y,M.TEXCOORD_1,a.TEXCOORD_1):s(a.TEXCOORD_1,S,[0,0])),r.JOINTS_0&&(M.JOINTS_0?o(y,M.JOINTS_0,a.JOINTS_0):s(a.JOINTS_0,S,[0,0,0,0])),r.WEIGHTS_0&&(M.WEIGHTS_0?o(y,M.WEIGHTS_0,a.WEIGHTS_0):s(a.WEIGHTS_0,S,[1,0,0,0])),r.COLOR_1&&(M.COLOR_1?o(y,M.COLOR_1,a.COLOR_1):s(a.COLOR_1,S,[1,1,1,1]))}var D=y.createTypeArrayFromAccessor(y.getAccessor(T.indices));i[x]||(i[x]=[]);for(var O=0;O<D.length;O++){var z=D[O]+d;i[x].push(z),h=z>h?z:h}}d=h+1,v.mesh=null}var N=new e.Mesh(t.vertexCount,t.indexBufferTotalSize,n,void 0,35048),U=N.buffers[0],V=N.buffers[1],G=0;for(var u in a)for(var F=a[u],H=0,B=F;H<B.length;H++){var j=B[H];U[G++]=j}var k=0;for(var u in i)for(var F=i[u],W=0,X=F;W<X.length;W++){var j=X[W];V[k++]=j}for(var Y=0,x=0;x<i.length;x++){var q=i[x].length;N.addSubMesh(Y,q,x),Y+=q}return N}function o(e,t,r){var n=e.createTypeArrayFromAccessor(e.getAccessor(t)),i=n.length,a=r.length;r.length+=i;for(var o=0;i>o;o++)r[a+o]=n[o]}function s(e,t,r){var n=e.length,i=r.length;e.length+=t*i;for(var a=0;t>a;a++)for(var o=0;i>o;o++)e[n++]=r[o]}e.MAX_VERTEX_COUNT_PER_BUFFER=5e4;var c=e.Vector3.create(),l=e.Vector3.create(),p=e.Matrix4.create(),u=[],d=0;e.autoCombine=t,e.combine=r;var h=function(){function e(){this.vertexCount=0,this.vertexBufferSize=0,this.indexBufferTotalSize=0,this.lightmapIndex=-1,this.meshAttribute={},this.root=null,this.instances=[]}return e}();__reflect(h.prototype,"CombineInstance")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e.All="all"}(t=e.PerformanceType||(e.PerformanceType={}));var r=function(){function e(){}return e.getEntity=function(e){return this._entities[e]},e.getFPS=function(){var e=this.getEntity("fps");return e&&e.averageDelta?Math.floor(1e3/e.averageDelta):0},e.updateFPS=function(){this.enable&&(this.endCounter("fps"),this.startCounter("fps",60))},e._getNow=function(){return window.performance?window.performance.now():(new Date).getTime()},e.startCounter=function(e,t){if(void 0===t&&(t=1),this.enable){var r=this._entities[e];r||(r={start:0,end:0,delta:0,_cache:[],averageRange:1,averageDelta:0},this._entities[e]=r),r.start=this._getNow(),r.averageRange=t}},e.endCounter=function(e){if(this.enable){var t=this._entities[e];if(t&&(t.end=this._getNow(),t.delta=t.end-t.start,t.averageRange>1)){t._cache.push(t.delta);var r=t._cache.length;if(r>=t.averageRange){r>t.averageRange&&(t._cache.shift(),r--);for(var n=0,i=0;r>i;i++)n+=t._cache[i];t.averageDelta=n/r}}}},e._entities={},e.enable=!1,e}();e.Performance=r,__reflect(r.prototype,"egret3d.Performance")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function e(){}return e._getNow=function(){return(new Date).getTime()},e._print=function(e){for(var t=0,r=0,n=e;r<n.length;r++){var i=n[r];t+=i.time}console.log("------------------------");for(var a=0,o=e;a<o.length;a++){var i=o[a];console.log(i.key+":用时"+i.time+"平均:"+i.time/i.count+"最大值:"+i.maxTime+" 权重:"+Math.round(i.time/t*100)+"%")}},e.clear=function(){this.profileList.keys.length=0,this.profileList.values.length=0},e.startTime=function(e,t){if(void 0===t&&(t=0),this.debug){var r=this.profileList.keys.indexOf(e);0>r&&(this.profileList.keys.push(e),r=this.profileList.values.length,this.profileList.values.push({key:e,count:0,startTime:0,time:0,group:t,maxTime:0}));var n=this.profileList.values[r];n.count++,n.startTime=this._getNow()}},e.endTime=function(e){if(this.debug){var t=this.profileList.keys.indexOf(e);if(0>t)console.log("invalid key error.",this);else{var r=this.profileList.values[t],n=this._getNow()-r.startTime;r.time+=n,r.maxTime=r.maxTime>n?r.maxTime:n}}},e.printAll=function(){if(this.debug){for(var e={},t=0,r=this.profileList.values;t<r.length;t++){var n=r[t];e[n.group]||(e[n.group]=[]),e[n.group].push(n)}for(var i in e)this._print(e[i])}},e.print=function(e){if(void 0===e&&(e=0),this.debug){for(var t=[],r=0,n=this.profileList.values;r<n.length;r++){var i=n[r];i.group===e&&t.push(i)}this._print(t)}},e.test=function(){for(var e=[],t={},r=0;1e3>r;r++)e.push(r),t[r]=r;for(var n=this._getNow(),i=0,a=e;i<a.length;i++){a[i];console.log("list:")}console.log("list of用时:"+(this._getNow()-n)),n=this._getNow();for(var o in e)console.log("list:");console.log("list in用时:"+(this._getNow()-n)),n=this._getNow();for(var o in t)console.log("map:");console.log("map用时:"+(this._getNow()-n))},e.debug=!1,e.profileList={keys:[],values:[]},e}();e.Profile=t,__reflect(t.prototype,"egret3d.Profile")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=t.call(this)||this;return r.a=e.Vector3.create(),r.b=e.Vector3.create(),r.c=e.Vector3.create(),r}return __extends(r,t),r.create=function(t,n,i){if(void 0===t&&(t=e.Vector3.ZERO),void 0===n&&(n=e.Vector3.ZERO),void 0===i&&(i=e.Vector3.ZERO),this._instances.length>0){var a=this._instances.pop().set(t,n,i);return a._released=!1,a}return(new r).set(t,n,i)},r.prototype.serialize=function(){return[this.a.x,this.a.y,this.a.z,this.b.x,this.b.y,this.b.z,this.c.x,this.c.y,this.c.z]},r.prototype.deserialize=function(e){return this.fromArray(e)},r.prototype.copy=function(e){return this.set(e.a,e.b,e.c)},r.prototype.clone=function(){return r.create(this.a,this.b,this.c)},r.prototype.set=function(t,r,n){return void 0===t&&(t=e.Vector3.ZERO),void 0===r&&(r=e.Vector3.ZERO),void 0===n&&(n=e.Vector3.ZERO),this.a.copy(t),this.b.copy(r),this.c.copy(n),this},r.prototype.fromArray=function(e,t,r,n){void 0===t&&(t=0),void 0===r&&(r=-1),void 0===n&&(n=-1),this.a.fromArray(e,t),this.b.fromArray(e,r>=0?r:t+3),this.c.fromArray(e,n>=0?n:t+6)},r.prototype.getCenter=function(e){return e.add(this.a,this.b).add(this.c).multiplyScalar(1/3)},r.prototype.getNormal=function(t){return e.getNormal(this.a,this.b,this.c,t)},r.prototype.getArea=function(){return e.helpVector3A.subtract(this.c,this.b),e.helpVector3B.subtract(this.a,this.b),.5*e.helpVector3A.cross(e.helpVector3B).length},r._instances=[],r}(paper.BaseRelease);e.Triangle=t,__reflect(t.prototype,"egret3d.Triangle",["paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(t){var r=function(e){function t(t,r){return e.call(this,t,r)||this}return __extends(t,e),t.CHANGE_SCENE="changeScene",t}(t.BaseEvent);t.EditorEvent=r,__reflect(r.prototype,"paper.editor.EditorEvent");var n=function(){function n(){}return n.init=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(r){switch(r.label){case 0:return this.eventDispatcher=new t.EventDispatcher,e.createUUID=t.generateUuid,this.initEditEnvironment(),RES.FEATURE_FLAG.FIX_DUPLICATE_LOAD=0,[4,RES.loadConfig("resource/default.res.json","resource/")];case 1:return r.sent(),this.editorSceneModel=new t.EditorSceneModel,this.editorSceneModel.init(),[2]}})})},Object.defineProperty(n,"activeEditorModel",{get:function(){return this._activeEditorModel},enumerable:!0,configurable:!0}),n.setActiveModel=function(e){this.activeScene(e.scene),this._activeEditorModel=e,this.editorSceneModel.editorModel=e,this.dispatchEvent(new r(r.CHANGE_SCENE))},n.activeScene=function(t){if(e.Application.sceneManager.activeScene){var r=e.Application.sceneManager.activeScene.getRootGameObjects();r.forEach(function(e){e.activeSelf=!1})}e.Application.sceneManager.activeScene=t;var n=e.Application.sceneManager.activeScene.getRootGameObjects();n.forEach(function(e){e.activeSelf=!0})},n.editScene=function(e){return __awaiter(this,void 0,void 0,function(){var r,n,i;return __generator(this,function(a){switch(a.label){case 0:return[4,RES.getResAsync(e)];case 1:return r=a.sent(),r&&(this.activeEditorModel&&this.activeEditorModel.scene.destroy(),n=r.createInstance(!0),i=new t.EditorModel,i.init(n,"scene",e),this.setActiveModel(i),this.currentEditInfo={url:e,type:"scene"}),[2]}})})},n.editPrefab=function(r){return __awaiter(this,void 0,void 0,function(){var n,i,a,o,s;return __generator(this,function(c){switch(c.label){case 0:return[4,RES.getResAsync(r)];case 1:return n=c.sent(),n&&(this.activeEditorModel&&this.activeEditorModel.scene.destroy(),i=e.Scene.createEmpty("prefabEditScene",!1),a=n.createInstance(i,!0),o=new t.EditorModel,o.init(i,"prefab",r),s=function(e){e.extras={};for(var t=0,r=e.components;t<r.length;t++){var n=r[t];n.extras={}}for(var i=0;i<e.transform.children.length;i++){var a=e.transform.children[i].gameObject;o.isPrefabChild(a)&&s(a)}},s(a),this.setActiveModel(o),this.currentEditInfo={url:r,type:"prefab"}),[2]}})})},n.refresh=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return this.activeEditorModel&&this.activeEditorModel.scene.destroy(),[4,RES.loadConfig("resource/default.res.json","resource/")];case 1:if(e.sent(),this.currentEditInfo)switch(this.currentEditInfo.type){case"scene":this.editScene(this.currentEditInfo.url);break;case"prefab":this.editPrefab(this.currentEditInfo.url)}return[2]}})})},n.undo=function(){this.activeEditorModel&&this.activeEditorModel.history.back()},n.redo=function(){this.activeEditorModel&&this.activeEditorModel.history.forward()},n.deserializeHistory=function(e){this.activeEditorModel.history.deserialize(e)},n.serializeHistory=function(){var e=this.activeEditorModel.history.serialize();return JSON.stringify(e)},n.addEventListener=function(e,t,r,n){void 0===n&&(n=0),this.eventDispatcher.addEventListener(e,t,r,n)},n.removeEventListener=function(e,t,r){this.eventDispatcher.removeEventListener(e,t,r)},n.dispatchEvent=function(e){this.eventDispatcher.dispatchEvent(e)},n.initEditEnvironment=function(){egret3d.runEgret({antialias:!1,playerMode:2})},n}();t.Editor=n,__reflect(n.prototype,"paper.editor.Editor")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(){var r=t.call(this)||this;return r.constant=0,r.normal=e.Vector3.create(),r}return __extends(r,t),r.create=function(t,n){if(void 0===t&&(t=e.Vector3.ZERO),void 0===n&&(n=0),this._instances.length>0){var i=this._instances.pop().set(t,n);return i._released=!1,i}return(new r).set(t,n)},r.prototype.serialize=function(){return[this.normal.x,this.normal.y,this.normal.z,this.constant]},r.prototype.deserialize=function(e){return this.constant=e[3],this.normal.fromArray(e),this},r.prototype.clone=function(){return r.create(this.normal,this.constant)
},r.prototype.copy=function(e){return this.set(e.normal,e.constant)},r.prototype.set=function(e,t){return this.constant=t,this.normal.copy(e),this},r.prototype.fromPoint=function(t,r){return void 0===r&&(r=e.Vector3.UP),this.constant=-e.helpVector3A.dot(r,t),this.normal.copy(r),this},r.prototype.fromPoints=function(t,r,n){var i=e.helpVector3A.subtract(n,r).cross(e.helpVector3B.subtract(t,r)).normalize();return this.fromPoint(t,i),this},r.prototype.normalize=function(e){e||(e=this);var t=e.normal.length;return this.constant=e.constant*(1/t),this.normal.multiplyScalar(t,e.normal),this},r.prototype.negate=function(e){return e||(e=this),this.constant=-e.constant,this.normal.negate(e.normal),this},r.prototype.getDistance=function(e){return this.normal.dot(e)+this.constant},r.prototype.raycast=function(e,t){var r=e.getDistanceToPlane(this);return r>0?(t&&(t.distance=r,e.at(r,t.position)),!0):!1},r._instances=[],r}(paper.BaseRelease);e.Plane=t,__reflect(t.prototype,"egret3d.Plane",["paper.ICCS","paper.ISerializable","egret3d.IRaycast"])}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(t){t.context=new t.EventDispatcher;var r;!function(e){e[e.GAMEOBJECT=0]="GAMEOBJECT",e[e.ASSET=1]="ASSET"}(r=t.selectItemType||(t.selectItemType={}));var n=function(e){function t(t,r){return e.call(this,t,r)||this}return __extends(t,e),t.ADD_GAMEOBJECTS="addGameObject",t.DELETE_GAMEOBJECTS="deleteGameObject",t.SELECT_GAMEOBJECTS="selectGame",t.CHANGE_DIRTY="change_dirty",t.CHANGE_PROPERTY="changeProperty",t.CHANGE_EDIT_MODE="changeEditMode",t.CHANGE_EDIT_TYPE="changeEditType",t.ADD_COMPONENT="addComponent",t.REMOVE_COMPONENT="removeComponent",t.UPDATE_GAMEOBJECTS_HIREARCHY="updateGameObjectsHierarchy",t.SAVE_ASSET="saveAsset",t}(t.BaseEvent);t.EditorModelEvent=n,__reflect(n.prototype,"paper.editor.EditorModelEvent");var i;!function(e){e[e.GAMEOBJECT=0]="GAMEOBJECT",e[e.BASECOMPONENT=1]="BASECOMPONENT"}(i=t.ModifyObjectType||(t.ModifyObjectType={}));var a=function(r){function i(){var e=null!==r&&r.apply(this,arguments)||this;return e._dirty=!1,e._cacheIds=[],e}return __extends(i,r),Object.defineProperty(i.prototype,"history",{get:function(){return this._history},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"scene",{get:function(){return this._scene},set:function(e){this._scene=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"contentType",{get:function(){return this._contentType},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"contentUrl",{get:function(){return this._contentUrl},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"dirty",{get:function(){return this._dirty},set:function(e){this._dirty!==e&&(this._dirty=e,this.dispatchEvent(new n(n.CHANGE_DIRTY)))},enumerable:!0,configurable:!0}),i.prototype.init=function(e,r,n){this._history=new t.History,this._scene=e,this._contentType=r,this._contentUrl=n},i.prototype.addState=function(e){e&&(e.editorModel=this,this.history.add(e))},i.prototype.getEditType=function(e,r){for(var n=t.getEditInfo(r),i=0;i<n.length;i++){var a=n[i];if(a.name===e)return a.editType}return null},i.prototype.setTransformProperty=function(e,t,r,n){var i=this.getEditType(e,n);if(null!==i){var a={propName:e,copyValue:this.serializeProperty(r,i),valueEditType:i},o={propName:e,copyValue:this.serializeProperty(t,i),valueEditType:i};this.createModifyComponent(n.gameObject.uuid,n.uuid,[a],[o])}},i.prototype.createModifyGameObjectPropertyState=function(e,r,n){var i=t.ModifyGameObjectPropertyState.create(e,r,n);this.addState(i)},i.prototype.createModifyComponent=function(e,r,n,i){var a=t.ModifyComponentPropertyState.create(e,r,n,i);this.addState(a)},i.prototype.createPrefabState=function(e,r){var n=t.CreatePrefabState.create(e,r);this.addState(n)},i.prototype.serializeProperty=function(e,t){switch(t){case 0:case 1:case 2:case 3:case 4:return e;case 5:case 6:case 7:case 8:case 9:case 11:var r=egret.getQualifiedClassName(e),n=e.serialize(e);return{className:r,serializeData:n};case 19:return e.name;case 10:return e;case 13:var i=e.map(function(e){return{name:e.name,url:e.name}});return i;case 18:if(!e)return"";var a=e.name;return a;case 12:case 14:case 15:case 17:case 20:console.error("not supported!")}},i.prototype.deserializeProperty=function(t,r){switch(r){case 0:case 1:case 2:case 3:case 4:return t;case 5:case 6:case 7:case 8:case 9:case 11:var n=egret.getDefinitionByName(t.className),i=null;return n&&(i=new n,i.deserialize(t.serializeData)),i;case 19:var a=t,o=e.Asset.find(a);return o;case 10:return t;case 13:for(var s=[],c=0,l=t;c<l.length;c++){var p=l[c],u=e.Asset.find(p.url);s.push(u)}return s;case 18:var d=e.Asset.find(t);return d;case 12:case 14:case 15:case 17:case 20:return console.error("not supported!"),null}},i.prototype.createGameObject=function(e,r,n){void 0===n&&(n=null);var i=t.CreateGameObjectState.create(e,r,n);this.addState(i)},i.prototype.addComponent=function(e,r){var n=t.AddComponentState.create(e,r);this.addState(n)},i.prototype.removeComponent=function(r,n){var i=this.getGameObjectByUUid(r);if(i){var a=this.getComponentById(i,n);if(a){var o=e.serialize(a),s=t.RemoveComponentState.create(r,n,o);this.addState(s)}}},i.prototype.getComponentById=function(e,t){for(var r=0;r<e.components.length;r++){var n=e.components[r];if(n.uuid===t)return n}return null},i.prototype.getComponentByAssetId=function(e,t){for(var r=0;r<e.components.length;r++){var n=e.components[r];if(n.extras.linkedID===t)return n}return null},i.prototype.copyGameObject=function(t){var r=__global.runtimeModule.getClipborad(),n=[];this.filtTopHierarchyGameObjects(t),t=this.sortGameObjectsForHierarchy(t);for(var i=0;i<t.length;i++){var a=t[i];n.push({type:"gameObject",serializeData:e.serialize(a)})}r.writeText(JSON.stringify(n),"paper")},i.prototype.pasteGameObject=function(e){var r=__global.runtimeModule.getClipborad(),n=r.readText("paper"),i=JSON.parse(n);if(i&&i.length>0){for(var a=[],o=0;o<i.length;o++)a.push(i[o].serializeData);var s=t.PasteGameObjectsState.create(a,e);this.addState(s)}},i.prototype.duplicateGameObjects=function(e){var r=t.DuplicateGameObjectsState.create(e,this);this.addState(r)},i.prototype.deleteGameObject=function(e){var r=this,n=t.DeleteGameObjectsState.create(e,this),i=[];if(e.forEach(function(e){r.isPrefabChild(e)&&!r.isPrefabRoot(e)&&i.push(e)}),i.length>0){var a=t.BreakPrefabStructState.create(i),o=t.StateGroup.create([a,n]);this.addState(o)}else this.addState(n)},i.prototype.breakPrefab=function(e){var r=this,n=[];if(e.forEach(function(e){(r.isPrefabChild(e)||r.isPrefabRoot(e))&&n.push(e)}),n.length>0){var i=t.BreakPrefabStructState.create(n);this.addState(i)}},i.prototype.updateGameObjectsHierarchy=function(e,r,n){var i=this,a=t.GameObjectHierarchyState.create(e,r,n,this),o=[];if(e.forEach(function(e){!i.isPrefabChild(e)||i.isPrefabRoot(e)||e.transform.parent===r.transform.parent&&"inner"!==n||o.push(e)}),o.length>0){var s=t.BreakPrefabStructState.create(o),c=t.StateGroup.create([s,a]);this.addState(c)}else this.addState(a)},i.prototype.setGameObjectsHierarchy=function(e,t,r){if(e=e.concat(),e.forEach(function(e){e.transform.parent=null}),e.reverse(),"inner"===r)for(var n=t.transform.children.length,i=0;i<e.length;i++){var a=e[i];a.transform.parent=t.transform;var o=t.transform.children.pop();t.transform.children.splice(n,0,o)}else if(t.transform.parent){var n=void 0;switch(r){case"top":n=t.transform.parent.children.indexOf(t.transform);break;case"bottom":n=t.transform.parent.children.indexOf(t.transform)+1}for(var i=0;i<e.length;i++){var a=e[i];a.transform.parent=t.transform.parent;var o=t.transform.parent.children.pop();t.transform.parent.children.splice(n,0,o)}}else{for(var s=this.scene.gameObjects,i=0;i<e.length;i++)s.splice(s.indexOf(e[i]),1);var n=void 0;switch(r){case"top":n=s.indexOf(t);break;case"bottom":n=s.indexOf(t)+1}for(var i=0;i<e.length;i++){var a=e[i];s.splice(n,0,a)}}},i.prototype.filtTopHierarchyGameObjects=function(e){for(var t=!1,r=null,n=e.length-1;n>=0;n--){var i=e[n];for(t=!1,r=i.transform.parent;r;){for(var a=0;a<e.length;a++){var o=e[a];if(o.transform===r){e.splice(n,1),t=!0;break}}if(t)break;r=r.parent}}},i.prototype.getGameObjectByUUid=function(e){for(var t=this.scene.gameObjects,r=0;r<t.length;r++)if(t[r].uuid===e)return t[r];return null},i.prototype.getGameObjectsByUUids=function(e){for(var t,r,n=this.scene.gameObjects,i=[],a=e.concat(),o=0;o<n.length;o++){if(0===a.length)return i;t=n[o],r=a.indexOf(t.uuid),-1!==r&&(i.push(t),a.splice(r,1))}return i},i.prototype.setTargetProperty=function(e,t,r,n){if(5!==n&&6!==n&&7!==n&&9!==n)return void(t[e]=r);if(this.propertyHasGetterSetter(e,t))t[e]=r;else switch(n){case 5:var i=t[e];i.x=r.x,i.y=r.y;break;case 6:var a=t[e];a.x=r.x,a.y=r.y,a.z=r.z;break;case 7:var o=t[e];o.x=r.x,o.y=r.y,o.z=r.z,o.w=r.w;break;case 9:var s=t[e];s.r=r.r,s.g=r.g,s.b=r.b,s.a=r.a}},i.prototype.propertyHasGetterSetter=function(e,t){for(var r,n=Object.getPrototypeOf(t);n;){if(r=Object.getOwnPropertyDescriptor(n,e),r&&r.get&&r.set)return!0;n=Object.getPrototypeOf(n)}return!1},i.prototype.selectGameObject=function(e){this.currentSelected=e,this.dispatchEvent(new n(n.SELECT_GAMEOBJECTS,e))},i.prototype.changeEditMode=function(e){this.currentEditMode=e,this.dispatchEvent(new n(n.CHANGE_EDIT_MODE,e))},i.prototype.changeEditType=function(e){this.dispatchEvent(new n(n.CHANGE_EDIT_TYPE,e))},i.prototype.isPrefabRoot=function(e){return e.extras.prefab?!0:!1},i.prototype.isPrefabChild=function(e){return e.extras.rootID?!0:!1},i.prototype.sortGameObjectsForHierarchy=function(e){function t(e){for(var t=0;t<n.length;t++)if(n[t].gameObject===e)return n[t].path}var r=this;if(e=e.concat(),e.length<2)return e;var n=[];e.forEach(function(e){for(var t=[],i=e;i.transform.parent;)t.unshift(i.transform.parent.children.indexOf(i.transform)),i=i.transform.parent.gameObject;t.unshift(r.scene.gameObjects.indexOf(i)),n.push({gameObject:e,path:t})});for(var i=e.length-1;i>0;){for(var a=0;i>a;a++){var o=t(e[a]),s=t(e[a+1]),c=!1,l=Math.min(o.length,s.length),p=0;e:for(p;l>p;p++)if(o[p]!==s[p]){if(o[p]>s[p]){c=!0;break e}if(o[p]<s[p]){c=!1;break e}}if(p===l&&!c&&o.length>s.length&&(c=!0),c){var u=e[a];e[a]=e[a+1],e[a+1]=u}}i--}return e},i.prototype.createApplyPrefabState=function(e,r,n){var i=t.ApplyPrefabInstanceState.create(e,r,n);this.addState(i)},i.prototype.createRevertPrefabState=function(e,r){var n=t.RevertPrefabInstanceState.create(e,r);this.addState(n)},i.prototype.deepClone=function(e){var t=this;if(!e||"object"!=typeof e)return e;if(e instanceof RegExp)return e;var r=Array.isArray(e)?[]:{};return Object.keys(e).forEach(function(n){e[n]&&"object"==typeof e[n]?r[n]=t.deepClone(e[n]):r[n]=e[n]}),r},i.prototype.updateAsset=function(t,r){void 0===r&&(r=null);var n;this.findAssetRefs(this.scene,t);t instanceof e.Prefab&&(n=e.serialize(r)),this._cacheIds.length=0},i.prototype.findAssetRefs=function(e,t,r){if(void 0===r&&(r=null),!(this._cacheIds.indexOf(e.uuid)>=0)){this._cacheIds.push(e.uuid),r=r||[];for(var n in e){var i=e[n];"object"==typeof i&&this.findFromChildren(i,t,r,e,n)}return r}},i.prototype.findFromChildren=function(t,r,n,i,a){if("object"==typeof t){if(Array.isArray(t)||ArrayBuffer.isView(t))for(var o=0;o<t.length;o++){var s=t[o];this.findFromChildren(s,r,n,t,o)}if(t.constructor===Object)for(var c in t){var s=t[c];this.findFromChildren(s,r,n,t,c)}if(t instanceof e.BaseObject){if(t instanceof e.Asset&&t===r)return void n.push({p:i,k:a});this.findAssetRefs(t,r,n)}}},i.prototype.getAllGameObjectsFromPrefabInstance=function(e,t){if(void 0===t&&(t=null),e){t=t||[],e.extras.linkedID&&t.push(e);for(var r=0;r<e.transform.children.length;r++){var n=e.transform.children[r],i=n.gameObject;this.getAllGameObjectsFromPrefabInstance(i,t)}}return t},i.prototype.modifyMaterialPropertyValues=function(e,t){return __awaiter(this,void 0,void 0,function(){var r,i,a,o,s,c,l,p,u,d,h;return __generator(this,function(f){for(r=0,i=t;r<i.length;r++)if(a=i[r],o=a.propName,s=a.copyValue,c=a.uniformType,s){switch(c){case 35670:e.setBoolean(o,s);break;case 5124:e.setInt(o,s);case 5126:e.setFloat(o,s);break;case 35671:case 35667:case 35664:e.setVector2v(o,s);break;case 35672:case 35668:case 35665:e.setVector3v(o,s);break;case 35673:case 35669:case 35666:e.setVector4v(o,s);break;case 35678:e._glTFTechnique.uniforms[o].value=s;break;case 35674:case 35675:case 35676:e.setMatrixv(o,s)}"renderQueue"===o&&(e.config.materials[0].extensions.paper.renderQueue=s),this.dispatchEvent(new n(n.CHANGE_PROPERTY,{target:e,propName:o,propValue:s}))}l=e.config.materials[0],p=l.extensions.KHR_techniques_webgl.values,u=e._glTFTechnique.uniforms;for(d in u)void 0===u[d].semantic&&(h=u[d].value,Array.isArray(h)?p[d]=h.concat():h instanceof egret3d.GLTexture2D?p[d]=h.name:p[d]=h);return[2]})})},i}(t.EventDispatcher);t.EditorModel=a,__reflect(a.prototype,"paper.editor.EditorModel")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(){function t(){this.viewCache={}}return Object.defineProperty(t.prototype,"editorScene",{get:function(){return e.Application.sceneManager.editorScene},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"editorModel",{set:function(e){this.currentModel&&(this.viewCache[this.currentModel.contentUrl]={position:this.cameraObject.transform.getPosition().clone(),rotation:this.cameraObject.transform.getRotation().clone()}),this.currentModel=e,e&&this.viewCache[e.contentUrl]?(this.cameraObject.transform.setPosition(this.viewCache[e.contentUrl].position),this.cameraObject.transform.setRotation(this.viewCache[e.contentUrl].rotation)):(this.cameraObject.transform.setLocalPosition(0,10,-10),this.cameraObject.transform.lookAt(egret3d.Vector3.ZERO))},enumerable:!0,configurable:!0}),t.prototype.init=function(){this.cameraObject=egret3d.Camera.editor.gameObject;var t=this.cameraObject.getOrAddComponent(egret3d.Camera);t.near=.1,t.far=500,t.backgroundColor.set(.13,.28,.51,1),this.cameraObject.transform.setLocalPosition(0,10,-10),this.cameraObject.transform.lookAt(egret3d.Vector3.ZERO),e.GameObject.globalGameObject.sendMessage("bootstrap")},t}();t.EditorSceneModel=r,__reflect(r.prototype,"paper.editor.EditorSceneModel")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(e){e.EventType={HistoryState:"HistoryState",HistoryAdd:"HistoryAdd",HistoryFree:"HistoryFree"};var t=function(){function t(){this.dispatcher=null,this._locked=0,this._index=-1,this._batchIndex=0,this._states=[],this._batchStates=[],this._events=[]}return t.prototype._free=function(){this._states.length>this._index+1&&(this._states.length=this._index+1,this.dispatcher&&this.dispatcher.dispatchEvent(new e.BaseEvent(e.EventType.HistoryFree,null)))},t.prototype._doState=function(e,t){t?e.undo():e.redo();if(this.dispatcher){var r={isUndo:t};this._events.push(r)}return e.batchIndex>0&&(t?this._index>=0:this._index<this._states.length-1)},t.prototype.back=function(){if(this._index<0||this._batchIndex>0)return!1;for(this._locked|=1;this._doState(this._states[this._index--],!0););if(this.dispatcher&&this._events.length>0){for(var t=0,r=this._events;t<r.length;t++){var n=r[t];this.dispatcher.dispatchEvent(new e.BaseEvent(e.EventType.HistoryState,n))}this._events.length=0}return this._locked&=2,!0},t.prototype.forward=function(){if(this._index>=this._states.length-1||this._batchIndex>0)return!1;for(this._locked|=1;this._doState(this._states[++this._index],!1););if(this.dispatcher&&this._events.length>0){for(var t=0,r=this._events;t<r.length;t++){var n=r[t];this.dispatcher.dispatchEvent(new e.BaseEvent(e.EventType.HistoryState,n))}this._events.length=0}return this._locked&=2,!0},t.prototype.go=function(e){if(this._batchIndex>0)return!1;var t=!1;if(this._index<e)for(;this._index!==e&&this.forward();)t=!0;else for(;this._index!==e&&this.back();)t=!0;return t},t.prototype.add=function(t){0===this._locked&&(this._batchIndex>0?(t.batchIndex=this._batchIndex,this._batchStates.push(t)):(this._states[this._index+1]=t,null!==this.dispatcher&&this.dispatcher.dispatchEvent(new e.BaseEvent(e.EventType.HistoryAdd,event)),this.forward(),this._free()))},t.prototype.beginBatch=function(){this._batchIndex++},t.prototype.endBatch=function(){if(0!==this._batchIndex&&(this._batchIndex--,0===this._batchIndex)){for(var t=this._index+1,r=0,n=this._batchStates;r<n.length;r++){var i=n[r];this._states[t++]=i}null!==this.dispatcher&&this.dispatcher.dispatchEvent(new e.BaseEvent(e.EventType.HistoryAdd,event)),this._batchStates.length=0,this.go(this._states.length-1)}},t.prototype.getState=function(e){return this._states[e]},Object.defineProperty(t.prototype,"enabled",{get:function(){return 0===this._locked},set:function(e){e?this._locked&=1:this._locked|=2},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"count",{get:function(){return this._states.length},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"index",{get:function(){return this._index},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"batchIndex",{get:function(){return this._batchIndex},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"locked",{get:function(){return this._locked},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"states",{get:function(){return this._states},enumerable:!0,configurable:!0}),t.prototype.serialize=function(){for(var e=this.states,t=[],r=0;r<e.length;r++){var n=e[r],i=egret.getQualifiedClassName(n),a={className:i,batchIndex:n.batchIndex,data:n.hasOwnProperty("deserialize")?n.serialize():n.data,autoClear:n.autoClear,isDone:n.isDone};t.push(a)}var o={index:this.index,batchIndex:this.batchIndex,locked:this.locked,statesData:t};return o},t.prototype.deserialize=function(e){for(var t=[],r=e.statesData,n=0;n<r.length;n++){var i=r[n],a=egret.getDefinitionByName(i.className),o=void 0;a&&(o=new a,o.batchIndex=i.batchIndex,o.data=i.hasOwnProperty("deserialize")?i.deserialize(i.data):i.data,o.autoClear=i.autoClear,o.isDone=i.isDone,t.push(o))}var s={states:t,index:e.index,batchIndex:e.batchIndex,locked:e.locked};this._index=s?s.index:-1,this._locked=s?s.locked:0,this._batchIndex=s?s.batchIndex:0,this._states=s?s.states:[]},t}();e.History=t,__reflect(t.prototype,"paper.editor.History")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var egret3d;!function(e){var t=function(e){function t(t){void 0===t&&(t=null);var r=e.call(this)||this;return r.rawData=null,t?r.rawData=t:r.rawData=new Float32Array([1,0,0,0,1,0,0,0,1]),r}return __extends(t,e),t.create=function(){if(this._instances.length>0){var e=this._instances.pop();return e._released=!1,e}return new t},t.prototype.serialize=function(){return this.rawData},t.prototype.deserialize=function(e){return this.fromArray(e)},t.prototype.copy=function(e){return this.fromArray(e.rawData),this},t.prototype.clone=function(){var e=new t;return e.copy(this),e},t.prototype.set=function(e,t,r,n,i,a,o,s,c){return this.rawData[0]=e,this.rawData[3]=t,this.rawData[6]=r,this.rawData[1]=n,this.rawData[4]=i,this.rawData[7]=a,this.rawData[2]=o,this.rawData[5]=s,this.rawData[8]=c,this},t.prototype.identity=function(){return this.set(1,0,0,0,1,0,0,0,1),this},t.prototype.inverse=function(e){var t=e.rawData,r=this.rawData,n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],c=t[5],l=t[6],p=t[7],u=t[8],d=u*s-c*p,h=c*l-u*o,f=p*o-s*l,_=n*d+i*h+a*f;if(0===_)return this.identity();var m=1/_;return r[0]=d*m,r[1]=(a*p-u*i)*m,r[2]=(c*i-a*s)*m,r[3]=h*m,r[4]=(u*n-a*l)*m,r[5]=(a*o-c*n)*m,r[6]=f*m,r[7]=(i*l-p*n)*m,r[8]=(s*n-i*o)*m,this},t.prototype.getNormalMatrix=function(e){return this.setFromMatrix4(e).inverse(this).transpose()},t.prototype.transpose=function(){var e,t=this.rawData;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},t.prototype.setFromMatrix4=function(e){var t=e.rawData;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},t.prototype.determinant=function(){var e=this.rawData,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],c=e[7],l=e[8];return t*a*l-t*o*c-r*i*l+r*o*s+n*i*c-n*a*s},t.prototype.fromArray=function(e,t){void 0===t&&(t=0);for(var r=0;9>r;++r)this.rawData[r]=e[r+t];return this},t.prototype.fromBuffer=function(e,t){return void 0===t&&(t=0),this.rawData=new Float32Array(e,t,9),this},t._instances=[],t}(paper.BaseRelease);e.Matrix3=t,__reflect(t.prototype,"egret3d.Matrix3",["paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.create=function(e){var r=new t;return r.stateList=e,r},t.prototype.redo=function(){for(var e=0;e<this.stateList.length;e++)this.stateList[e].redo();return!0},t.prototype.undo=function(){for(var e=this.stateList.length-1;e>=0;e--)this.stateList[e].undo();return!0},t.prototype.serialize=function(){for(var e=this.stateList,t=[],r=0;r<e.length;r++){var n=e[r],i=egret.getQualifiedClassName(n),a={className:i,batchIndex:n.batchIndex,data:n.serialize?n.serialize():n.data,autoClear:n.autoClear,isDone:n.isDone};t.push(a)}return e},t.prototype.deserialize=function(e){this.stateList=[];for(var t=e,r=0;r<t.length;r++){var n=t[r],i=egret.getDefinitionByName(n.className),a=null;i&&(a=new i,a.batchIndex=n.batchIndex,a.data=n.deserialize?n.deserialize(n.data):n.data,a.autoClear=n.autoClear,a.isDone=n.isDone,this.stateList.push(a))}},t}(e.BaseState);e.StateGroup=t,__reflect(t.prototype,"paper.editor.StateGroup")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.create=function(e,t,n){var i=new r,a={gameObjectUUid:e,newValueList:t,preValueCopylist:n};return i.data=a,i},Object.defineProperty(r.prototype,"stateData",{get:function(){return this.data},enumerable:!0,configurable:!0}),r.prototype.undo=function(){return t.prototype.undo.call(this)?(this.modifyProperty(this.stateData.preValueCopylist),!0):!1},r.prototype.modifyProperty=function(t){var r=this,n=this.stateData.gameObjectUUid,i=this.editorModel.getGameObjectByUUid(n);null!==i&&t.forEach(function(t){return __awaiter(r,void 0,void 0,function(){var r,n,a,o;return __generator(this,function(s){return r=t.propName,n=t.copyValue,a=t.valueEditType,o=this.editorModel.deserializeProperty(n,a),this.editorModel.setTargetProperty(r,i,o,a),this.dispatchEditorModelEvent(e.EditorModelEvent.CHANGE_PROPERTY,{target:i,propName:r,propValue:o}),[2]})})})},r.prototype.redo=function(){return t.prototype.redo.call(this)?(this.modifyProperty(this.stateData.newValueList),!0):!1},r}(e.BaseState);e.ModifyGameObjectPropertyState=t,__reflect(t.prototype,"paper.editor.ModifyGameObjectPropertyState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.toString=function(){return"[class common.ModifyComponentPropertyState]"},r.create=function(e,t,n,i){var a=new r,o={gameObjUUid:e,componentUUid:t,newValueList:n,preValueCopylist:i};return a.data=o,a},Object.defineProperty(r.prototype,"stateData",{get:function(){return this.data},enumerable:!0,configurable:!0}),r.prototype.undo=function(){return t.prototype.undo.call(this)?(this.modifyProperty(this.stateData.preValueCopylist),!0):!1},r.prototype.modifyProperty=function(t){var r,n=this,i=this.stateData.gameObjUUid,a=this.stateData.componentUUid,o=this.editorModel.getGameObjectByUUid(i);o&&(r=this.editorModel.getComponentById(o,a),r&&t.forEach(function(t){return __awaiter(n,void 0,void 0,function(){var n,i,a,o;return __generator(this,function(s){return n=t.propName,i=t.copyValue,a=t.valueEditType,o=this.editorModel.deserializeProperty(i,a),this.editorModel.setTargetProperty(n,r,o,a),this.dispatchEditorModelEvent(e.EditorModelEvent.CHANGE_PROPERTY,{target:r,propName:n,propValue:o}),[2]})})}))},r.prototype.redo=function(){return t.prototype.redo.call(this)?(this.modifyProperty(this.stateData.newValueList),!0):!1},r}(e.BaseState);e.ModifyComponentPropertyState=t,__reflect(t.prototype,"paper.editor.ModifyComponentPropertyState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){var e=null!==r&&r.apply(this,arguments)||this;return e.isFirst=!0,e}return __extends(n,r),n.toString=function(){return"[class common.AddGameObjectState]"},n.create=function(e,t,r){var i=e.map(function(e){return{parentUUID:e.uuid,serializeData:null}}),a=new n;return a.infos=i,a.createType=t,a.mesh=r,a},n.prototype.undo=function(){if(r.prototype.undo.call(this)){for(var e=this.editorModel.getGameObjectsByUUids(this.addList),n=0;n<e.length;n++){var i=e[n];i.destroy()}return this.dispatchEditorModelEvent(t.EditorModelEvent.DELETE_GAMEOBJECTS,this.addList),!0}return!1},n.prototype.redo=function(){if(r.prototype.redo.call(this)){this.addList=[],0===this.infos.length&&this.infos.push({parentUUID:null,serializeData:null});for(var n=0;n<this.infos.length;n++){var i=void 0;this.isFirst?(i=this.createGameObjectByType(this.createType),this.infos[n].serializeData=e.serialize(i)):i=(new e.Deserializer).deserialize(this.infos[n].serializeData,!0,!1,this.editorModel.scene);var a=this.editorModel.getGameObjectByUUid(this.infos[n].parentUUID);a&&(i.transform.parent=a.transform),this.addList.push(i.uuid)}return this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_GAMEOBJECTS,this.addList),this.isFirst=!1,!0}return!1},n.prototype.createGameObjectByType=function(t){var r,n=new e.GameObject;return n.name=t.toLowerCase(),this.mesh&&(r=n.addComponent(egret3d.MeshFilter),r.mesh=this.mesh,n.addComponent(egret3d.MeshRenderer)),n},n}(t.BaseState);t.CreateGameObjectState=r,__reflect(r.prototype,"paper.editor.CreateGameObjectState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){return null!==r&&r.apply(this,arguments)||this}return __extends(n,r),n.toString=function(){return"[class common.deleteGameObjectsState]"},n.create=function(t,r){t=t.concat(),r.filtTopHierarchyGameObjects(t),t=r.sortGameObjectsForHierarchy(t);for(var i=[],a=0;a<t.length;a++){var o=t[a],s=void 0,c=void 0,l=e.serialize(o);o.transform.parent?(s=o.transform.parent.gameObject.uuid,c=o.transform.parent.children.indexOf(o.transform)):(s=void 0,c=r.scene.gameObjects.indexOf(o)),i.push({UUID:o.uuid,oldParentUUID:s,oldIndex:c,serializeData:l})}var p=new n;return p.deleteInfo=i,p},n.prototype.undo=function(){if(r.prototype.undo.call(this)){for(var n=0;n<this.deleteInfo.length;n++){var i=this.deleteInfo[n],a=(new e.Deserializer).deserialize(i.serializeData,!0,!1,this.editorModel.scene),o=this.editorModel.getGameObjectByUUid(i.oldParentUUID);if(o){var s=o.transform.children[i.oldIndex];s?this.editorModel.setGameObjectsHierarchy([a],s.gameObject,"top"):this.editorModel.setGameObjectsHierarchy([a],o,"inner")}else{a.transform.parent=null;var c=this.editorModel.scene.gameObjects,l=c.indexOf(a);c.splice(l,1),c.splice(i.oldIndex,0,a)}}return this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_GAMEOBJECTS,this.deleteInfo.map(function(e){return e.UUID})),!0}return!1},n.prototype.redo=function(){if(r.prototype.redo.call(this)){for(var e=this.deleteInfo.map(function(e){return e.UUID}),n=this.editorModel.getGameObjectsByUUids(e),i=0;i<n.length;i++){var a=n[i];a.destroy()}return this.dispatchEditorModelEvent(t.EditorModelEvent.DELETE_GAMEOBJECTS,e),!0}return!1},n.prototype.serialize=function(){return this.deleteInfo},n.prototype.deserialize=function(e){this.deleteInfo=e},n}(t.BaseState);t.DeleteGameObjectsState=r,__reflect(r.prototype,"paper.editor.DeleteGameObjectsState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){var e=null!==r&&r.apply(this,arguments)||this;return e.firstDo=!0,e}return __extends(n,r),n.toString=function(){return"[class common.DuplicateGameObjectsState]"},n.create=function(t,r){r.filtTopHierarchyGameObjects(t),t=r.sortGameObjectsForHierarchy(t);for(var i=[],a=0;a<t.length;a++){var o=t[a],s=o.uuid,c=o.transform.parent?o.transform.parent.gameObject.uuid:null,l=e.serialize(o);i.push({UUID:s,parentUUID:c,serializeData:l})}var p=new n;return p.duplicateInfo=i,p},n.prototype.undo=function(){if(r.prototype.undo.call(this)){for(var e=this.editorModel.getGameObjectsByUUids(this.addList),n=0;n<e.length;n++){var i=e[n];i.destroy()}return this.dispatchEditorModelEvent(t.EditorModelEvent.DELETE_GAMEOBJECTS,this.addList),!0}return!1},n.prototype.redo=function(){if(r.prototype.redo.call(this)){this.addList=[];for(var n=0;n<this.duplicateInfo.length;n++){var i=this.duplicateInfo[n],a=(new e.Deserializer).deserialize(i.serializeData,!this.firstDo,!1,this.editorModel.scene),o=this.editorModel.getGameObjectByUUid(i.parentUUID);o&&(a.transform.parent=o.transform),this.clearPrefabInfo(a),this.addList.push(a.uuid),this.firstDo&&(i.serializeData=e.serialize(a))}return this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_GAMEOBJECTS,this.addList),this.firstDo=!1,!0}return!1},n.prototype.clearPrefabInfo=function(e){if(this.editorModel.isPrefabChild(e)){e.extras.linkedID=void 0,e.extras.prefab=void 0,e.extras.rootID=void 0;for(var t=0;t<e.transform.children.length;t++)this.clearPrefabInfo(e.transform.children[t].gameObject)}},n.prototype.serialize=function(){return{duplicateInfo:this.duplicateInfo,addList:this.addList}},n.prototype.deserialize=function(e){this.duplicateInfo=e.duplicateInfo,this.addList=e.addList},n}(t.BaseState);t.DuplicateGameObjectsState=r,__reflect(r.prototype,"paper.editor.DuplicateGameObjectsState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){return null!==r&&r.apply(this,arguments)||this}return __extends(n,r),n.toString=function(){return"[class common.PasteGameObjectsState]"},n.create=function(e,t){var r=new n,i=t?t.uuid:null;return r.pasteInfo={parentUUID:i,serializeData:e},r},n.prototype.undo=function(){if(r.prototype.undo.call(this)){for(var e=this.editorModel.getGameObjectsByUUids(this.addList),n=0;n<e.length;n++){var i=e[n];i.destroy()}return this.dispatchEditorModelEvent(t.EditorModelEvent.DELETE_GAMEOBJECTS,this.addList),!0}return!1},n.prototype.redo=function(){if(r.prototype.redo.call(this)){this.addList=[];for(var n=this.editorModel.getGameObjectByUUid(this.pasteInfo.parentUUID),i=this.cacheSerializeData?this.cacheSerializeData:this.pasteInfo.serializeData,a=this.cacheSerializeData?!0:!1,o=0;o<i.length;o++){var s=i[o],c=(new e.Deserializer).deserialize(s,a,!1,this.editorModel.scene);c&&n&&(c.transform.parent=n.transform),this.clearPrefabInfo(c),this.addList.push(c.uuid),i===this.pasteInfo.serializeData&&(this.cacheSerializeData||(this.cacheSerializeData=[]),this.cacheSerializeData.push(e.serialize(c)))}return this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_GAMEOBJECTS,this.addList),!0}return!1},n.prototype.clearPrefabInfo=function(e){if(this.editorModel.isPrefabChild(e)){e.extras.linkedID=void 0,e.extras.prefab=void 0,e.extras.rootID=void 0;for(var t=0;t<e.transform.children.length;t++)this.clearPrefabInfo(e.transform.children[t].gameObject)}},n.prototype.serialize=function(){return{pasteInfo:this.pasteInfo,addList:this.addList}},n.prototype.deserialize=function(e){this.addList=e.addList,this.pasteInfo=e.pasteInfo},n}(t.BaseState);t.PasteGameObjectsState=r,__reflect(r.prototype,"paper.editor.PasteGameObjectsState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){return null!==r&&r.apply(this,arguments)||this}return __extends(n,r),n.toString=function(){return"[class common.AddComponentState]"},n.create=function(e,t){var r=new n,i={gameObjectUUid:e,compClzName:t};return r.data=i,r},Object.defineProperty(n.prototype,"stateData",{get:function(){return this.data},enumerable:!0,configurable:!0}),n.prototype.undo=function(){if(r.prototype.undo.call(this)){var e=this.stateData.gameObjectUUid,n=this.stateData.cacheComponentId,i=this.editorModel.getGameObjectByUUid(e);
if(i){var a=this.editorModel.getComponentById(i,n);a&&(i.removeComponent(a),this.dispatchEditorModelEvent(t.EditorModelEvent.REMOVE_COMPONENT))}return!0}return!1},n.prototype.redo=function(){if(r.prototype.redo.call(this)){var n=this.stateData.gameObjectUUid,i=this.stateData.compClzName,a=this.editorModel.getGameObjectByUUid(n);if(a){if(this.stateData.serializeData)(new e.Deserializer).deserialize(this.data.serializeData,!0,!1,a);else{var o=egret.getDefinitionByName(i),s=a.addComponent(o);this.stateData.serializeData=e.serialize(s),this.stateData.cacheComponentId=s.uuid}this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_COMPONENT)}return!0}return!1},n}(t.BaseState);t.AddComponentState=r,__reflect(r.prototype,"paper.editor.AddComponentState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){return null!==r&&r.apply(this,arguments)||this}return __extends(n,r),n.toString=function(){return"[class common.RemoveComponentState]"},n.create=function(e,t,r){var i=new n,a={gameObjectUUid:e,componentUUid:t,cacheSerializeData:r};return i.data=a,i},Object.defineProperty(n.prototype,"stateData",{get:function(){return this.data},enumerable:!0,configurable:!0}),n.prototype.undo=function(){if(r.prototype.undo.call(this)){var n=this.editorModel.getGameObjectByUUid(this.stateData.gameObjectUUid);return n&&((new e.Deserializer).deserialize(this.stateData.cacheSerializeData,!0,!1,n),this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_COMPONENT)),!0}return!1},n.prototype.redo=function(){if(r.prototype.redo.call(this)){var e=this.stateData.gameObjectUUid,n=this.stateData.componentUUid,i=this.editorModel.getGameObjectByUUid(e);if(i){var a=this.editorModel.getComponentById(i,n);a&&(i.removeComponent(a),this.dispatchEditorModelEvent(t.EditorModelEvent.REMOVE_COMPONENT))}return!0}return!1},n}(t.BaseState);t.RemoveComponentState=r,__reflect(r.prototype,"paper.editor.RemoveComponentState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.gameObjectsInfo=[],e}return __extends(r,t),r.create=function(e,t,n,i){e=e.concat(),i.filtTopHierarchyGameObjects(e);for(var a=i.sortGameObjectsForHierarchy(e),o=[],s=0;s<a.length;s++){var c=a[s],l=void 0,p=void 0;if(c.transform.parent){var u=c.transform.parent.children.indexOf(c.transform);++u<c.transform.parent.children.length?(l=c.transform.parent.children[u].gameObject.uuid,p="top"):(l=c.transform.parent.gameObject.uuid,p="inner")}else{var d=i.scene.gameObjects,u=d.indexOf(c);++u<d.length?(l=d[u].uuid,p="top"):(l="scene",p="inner")}o.push({UUID:c.uuid,oldTargetUUID:l,oldDir:p})}var h=new r;return h.gameObjectsInfo=o,h.targetDir=n,h.targetObject=t.uuid,h},r.prototype.undo=function(){if(t.prototype.undo.call(this)){var r=this.gameObjectsInfo.concat();r.reverse();for(var n=0;n<r.length;n++){var i=r[n],a=this.editorModel.getGameObjectByUUid(i.UUID),o=this.editorModel.getGameObjectByUUid(i.oldTargetUUID),s=i.oldDir;if("scene"===i.oldTargetUUID){var c=this.editorModel.scene.gameObjects;o=c[c.length-1],s="bottom"}this.editorModel.setGameObjectsHierarchy([a],o,s)}return this.dispatchEditorModelEvent(e.EditorModelEvent.UPDATE_GAMEOBJECTS_HIREARCHY),!0}return!1},r.prototype.redo=function(){if(t.prototype.redo.call(this)){var r=this.gameObjectsInfo.map(function(e){return e.UUID}),n=this.editorModel.getGameObjectsByUUids(r),i=this.editorModel.getGameObjectByUUid(this.targetObject);return n=this.editorModel.sortGameObjectsForHierarchy(n),this.editorModel.setGameObjectsHierarchy(n,i,this.targetDir),this.dispatchEditorModelEvent(e.EditorModelEvent.UPDATE_GAMEOBJECTS_HIREARCHY),!0}return!1},r}(e.BaseState);e.GameObjectHierarchyState=t,__reflect(t.prototype,"paper.editor.GameObjectHierarchyState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.toString=function(){return"[class common.CreatePrefabState]"},r.create=function(e,t){var n=new r,i=t?t.uuid:void 0,a={prefab:e,parentUUID:i};return n.data=a,n},Object.defineProperty(r.prototype,"stateData",{get:function(){return this.data},enumerable:!0,configurable:!0}),r.prototype.undo=function(){if(t.prototype.undo.call(this)){var r=this.stateData.cachePrefabUUid;if(r){var n=this.editorModel.getGameObjectByUUid(r);n&&(n.destroy(),this.dispatchEditorModelEvent(e.EditorModelEvent.DELETE_GAMEOBJECTS,[r]))}return!0}return!1},r.prototype.redo=function(){if(t.prototype.redo.call(this)){var r=this.stateData.prefab;if(r){var n=this.stateData.prefab.createInstance(this.editorModel.scene);this.stateData.cachePrefabUUid=n.uuid;var i=this.editorModel.getGameObjectByUUid(this.stateData.parentUUID);i&&(n.transform.parent=i.transform),this.dispatchEditorModelEvent(e.EditorModelEvent.ADD_GAMEOBJECTS)}return!0}return!1},r}(e.BaseState);e.CreatePrefabState=t,__reflect(t.prototype,"paper.editor.CreatePrefabState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){var e=null!==r&&r.apply(this,arguments)||this;return e.prefabInfos=[],e}return __extends(n,r),n.create=function(e){var t=this,r=new n;return r.prefabInfos=[],e.forEach(function(e){for(var n=0,i=r.prefabInfos;n<i.length;n++){var a=i[n];if(a.uuid===e.uuid)return}r.prefabInfos=r.prefabInfos.concat(t.makePrefabInfo(e))}),r},n.makePrefabInfo=function(e){for(var t=function(e){return e.extras.prefab?!0:!1},r=function(e){return e.extras.rootID?!0:!1},n=function(e,i){void 0===i&&(i=[]),i.push({uuid:e.uuid,linkid:e.extras.linkedID,rootid:e.extras.rootID,prefab:e.extras.prefab.name}),e.transform.children.forEach(function(e){var a=e.gameObject;r(a)&&!t(a)&&n(a,i)})},i=e,a=[];i;){if(t(i)){n(i,a);break}if(!i.transform.parent)break;i=i.transform.parent.gameObject}return a},n.prototype.redo=function(){var e=this,r=this.prefabInfos.map(function(e){return e.uuid}),n=this.editorModel.getGameObjectsByUUids(r);return n.forEach(function(r){r.extras.linkedID=void 0,r.extras.prefab=void 0,r.extras.rootID=void 0,e.dispatchEditorModelEvent(t.EditorModelEvent.CHANGE_PROPERTY,{target:r,propName:"prefab",propValue:null})}),!0},n.prototype.undo=function(){for(var r=this.editorModel.scene.gameObjects,n=0;n<r.length;n++){var i=r[n];e:for(var a=0;a<this.prefabInfos.length;a++){var o=this.prefabInfos[a];if(i.uuid===o.uuid){i.extras.linkedID=o.linkid,i.extras.prefab=e.Asset.find(o.prefab),i.extras.rootID=o.rootid,this.dispatchEditorModelEvent(t.EditorModelEvent.CHANGE_PROPERTY,{target:i,propName:"prefab",propValue:i.extras.prefab});break e}}}return!0},n.prototype.serialize=function(){return this.prefabInfos},n.prototype.deserialize=function(e){this.prefabInfos=e},n}(t.BaseState);t.BreakPrefabStructState=r,__reflect(r.prototype,"paper.editor.BreakPrefabStructState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){var e=null!==r&&r.apply(this,arguments)||this;return e.firstRedo=!0,e}return __extends(n,r),n.toString=function(){return"[class common.ApplyPrefabInstanceState]"},n.create=function(e,r,i){var a=new n,o=t.Editor.activeEditorModel.deepClone(i._raw),s={applyPrefabRootId:r,prefab:i,applyData:e,cachePrefabSerializedData:o};return s.cacheGameObjetsIds=[],s.cacheComponentsIds={},a.data=s,a},Object.defineProperty(n.prototype,"stateData",{get:function(){return this.data},enumerable:!0,configurable:!0}),n.prototype.undo=function(){if(r.prototype.undo.call(this)){for(var n=t.Editor.activeEditorModel.getGameObjectByUUid(this.stateData.applyPrefabRootId),i=this.editorModel.scene.gameObjects,a=i.length-1;a>=0&&(0!==this.stateData.cacheGameObjetsIds.length||0!==Object.keys(this.stateData.cacheComponentsIds).length);a--){var o=i[a],s=this.stateData.cacheGameObjetsIds.indexOf(o.uuid);if(s>=0)o.destroy(),this.stateData.cacheGameObjetsIds.splice(s,1);else if(this.stateData.cacheComponentsIds[o.uuid]&&this.stateData.cacheComponentsIds[o.uuid].length>0)for(var c=this.stateData.cacheComponentsIds[o.uuid],l=o.components.length-1;l>=0;l--){var p=o.components[l],u=c.indexOf(p.uuid);u>=0&&(o.removeComponent(p),c.splice(u,1),0===c.length&&delete this.stateData.cacheComponentsIds[o.uuid])}}var d=this.stateData.prefab.createInstance(e.Application.sceneManager.globalScene,!0);for(var h in this.stateData.applyData){var f=this.stateData.applyData[h];if(f.addGameObjects&&f.addGameObjects.length>0){for(var a=0;a<f.addGameObjects.length;a++){var _=f.addGameObjects[a],m=this.getGameObjectByUUid(n,_.id);m&&this.clearLinkedId(m)}this.dispatchEditorModelEvent(t.EditorModelEvent.UPDATE_GAMEOBJECTS_HIREARCHY)}if(f.addComponents&&f.addComponents.length>0){for(var a=0;a<f.addComponents.length;a++){var v=f.addComponents[a],g=v.id,y=v.gameObjId,m=this.getGameObjectByUUid(n,y);if(m){var b=t.Editor.activeEditorModel.getComponentById(m,g);b&&(b.extras={})}}this.dispatchEditorModelEvent(t.EditorModelEvent.UPDATE_GAMEOBJECTS_HIREARCHY)}if(f.modifyGameObjectPropertyList&&f.modifyGameObjectPropertyList.length>0)for(var E=0,x=f.modifyGameObjectPropertyList;E<x.length;E++){var _=x[E];this.modifyPrefabGameObjectPropertyValues(h,d,_.preValueCopylist)}if(f.modifyComponentPropertyList&&f.modifyComponentPropertyList.length>0)for(var T=0,S=f.modifyComponentPropertyList;T<S.length;T++){var _=S[T];this.modifyPrefabComponentPropertyValues(h,_.componentId,d,_.preValueCopylist)}}var M=this.stateData.cachePrefabSerializedData;return this.stateData.prefab._raw=M,this.dispatchEditorModelEvent(t.EditorModelEvent.SAVE_ASSET,{name:this.stateData.prefab.name,raw:M}),d.destroy(),d=null,!0}return!1},n.prototype.getAllUUidFromGameObject=function(e,t){if(void 0===t&&(t=null),e){t=t||[],t.push(e.uuid);for(var r=0,n=e.components;r<n.length;r++){var i=n[r];t.push(i.uuid)}for(var a=0;a<e.transform.children.length;a++){var o=e.transform.children[a],s=o.gameObject;this.getAllUUidFromGameObject(s,t)}}return t},n.prototype.setLinkedId=function(e,t){if(e){var r=t.shift();void 0===r&&console.error("linkedId error"),e.extras.linkedID=r;for(var n=0,i=e.components;n<i.length;n++){var a=i[n];r=t.shift(),void 0===r&&console.error("linkedId error"),a.extras.linkedID=r}for(var o=0;o<e.transform.children.length;o++){var s=e.transform.children[o],c=s.gameObject;3!==c.hideFlags&&this.setLinkedId(c,t)}}},n.prototype.clearLinkedId=function(e){if(e){e.extras={};for(var t=0;t<e.components.length;t++){var r=e.components[t];r.extras={}}for(var t=0;t<e.transform.children.length;t++){var r=e.transform.children[t],n=r.gameObject;this.clearLinkedId(n)}}},n.prototype.dispathPropertyEvent=function(e,r,n){this.dispatchEditorModelEvent(t.EditorModelEvent.CHANGE_PROPERTY,{target:e,propName:r,propValue:n})},n.prototype.modifyPrefabGameObjectPropertyValues=function(r,n,i){var a=this,o=this.getGameObjectByLinkedId(n,r),s=this.getGameObjectsByLinkedId(r,this.stateData.applyPrefabRootId);i.forEach(function(t){var r=t.propName,n=t.copyValue,i=t.valueEditType,c=a.editorModel.deserializeProperty(n,i);s.forEach(function(t){e.equal(t[r],o[r])&&(a.editorModel.setTargetProperty(r,t,c,i),a.dispathPropertyEvent(t,r,c))}),a.editorModel.setTargetProperty(r,o,c,i)}),this.dispatchEditorModelEvent(t.EditorModelEvent.UPDATE_GAMEOBJECTS_HIREARCHY)},n.prototype.modifyPrefabComponentPropertyValues=function(t,r,n,i){for(var a=this,o=this.getGameObjectByLinkedId(n,t),s=this.getGameObjectsByLinkedId(t,this.stateData.applyPrefabRootId),c=function(t){var n=o.components[t];n.uuid===r&&i.forEach(function(t){var r=t.propName,i=t.copyValue,o=t.valueEditType,c=a.editorModel.deserializeProperty(i,o);s.forEach(function(t){var i=a.editorModel.getComponentByAssetId(t,n.extras.linkedID);null!==i&&e.equal(i[r],n[r])&&(a.editorModel.setTargetProperty(r,i,c,o),a.dispathPropertyEvent(i,r,c))}),a.editorModel.setTargetProperty(r,n,c,o)})},l=0;l<o.components.length;l++)c(l)},n.prototype.setGameObjectPrefabRootId=function(e,t){void 0===e.extras.prefab&&(e.extras.rootID=t);for(var r=0;r<e.transform.children.length;r++){var n=e.transform.children[r],i=n.gameObject;this.setGameObjectPrefabRootId(i,t)}},n.prototype.getGameObjectsByLinkedId=function(e,t){for(var r=this.editorModel.scene.gameObjects,n=[],i=0,a=r;i<a.length;i++){var o=a[i];o.extras&&o.extras.linkedID&&o.extras.linkedID===e&&(o.extras.prefab||o.extras.rootID&&o.extras.rootID!==t)&&o.uuid!==t&&n.push(o)}return n},n.prototype.getGameObjectByLinkedId=function(e,t){if(!e)return null;var r;if(e.extras.linkedID===t)return r=e,e;for(var n=0;n<e.transform.children.length;n++){var i=e.transform.children[n],a=i.gameObject;if(r=this.getGameObjectByLinkedId(a,t))break}return r},n.prototype.getGameObjectByUUid=function(e,t){if(!e)return null;var r;if(e.uuid===t)return r=e,e;for(var n=0;n<e.transform.children.length;n++){var i=e.transform.children[n],a=i.gameObject;if(r=this.getGameObjectByUUid(a,t))break}return r},n.prototype.redo=function(){if(r.prototype.redo.call(this)){for(var n=this.stateData.prefab.createInstance(e.Application.sceneManager.globalScene,!0),i=t.Editor.activeEditorModel.getAllGameObjectsFromPrefabInstance(n),a=t.Editor.activeEditorModel.getGameObjectByUUid(this.stateData.applyPrefabRootId),o=0,s=i;o<s.length;o++){var c=s[o];if(this.stateData.applyData[c.extras.linkedID]){var l=this.stateData.applyData[c.extras.linkedID];if(l.addGameObjects&&l.addGameObjects.length>0){for(var p=0;p<l.addGameObjects.length;p++){var u=l.addGameObjects[p],d=[],h=void 0;if(this.firstRedo)h=(new e.Deserializer).deserialize(u.serializeData,!1,!1,e.Application.sceneManager.globalScene),h.parent=c,d=this.getAllUUidFromGameObject(h),u.cacheSerializeData=Object.create(null),u.cacheSerializeData[c.uuid]=[],u.cacheSerializeData[c.uuid][p]=e.serialize(h);else{var f=u.cacheSerializeData[c.uuid][p];h=(new e.Deserializer).deserialize(f,!0,!1,e.Application.sceneManager.globalScene),h.parent=c,d=this.getAllUUidFromGameObject(h)}for(var _=c.extras.linkedID,m=this.getGameObjectsByLinkedId(_,this.stateData.applyPrefabRootId),v=0,g=m;v<g.length;v++){var y=g[v],b=void 0;if(this.firstRedo){b=(new e.Deserializer).deserialize(u.serializeData,!1,!1,this.editorModel.scene),b.parent=y;var E=y.extras.prefab?y.uuid:y.extras.rootID;this.setGameObjectPrefabRootId(b,E),this.setLinkedId(b,d.concat()),u.cacheSerializeData[y.uuid]=[],u.cacheSerializeData[y.uuid][p]=this.clearExtrasFromSerilizeData(e.serialize(b))}else{var f=u.cacheSerializeData[y.uuid][p];b=(new e.Deserializer).deserialize(f,!0,!1,this.editorModel.scene),b.parent=y;var E=y.extras.prefab?y.uuid:y.extras.rootID;this.setGameObjectPrefabRootId(b,E),this.setLinkedId(b,d.concat())}b&&this.stateData.cacheGameObjetsIds.push(b.uuid)}var x=this.getGameObjectByUUid(a,u.id);x&&(this.setGameObjectPrefabRootId(x,this.stateData.applyPrefabRootId),this.setLinkedId(x,d.concat()))}this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_GAMEOBJECTS)}if(l.addComponents&&l.addComponents.length>0){for(var T=0,S=l.addComponents;T<S.length;T++){var u=S[T],M=void 0;if(this.firstRedo)M=(new e.Deserializer).deserialize(u.serializeData,!1,!1,c),u.cacheSerializeData=Object.create(null),u.cacheSerializeData[c.uuid]=e.serialize(M);else{var f=u.cacheSerializeData[c.uuid];M=(new e.Deserializer).deserialize(f,!0,!1,c)}for(var _=c.extras.linkedID,m=this.getGameObjectsByLinkedId(_,this.stateData.applyPrefabRootId),C=0,O=m;C<O.length;C++){var y=O[C],A=void 0;if(this.firstRedo)A=(new e.Deserializer).deserialize(u.serializeData,!1,!1,y),A.extras.linkedID=M.uuid,u.cacheSerializeData[y.uuid]=this.clearExtrasFromSerilizeData(e.serialize(A));else{var f=u.cacheSerializeData[y.uuid];A=(new e.Deserializer).deserialize(f,!0,!1,y),A.extras.linkedID=M.uuid}this.stateData.cacheComponentsIds[y.uuid]=this.stateData.cacheComponentsIds[y.uuid]||[],A&&this.stateData.cacheComponentsIds[y.uuid].push(A.uuid)}var x=this.getGameObjectByUUid(a,u.gameObjId);if(x){var R=t.Editor.activeEditorModel.getComponentById(x,u.id);R.extras.linkedID=M.uuid}}this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_COMPONENT)}if(l.modifyGameObjectPropertyList&&l.modifyGameObjectPropertyList.length>0)for(var P=0,L=l.modifyGameObjectPropertyList;P<L.length;P++){var u=L[P];this.modifyPrefabGameObjectPropertyValues(c.extras.linkedID,n,u.newValueList)}if(l.modifyComponentPropertyList&&l.modifyComponentPropertyList.length>0)for(var I=0,w=l.modifyComponentPropertyList;I<w.length;I++){var u=w[I];this.modifyPrefabComponentPropertyValues(c.extras.linkedID,u.componentId,n,u.newValueList)}}}this.clearGameObjectExtrasInfo(n);var D=this.clearExtrasFromSerilizeData(e.serialize(n));return this.stateData.prefab._raw=D,this.dispatchEditorModelEvent(t.EditorModelEvent.SAVE_ASSET,{name:this.stateData.prefab.name,raw:D}),n.destroy(),this.firstRedo=!1,!0}return!1},n.prototype.clearGameObjectExtrasInfo=function(e){if(e){delete e.extras;for(var t=0,r=e.components;t<r.length;t++){var n=r[t];delete n.extras}for(var i=0;i<e.transform.children.length;i++){var a=e.transform.children[i],o=a.gameObject;this.clearGameObjectExtrasInfo(o)}}},n.prototype.clearExtrasFromSerilizeData=function(e){for(var t=e.objects,r=e.components,n=0,i=t;n<i.length;n++){var a=i[n];delete a.extras}for(var o=0,s=r;o<s.length;o++){var c=s[o];delete c.extras}return e},n}(t.BaseState);t.ApplyPrefabInstanceState=r,__reflect(r.prototype,"paper.editor.ApplyPrefabInstanceState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(t){var r=function(r){function n(){return null!==r&&r.apply(this,arguments)||this}return __extends(n,r),n.toString=function(){return"[class common.RevertPrefabInstanceState]"},n.create=function(e,t){var r=new n,i={revertData:e,revertPrefabRootId:t};return r.data=i,r},Object.defineProperty(n.prototype,"stateData",{get:function(){return this.data},enumerable:!0,configurable:!0}),n.prototype.undo=function(){if(r.prototype.undo.call(this)){for(var n=t.Editor.activeEditorModel.getGameObjectByUUid(this.stateData.revertPrefabRootId),i=t.Editor.activeEditorModel.getAllGameObjectsFromPrefabInstance(n),a=0,o=i;a<o.length;a++){var s=o[a];if(this.stateData.revertData[s.extras.linkedID]){var c=this.stateData.revertData[s.extras.linkedID];if(c.revertGameObjects&&c.revertGameObjects.length>0){for(var l=0,p=c.revertGameObjects;l<p.length;l++){var u=p[l],d=u.serializeData,h=(new e.Deserializer).deserialize(d,!0,!1,this.editorModel.scene);h.parent=s}this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_GAMEOBJECTS)}if(c.revertComponents&&c.revertComponents.length>0){for(var f=0,_=c.revertComponents;f<_.length;f++){var m=_[f],d=m.serializeData;(new e.Deserializer).deserialize(d,!0,!1,s)}this.dispatchEditorModelEvent(t.EditorModelEvent.ADD_COMPONENT)}if(c.modifyGameObjectPropertyList&&c.modifyGameObjectPropertyList.length>0)for(var v=0,g=c.modifyGameObjectPropertyList;v<g.length;v++){var u=g[v],y=u.newValueList;this.modifyPrefabGameObjectPropertyValues(s,y)}if(c.modifyComponentPropertyList&&c.modifyComponentPropertyList.length>0)for(var b=0,E=c.modifyComponentPropertyList;b<E.length;b++){var u=E[b],x=u.componentId,y=u.preValueCopylist;this.modifyPrefabComponentPropertyValues(s,x,y)}}}return!0}return!1},n.prototype.dispathPropertyEvent=function(e,r,n){this.dispatchEditorModelEvent(t.EditorModelEvent.CHANGE_PROPERTY,{target:e,propName:r,propValue:n})},n.prototype.modifyPrefabGameObjectPropertyValues=function(e,t){var r=this;t.forEach(function(t){return __awaiter(r,void 0,void 0,function(){var r,n,i,a;return __generator(this,function(o){return r=t.propName,n=t.copyValue,i=t.valueEditType,a=this.editorModel.deserializeProperty(n,i),this.editorModel.setTargetProperty(r,e,a,i),this.dispathPropertyEvent(e,r,a),[2]})})})},n.prototype.modifyPrefabComponentPropertyValues=function(e,t,r){for(var n=this,i=function(i){var a=e.components[i];a.uuid===t&&r.forEach(function(e){return __awaiter(n,void 0,void 0,function(){var t,r,n,i;return __generator(this,function(o){return t=e.propName,r=e.copyValue,n=e.valueEditType,i=this.editorModel.deserializeProperty(r,n),this.editorModel.setTargetProperty(t,a,i,n),this.dispathPropertyEvent(a,t,i),[2]})})})},a=0;a<e.components.length;a++)i(a)},n.prototype.redo=function(){if(r.prototype.redo.call(this)){for(var e=t.Editor.activeEditorModel.getGameObjectByUUid(this.stateData.revertPrefabRootId),n=t.Editor.activeEditorModel.getAllGameObjectsFromPrefabInstance(e),i=[],a=function(e){if(!o.stateData.revertData[e.extras.linkedID])return"continue";var r=o.stateData.revertData[e.extras.linkedID];if(r.revertGameObjects&&r.revertGameObjects.length>0&&r.revertGameObjects.forEach(function(e){i.push(e.id)}),r.revertComponents&&r.revertComponents.length>0){var n=[];r.revertComponents.forEach(function(e){n.push(e.id)});for(var a=e.components,s=a.length-1;s>=0;s--){var c=a[s];n.indexOf(c.uuid)>=0&&e.removeComponent(c.constructor)}o.dispatchEditorModelEvent(t.EditorModelEvent.REMOVE_COMPONENT)}if(r.modifyGameObjectPropertyList&&r.modifyGameObjectPropertyList.length>0)for(var l=0,p=r.modifyGameObjectPropertyList;l<p.length;l++){var u=p[l],d=u.newValueList;o.modifyPrefabGameObjectPropertyValues(e,d)}if(r.modifyComponentPropertyList&&r.modifyComponentPropertyList.length>0)for(var h=0,f=r.modifyComponentPropertyList;h<f.length;h++){var u=f[h],_=u.componentId,d=u.newValueList;o.modifyPrefabComponentPropertyValues(e,_,d)}},o=this,s=0,c=n;s<c.length;s++){var l=c[s];a(l)}var p=t.Editor.activeEditorModel.getGameObjectsByUUids(i);return p.forEach(function(e){return e.destroy()}),this.dispatchEditorModelEvent(t.EditorModelEvent.DELETE_GAMEOBJECTS,i),!0}return!1},n}(t.BaseState);t.RevertPrefabInstanceState=r,__reflect(r.prototype,"paper.editor.RevertPrefabInstanceState")}(t=e.editor||(e.editor={}))}(paper||(paper={}));var paper;!function(e){var t;!function(e){function t(){return new o}function r(e){return s.test(e)}function n(e){if(!r(e))throw new Error("invalid uuid");return new a(e)}function i(){return t().asHex()}var a=function(){function e(e){this._value=e}return e.prototype.asHex=function(){return this._value},e}();__reflect(a.prototype,"ValueUUID",["paper.editor.UUID"]);var o=function(e){function t(){return e.call(this,[t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),"-",t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),"-","4",t._randomHex(),t._randomHex(),t._randomHex(),"-",t._oneOf(t._timeHighBits),t._randomHex(),t._randomHex(),t._randomHex(),"-",t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex(),t._randomHex()].join(""))||this}return __extends(t,e),t._oneOf=function(e){return e[Math.floor(e.length*Math.random())]},t._randomHex=function(){return t._oneOf(t._chars)},t._chars=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],t._timeHighBits=["8","9","a","b"],t}(a);__reflect(o.prototype,"V4UUID"),e.v4=t;var s=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;e.isUUID=r,e.parse=n,e.generateUuid=i}(t=e.editor||(e.editor={}))}(paper||(paper={}));var egret3d;!function(e){e.Matrix=e.Matrix4,e.Prefab=paper.Prefab,e.RawScene=paper.RawScene}(egret3d||(egret3d={}));var egret3d;!function(e){function t(t){void 0===t&&(t={antialias:!1}),console.info("Egret version:",paper.Application.version),console.info("Egret start."),egret.Sound=egret.web?egret.web.HtmlSound:egret.wxgame.HtmlSound,egret.Capabilities.renderMode="webgl";var i=n(t),a=r(t);t.canvas=a,t.option=i,t.webgl=a.getContext("webgl",t)||a.getContext("experimental-webgl",t),e.WebGLCapabilities.canvas=t.canvas,e.WebGLCapabilities.webgl=t.webgl,e.InputManager.init(a),e.stage.init(a,i),paper.Application.init(t);var o=paper.Application.systemManager;o.register(e.BeginSystem,0),o.register(e.AnimationSystem,5e3),o.register(e.MeshRendererSystem,7e3),o.register(e.SkinnedMeshRendererSystem,7e3),o.register(e.particle.ParticleSystem,7e3),o.register(e.Egret2DRendererSystem,7e3),o.register(e.CameraAndLightSystem,7999),o.register(e.WebGLRenderSystem,8e3),o.register(e.EndSystem,1e4),o._preRegisterSystems(),console.info("Egret start complete.")}function r(e){if(window.canvas)return window.canvas;if(e.canvas)return e.canvas;var t=document.getElementsByClassName("egret-player")[0],r=document.createElement("canvas");return t.appendChild(r),r}function n(e){if(window.canvas)return{antialias:e.antialias,antialiasSamples:4,contentWidth:e.contentWidth||640,contentHeight:e.contentHeight||1136};var t=document.getElementsByClassName("egret-player")[0];return{antialias:e.antialias,antialiasSamples:4,contentWidth:parseInt(t.getAttribute("data-content-width")),contentHeight:parseInt(t.getAttribute("data-content-height"))}}e.runEgret=t}(egret3d||(egret3d={})),window.paper=paper,window.egret3d=egret3d;